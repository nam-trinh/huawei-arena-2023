[
  {
    "NatSQL": "select count ( head.* )  from head  where  head.age > 56 "
  },
  {
    "NatSQL": "select head.name , head.born_state , head.age from head  order by head.age asc"
  },
  {
    "NatSQL": "select department.Creation , department.Name , department.Budget_in_Billions from department "
  },
  {
    "NatSQL": "select max ( department.Budget_in_Billions )  , min ( department.Budget_in_Billions )  from department "
  },
  {
    "NatSQL": "select avg ( department.Num_Employees )  from department  where  department.Ranking between 10 and 15 "
  },
  {
    "NatSQL": "select head.name from head  where  head.born_state != \"浙江\" "
  },
  {
    "NatSQL": "select  distinct department.Creation from department  where  head.born_state = \"河南\" "
  },
  {
    "NatSQL": "select head.born_state from head  where  count ( head.* )  >= 3  group by head.born_state "
  },
  {
    "NatSQL": "select department.Creation from department  group by department.Creation  order by count ( department.* )  desc limit 1"
  },
  {
    "NatSQL": "select department.Name , department.Num_Employees from department  where  management.temporary_acting = \"是\" "
  },
  {
    "NatSQL": "select count (  distinct management.temporary_acting )  from management "
  },
  {
    "NatSQL": "select count ( department.* )  from department  where  @.@ not in management.* "
  },
  {
    "NatSQL": "select  distinct head.age from management  where  management.temporary_acting = \"是\" "
  },
  {
    "NatSQL": "select head.born_state from department  where  department.Name = \"财政部\"  and  department.Name = \"国土安全部\" "
  },
  {
    "NatSQL": "select department.Department_ID , department.Name , count ( management.* )  from management  where  count ( management.* )  > 1  group by department.Department_ID "
  },
  {
    "NatSQL": "select head.head_ID , head.name from head  where  head.name like \"强\" "
  },
  {
    "NatSQL": "select count ( farm.* )  from farm "
  },
  {
    "NatSQL": "select count ( farm.* )  from farm "
  },
  {
    "NatSQL": "select farm.Total_Horses from farm  order by farm.Total_Horses asc"
  },
  {
    "NatSQL": "select farm.Total_Horses from farm  order by farm.Total_Horses asc"
  },
  {
    "NatSQL": "select farm_competition.Hosts from farm_competition  where  farm_competition.Theme != \"外星人\" "
  },
  {
    "NatSQL": "select farm_competition.Hosts from farm_competition  where  farm_competition.Theme != \"外星人\" "
  },
  {
    "NatSQL": "select farm_competition.Theme from farm_competition  order by farm_competition.Year asc"
  },
  {
    "NatSQL": "select farm_competition.Theme from farm_competition  order by farm_competition.Year asc"
  },
  {
    "NatSQL": "select avg ( farm.Working_Horses )  from farm  where  farm.Total_Horses > 5000 "
  },
  {
    "NatSQL": "select avg ( farm.Working_Horses )  from farm  where  farm.Total_Horses > 5000 "
  },
  {
    "NatSQL": "select max ( farm.Cows )  , min ( farm.Cows )  from farm "
  },
  {
    "NatSQL": "select max ( farm.Cows )  , min ( farm.Cows )  from farm "
  },
  {
    "NatSQL": "select count (  distinct city.Status )  from city "
  },
  {
    "NatSQL": "select count (  distinct city.Status )  from city "
  },
  {
    "NatSQL": "select city.Official_Name from city  order by city.Population desc"
  },
  {
    "NatSQL": "select city.Official_Name from city  order by city.Population desc"
  },
  {
    "NatSQL": "select city.Official_Name , city.Status from city  order by city.Population desc limit 1"
  },
  {
    "NatSQL": "select city.Official_Name , city.Status from city  order by city.Population desc limit 1"
  },
  {
    "NatSQL": "select farm_competition.Year , city.Official_Name from city "
  },
  {
    "NatSQL": "select farm_competition.Year , city.Official_Name from city "
  },
  {
    "NatSQL": "select city.Official_Name from city  where  count ( farm_competition.* )  > 1  group by farm_competition.Host_city_ID "
  },
  {
    "NatSQL": "select city.Official_Name from city  where  count ( farm_competition.* )  > 1  group by farm_competition.Host_city_ID "
  },
  {
    "NatSQL": "select city.Status from city  group by farm_competition.Host_city_ID  order by count ( farm_competition.* )  desc limit 1"
  },
  {
    "NatSQL": "select city.Status from city  group by farm_competition.Host_city_ID  order by count ( farm_competition.* )  desc limit 1"
  },
  {
    "NatSQL": "select farm_competition.Theme from city  where  city.Population > 1000 "
  },
  {
    "NatSQL": "select farm_competition.Theme from city  where  city.Population > 1000 "
  },
  {
    "NatSQL": "select city.Status , avg ( city.Population )  from city  group by city.Status "
  },
  {
    "NatSQL": "select city.Status , avg ( city.Population )  from city  group by city.Status "
  },
  {
    "NatSQL": "select city.Status from city  group by city.Status  order by count ( city.* )  asc"
  },
  {
    "NatSQL": "select city.Status from city  group by city.Status  order by count ( city.* )  asc"
  },
  {
    "NatSQL": "select city.Status from city  group by city.Status  order by count ( city.* )  desc limit 1"
  },
  {
    "NatSQL": "select city.Status from city  group by city.Status  order by count ( city.* )  desc limit 1"
  },
  {
    "NatSQL": "select city.Official_Name from city  where  @.@ not in farm_competition.* "
  },
  {
    "NatSQL": "select city.Official_Name from city  where  @.@ not in farm_competition.* "
  },
  {
    "NatSQL": "select city.Status from city  where  city.Population > 1500  and  city.Population < 500 "
  },
  {
    "NatSQL": "select city.Status from city  where  city.Population > 1500  and  city.Population < 500 "
  },
  {
    "NatSQL": "select city.Official_Name from city  where  city.Population > 1500  or  city.Population < 500 "
  },
  {
    "NatSQL": "select city.Official_Name from city  where  city.Population > 1500  or  city.Population < 500 "
  },
  {
    "NatSQL": "select city.Census_Ranking from city  where  city.Status != \"乡村\" "
  },
  {
    "NatSQL": "select city.Census_Ranking from city  where  city.Status != \"乡村\" "
  },
  {
    "NatSQL": "select courses.course_name from courses  group by courses.course_id  order by count ( student_course_registrations.* )  desc limit 1"
  },
  {
    "NatSQL": "select courses.course_name from courses  group by courses.course_id  order by count ( student_course_registrations.* )  desc limit 1"
  },
  {
    "NatSQL": "select student_course_registrations.student_id from student_course_registrations  group by student_course_registrations.student_id  order by count ( student_course_registrations.* )  asc limit 1"
  },
  {
    "NatSQL": "select student_course_registrations.student_id from student_course_registrations  group by student_course_registrations.student_id  order by count ( student_course_registrations.* )  asc limit 1"
  },
  {
    "NatSQL": "select people.first_name , people.last_name from candidates  where  @.@ join candidates.* "
  },
  {
    "NatSQL": "select people.first_name , people.last_name from candidates  where  @.@ join candidates.* "
  },
  {
    "NatSQL": "select students.student_id from students  where  @.@ not in student_course_attendance.* "
  },
  {
    "NatSQL": "select students.student_id from students  where  @.@ not in student_course_attendance.* "
  },
  {
    "NatSQL": "select student_course_attendance.student_id from student_course_attendance "
  },
  {
    "NatSQL": "select student_course_attendance.student_id from student_course_attendance "
  },
  {
    "NatSQL": "select student_course_registrations.student_id , courses.course_name from student_course_registrations "
  },
  {
    "NatSQL": "select students.student_details from student_course_registrations  order by student_course_registrations.registration_date desc limit 1"
  },
  {
    "NatSQL": "select students.student_details from student_course_registrations  order by student_course_registrations.registration_date desc limit 1"
  },
  {
    "NatSQL": "select count ( student_course_attendance.* )  from courses  where  courses.course_name = \"英语\" "
  },
  {
    "NatSQL": "select count ( student_course_attendance.* )  from courses  where  courses.course_name = \"英语\" "
  },
  {
    "NatSQL": "select count ( courses.* )  from courses  where  student_course_attendance.student_id = 171 "
  },
  {
    "NatSQL": "select count ( courses.* )  from courses  where  student_course_attendance.student_id = 171 "
  },
  {
    "NatSQL": "select candidates.candidate_id from people  where  people.email_address = \"stanley.monahan@example.org\" "
  },
  {
    "NatSQL": "select candidates.candidate_id from people  where  people.email_address = \"stanley.monahan@example.org\" "
  },
  {
    "NatSQL": "select candidate_assessments.candidate_id from candidate_assessments  order by candidate_assessments.assessment_date desc limit 1"
  },
  {
    "NatSQL": "select candidate_assessments.candidate_id from candidate_assessments  order by candidate_assessments.assessment_date desc limit 1"
  },
  {
    "NatSQL": "select students.student_details from students  group by students.student_id  order by count ( student_course_registrations.* )  desc limit 1"
  },
  {
    "NatSQL": "select students.student_details from students  group by students.student_id  order by count ( student_course_registrations.* )  desc limit 1"
  },
  {
    "NatSQL": "select students.student_id , count ( student_course_registrations.* )  from students  group by students.student_id "
  },
  {
    "NatSQL": "select students.student_id , count ( student_course_registrations.* )  from students  group by students.student_id "
  },
  {
    "NatSQL": "select courses.course_name , count ( students.* )  from students  group by student_course_registrations.course_id "
  },
  {
    "NatSQL": "select courses.course_name , count ( students.* )  from students  group by student_course_registrations.course_id "
  },
  {
    "NatSQL": "select candidate_assessments.candidate_id from candidate_assessments  where  candidate_assessments.asessment_outcome_code = \"通过\" "
  },
  {
    "NatSQL": "select candidate_assessments.candidate_id from candidate_assessments  where  candidate_assessments.asessment_outcome_code = \"通过\" "
  },
  {
    "NatSQL": "select people.cell_mobile_number from candidates  where  candidate_assessments.asessment_outcome_code = \"失败\" "
  },
  {
    "NatSQL": "select people.cell_mobile_number from candidates  where  candidate_assessments.asessment_outcome_code = \"失败\" "
  },
  {
    "NatSQL": "select student_course_attendance.student_id from student_course_attendance  where  student_course_attendance.course_id = 301 "
  },
  {
    "NatSQL": "select student_course_attendance.student_id from student_course_attendance  where  student_course_attendance.course_id = 301 "
  },
  {
    "NatSQL": "select student_course_attendance.student_id from student_course_attendance  where  student_course_attendance.course_id = 301  order by student_course_attendance.date_of_attendance desc limit 1"
  },
  {
    "NatSQL": "select student_course_attendance.student_id from student_course_attendance  where  student_course_attendance.course_id = 301  order by student_course_attendance.date_of_attendance desc limit 1"
  },
  {
    "NatSQL": "select  distinct addresses.city from addresses  where  @.@ join people_addresses.* "
  },
  {
    "NatSQL": "select  distinct addresses.city from addresses  where  @.@ join people_addresses.* "
  },
  {
    "NatSQL": "select  distinct addresses.city from addresses  where  @.@ join people_addresses.*  and  @.@ join students.* "
  },
  {
    "NatSQL": "select  distinct addresses.city from addresses  where  @.@ join people_addresses.*  and  @.@ join students.* "
  },
  {
    "NatSQL": "select courses.course_name from courses  order by courses.course_name asc"
  },
  {
    "NatSQL": "select courses.course_name from courses  order by courses.course_name asc"
  },
  {
    "NatSQL": "select people.first_name from people  order by people.first_name asc"
  },
  {
    "NatSQL": "select people.first_name from people  order by people.first_name asc"
  },
  {
    "NatSQL": "select student_course_registrations.student_id from student_course_registrations  where  union_  @.@ is student_course_attendance.* "
  },
  {
    "NatSQL": "select student_course_registrations.student_id from student_course_registrations  where  union_  @.@ is student_course_attendance.* "
  },
  {
    "NatSQL": "select student_course_registrations.course_id from student_course_registrations  where  student_course_registrations.student_id = 121  or  student_course_attendance.student_id = 121 "
  },
  {
    "NatSQL": "select student_course_registrations.course_id from student_course_registrations  where  student_course_registrations.student_id = 121  or  student_course_attendance.student_id = 121 "
  },
  {
    "NatSQL": "select student_course_registrations.* from student_course_registrations  where  @.@ not in student_course_attendance.* "
  },
  {
    "NatSQL": "select student_course_registrations.* from student_course_registrations  where  @.@ not in student_course_attendance.* "
  },
  {
    "NatSQL": "select student_course_registrations.student_id from courses  where  courses.course_name = \"统计学\"  order by student_course_registrations.registration_date asc"
  },
  {
    "NatSQL": "select student_course_registrations.student_id from courses  where  courses.course_name = \"统计学\"  order by student_course_registrations.registration_date asc"
  },
  {
    "NatSQL": "select student_course_attendance.student_id from courses  where  courses.course_name = \"统计学\"  order by student_course_attendance.date_of_attendance asc"
  },
  {
    "NatSQL": "select student_course_attendance.student_id from courses  where  courses.course_name = \"统计学\"  order by student_course_attendance.date_of_attendance asc"
  },
  {
    "NatSQL": "select weather.date from weather  where  weather.max_temperature_f > 85 "
  },
  {
    "NatSQL": "select weather.date from weather  where  weather.max_temperature_f > 85 "
  },
  {
    "NatSQL": "select station.name from station  where  station.lat < 37.5 "
  },
  {
    "NatSQL": "select station.name from station  where  station.lat < 37.5 "
  },
  {
    "NatSQL": "select station.city , max ( station.lat )  from station  group by station.city "
  },
  {
    "NatSQL": "select station.city , max ( station.lat )  from station  group by station.city "
  },
  {
    "NatSQL": "select trip.start_station_name , trip.end_station_name from trip  order by trip.id asc limit 3"
  },
  {
    "NatSQL": "select trip.start_station_name , trip.end_station_name from trip  order by trip.id asc limit 3"
  },
  {
    "NatSQL": "select avg ( station.lat )  , avg ( station.long )  from station  where  station.city = \"长沙\" "
  },
  {
    "NatSQL": "select avg ( station.lat )  , avg ( station.long )  from station  where  station.city = \"长沙\" "
  },
  {
    "NatSQL": "select trip.id from trip  order by trip.duration asc limit 1"
  },
  {
    "NatSQL": "select trip.id from trip  order by trip.duration asc limit 1"
  },
  {
    "NatSQL": "select sum ( trip.duration )  , max ( trip.duration )  from trip  where  trip.bike_id = 636 "
  },
  {
    "NatSQL": "select sum ( trip.duration )  , max ( trip.duration )  from trip  where  trip.bike_id = 636 "
  },
  {
    "NatSQL": "select weather.zip_code , avg ( weather.mean_temperature_f )  from weather  where  weather.date like \"八月\"  group by weather.zip_code "
  },
  {
    "NatSQL": "select weather.zip_code , avg ( weather.mean_temperature_f )  from weather  where  weather.date like \"八月\"  group by weather.zip_code "
  },
  {
    "NatSQL": "select count (  distinct trip.bike_id )  from trip "
  },
  {
    "NatSQL": "select count (  distinct trip.bike_id )  from trip "
  },
  {
    "NatSQL": "select count (  distinct station.city )  from station "
  },
  {
    "NatSQL": "select count (  distinct station.city )  from station "
  },
  {
    "NatSQL": "select count ( station.* )  from station  where  station.city = \"重庆\" "
  },
  {
    "NatSQL": "select count ( station.* )  from station  where  station.city = \"重庆\" "
  },
  {
    "NatSQL": "select  distinct station.name from station  where  status.bikes_available = 7 "
  },
  {
    "NatSQL": "select  distinct station.name from station  where  status.bikes_available = 7 "
  },
  {
    "NatSQL": "select trip.start_station_name , trip.start_station_id from trip  where  trip.start_date like \"八月\"  group by trip.start_station_name  order by count ( trip.* )  desc limit 1"
  },
  {
    "NatSQL": "select trip.start_station_name , trip.start_station_id from trip  where  trip.start_date like \"八月\"  group by trip.start_station_name  order by count ( trip.* )  desc limit 1"
  },
  {
    "NatSQL": "select trip.bike_id from trip  where  trip.zip_code = 94002  group by trip.bike_id  order by count ( trip.* )  desc limit 1"
  },
  {
    "NatSQL": "select trip.bike_id from trip  where  trip.zip_code = 94002  group by trip.bike_id  order by count ( trip.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( weather.* )  from weather  where  weather.mean_humidity > 50  and  weather.mean_visibility_miles > 8 "
  },
  {
    "NatSQL": "select count ( weather.* )  from weather  where  weather.mean_humidity > 50  and  weather.mean_visibility_miles > 8 "
  },
  {
    "NatSQL": "select station.lat , station.long , station.city from station  order by trip.duration asc limit 1"
  },
  {
    "NatSQL": "select station.lat , station.long , station.city from station  order by trip.duration asc limit 1"
  },
  {
    "NatSQL": "select station.id from station  where  station.city = \"厦门\"  and  avg ( status.bikes_available )  > 10 "
  },
  {
    "NatSQL": "select station.id from station  where  station.city = \"厦门\"  and  avg ( status.bikes_available )  > 10 "
  },
  {
    "NatSQL": "select station.name , station.id from station  where  avg ( status.bikes_available )  > 14  or  station.installation_date like \"十二月\"  group by status.station_id "
  },
  {
    "NatSQL": "select station.name , station.id from station  where  avg ( status.bikes_available )  > 14  or  station.installation_date like \"十二月\"  group by status.station_id "
  },
  {
    "NatSQL": "select weather.cloud_cover from weather  where  weather.zip_code = 94107  group by weather.cloud_cover  order by count ( weather.* )  desc limit 3"
  },
  {
    "NatSQL": "select weather.cloud_cover from weather  where  weather.zip_code = 94107  group by weather.cloud_cover  order by count ( weather.* )  desc limit 3"
  },
  {
    "NatSQL": "select weather.zip_code from weather  group by weather.zip_code  order by avg ( weather.mean_sea_level_pressure_inches )  asc limit 1"
  },
  {
    "NatSQL": "select weather.zip_code from weather  group by weather.zip_code  order by avg ( weather.mean_sea_level_pressure_inches )  asc limit 1"
  },
  {
    "NatSQL": "select avg ( status.bikes_available )  from status  where  @.@ not in station.*  and  station.city = \"西安\" "
  },
  {
    "NatSQL": "select avg ( status.bikes_available )  from status  where  @.@ not in station.*  and  station.city = \"西安\" "
  },
  {
    "NatSQL": "select avg ( station.long )  from station  where  @.@ not in status.*  and  max ( status.bikes_available )  > 10 "
  },
  {
    "NatSQL": "select avg ( station.long )  from station  where  @.@ not in status.*  and  max ( status.bikes_available )  > 10 "
  },
  {
    "NatSQL": "select weather.date , weather.zip_code from weather  where  weather.max_temperature_f >= 80 "
  },
  {
    "NatSQL": "select weather.date , weather.zip_code from weather  where  weather.max_temperature_f >= 80 "
  },
  {
    "NatSQL": "select trip.id from trip  where  avg ( weather.mean_temperature_f )  > 60  group by weather.zip_code "
  },
  {
    "NatSQL": "select trip.id from trip  where  avg ( weather.mean_temperature_f )  > 60  group by weather.zip_code "
  },
  {
    "NatSQL": "select weather.zip_code , count ( weather.* )  from weather  where  weather.max_wind_Speed_mph >= 25  group by weather.zip_code "
  },
  {
    "NatSQL": "select weather.zip_code , count ( weather.* )  from weather  where  weather.max_wind_Speed_mph >= 25  group by weather.zip_code "
  },
  {
    "NatSQL": "select weather.date , weather.zip_code from weather  where  @.@ < min ( weather.min_dew_point_f )   and  weather.zip_code = 94107 "
  },
  {
    "NatSQL": "select weather.date , weather.zip_code from weather  where  @.@ < min ( weather.min_dew_point_f )   and  weather.zip_code = 94107 "
  },
  {
    "NatSQL": "select trip.id , station.installation_date from trip "
  },
  {
    "NatSQL": "select trip.id , station.installation_date from trip "
  },
  {
    "NatSQL": "select trip.id from trip  order by station.dock_count desc limit 1"
  },
  {
    "NatSQL": "select trip.id from trip  order by station.dock_count desc limit 1"
  },
  {
    "NatSQL": "select count ( trip.* )  from trip  where  station.city != \"厦门\" "
  },
  {
    "NatSQL": "select count ( trip.* )  from trip  where  station.city != \"厦门\" "
  },
  {
    "NatSQL": "select weather.date from weather  where  weather.zip_code = 94107  and  weather.events != \"大雾\"  and  weather.events != \"大雨\" "
  },
  {
    "NatSQL": "select weather.date from weather  where  weather.zip_code = 94107  and  weather.events != \"大雾\"  and  weather.events != \"大雨\" "
  },
  {
    "NatSQL": "select station.id from station  where  station.lat > 37.4  except_  min ( status.bikes_available )  < 7 "
  },
  {
    "NatSQL": "select station.id from station  where  station.lat > 37.4  except_  min ( status.bikes_available )  < 7 "
  },
  {
    "NatSQL": "select station.name from station  where  avg ( status.bikes_available )  > 10  and  station.city != \"长沙\"  group by status.station_id "
  },
  {
    "NatSQL": "select station.name from station  where  avg ( status.bikes_available )  > 10  and  station.city != \"长沙\"  group by status.station_id "
  },
  {
    "NatSQL": "select station.name , station.lat , station.city from station  order by station.lat asc limit 1"
  },
  {
    "NatSQL": "select station.name , station.lat , station.city from station  order by station.lat asc limit 1"
  },
  {
    "NatSQL": "select weather.date , weather.mean_temperature_f , weather.mean_humidity from weather  order by weather.max_gust_speed_mph desc limit 3"
  },
  {
    "NatSQL": "select weather.date , weather.mean_temperature_f , weather.mean_humidity from weather  order by weather.max_gust_speed_mph desc limit 3"
  },
  {
    "NatSQL": "select station.city , count ( station.* )  from station  where  count ( station.* )  >= 15  group by station.city "
  },
  {
    "NatSQL": "select station.city , count ( station.* )  from station  where  count ( station.* )  >= 15  group by station.city "
  },
  {
    "NatSQL": "select trip.start_station_id , trip.start_station_name from trip  where  count ( trip.* )  >= 200  group by trip.start_station_name "
  },
  {
    "NatSQL": "select trip.start_station_id , trip.start_station_name from trip  where  count ( trip.* )  >= 200  group by trip.start_station_name "
  },
  {
    "NatSQL": "select weather.zip_code from weather  where  avg ( weather.mean_visibility_miles )  < 10  group by weather.zip_code "
  },
  {
    "NatSQL": "select weather.zip_code from weather  where  avg ( weather.mean_visibility_miles )  < 10  group by weather.zip_code "
  },
  {
    "NatSQL": "select station.city from station  group by station.city  order by max ( station.lat )  desc"
  },
  {
    "NatSQL": "select station.city from station  group by station.city  order by max ( station.lat )  desc"
  },
  {
    "NatSQL": "select weather.date , weather.cloud_cover from weather  order by weather.cloud_cover desc limit 5"
  },
  {
    "NatSQL": "select weather.date , weather.cloud_cover from weather  order by weather.cloud_cover desc limit 5"
  },
  {
    "NatSQL": "select trip.id , trip.duration from trip  order by trip.duration desc limit 3"
  },
  {
    "NatSQL": "select trip.id , trip.duration from trip  order by trip.duration desc limit 3"
  },
  {
    "NatSQL": "select station.name , station.long , avg ( trip.duration )  from station  group by trip.start_station_id "
  },
  {
    "NatSQL": "select station.name , station.long , avg ( trip.duration )  from station  group by trip.start_station_id "
  },
  {
    "NatSQL": "select station.name , station.lat , min ( trip.duration )  from station  group by trip.end_station_id "
  },
  {
    "NatSQL": "select station.name , station.lat , min ( trip.duration )  from station  group by trip.end_station_id "
  },
  {
    "NatSQL": "select  distinct trip.start_station_name from trip  where  trip.duration < 100 "
  },
  {
    "NatSQL": "select  distinct trip.start_station_name from trip  where  trip.duration < 100 "
  },
  {
    "NatSQL": "select  distinct weather.zip_code from weather  where  except_  @.@ is weather.*  and  weather.max_dew_point_f >= 70 "
  },
  {
    "NatSQL": "select  distinct weather.zip_code from weather  where  except_  @.@ is weather.*  and  weather.max_dew_point_f >= 70 "
  },
  {
    "NatSQL": "select trip.id from trip  where  @.@ >= avg ( trip.duration )   and  trip.zip_code = 94103 "
  },
  {
    "NatSQL": "select trip.id from trip  where  @.@ >= avg ( trip.duration )   and  trip.zip_code = 94103 "
  },
  {
    "NatSQL": "select weather.date from weather  where  weather.mean_sea_level_pressure_inches between 30.3 and 31 "
  },
  {
    "NatSQL": "select weather.date from weather  where  weather.mean_sea_level_pressure_inches between 30.3 and 31 "
  },
  {
    "NatSQL": "select weather.date , weather.max_temperature_f - weather.min_temperature_f from weather  order by weather.max_temperature_f - weather.min_temperature_f asc limit 1"
  },
  {
    "NatSQL": "select weather.date , weather.max_temperature_f - weather.min_temperature_f from weather  order by weather.max_temperature_f - weather.min_temperature_f asc limit 1"
  },
  {
    "NatSQL": "select  distinct station.id , station.name from station  where  status.bikes_available > 12 "
  },
  {
    "NatSQL": "select  distinct station.id , station.name from station  where  status.bikes_available > 12 "
  },
  {
    "NatSQL": "select weather.zip_code from weather  where  avg ( weather.mean_humidity )  < 70  and  count ( trip.* )  >= 100  group by weather.zip_code "
  },
  {
    "NatSQL": "select weather.zip_code from weather  where  avg ( weather.mean_humidity )  < 70  and  count ( trip.* )  >= 100  group by weather.zip_code "
  },
  {
    "NatSQL": "select station.name from station  where  station.city = \"西安\"  except_  count ( trip.* )  > 100 "
  },
  {
    "NatSQL": "select station.name from station  where  station.city = \"西安\"  except_  count ( trip.* )  > 100 "
  },
  {
    "NatSQL": "select count ( trip.* )  from station  where  station.city = \"重庆\"  and  station.city = \"西安\" "
  },
  {
    "NatSQL": "select count ( trip.* )  from station  where  station.city = \"重庆\"  and  station.city = \"西安\" "
  },
  {
    "NatSQL": "select avg ( station.lat )  , avg ( station.long )  from station  where  @.@ join trip.* "
  },
  {
    "NatSQL": "select avg ( station.lat )  , avg ( station.long )  from station  where  @.@ join trip.* "
  },
  {
    "NatSQL": "select count ( book.* )  from book "
  },
  {
    "NatSQL": "select book.Writer from book  order by book.Writer asc"
  },
  {
    "NatSQL": "select book.Title from book  order by book.Issues asc"
  },
  {
    "NatSQL": "select book.Title from book  where  book.Writer != \"钱钟书\" "
  },
  {
    "NatSQL": "select book.Title , book.Issues from book "
  },
  {
    "NatSQL": "select publication.Publication_Date from publication  order by publication.Price desc"
  },
  {
    "NatSQL": "select  distinct publication.Publisher from publication  where  publication.Price > 5000000 "
  },
  {
    "NatSQL": "select publication.Publisher from publication  order by publication.Price desc limit 1"
  },
  {
    "NatSQL": "select publication.Publication_Date from publication  order by publication.Price asc limit 3"
  },
  {
    "NatSQL": "select book.Title , publication.Publication_Date from book "
  },
  {
    "NatSQL": "select book.Writer from book  where  publication.Price > 4000000 "
  },
  {
    "NatSQL": "select book.Title from book  order by publication.Price desc"
  },
  {
    "NatSQL": "select publication.Publisher from publication  where  count ( publication.* )  > 1  group by publication.Publisher "
  },
  {
    "NatSQL": "select publication.Publisher , count ( publication.* )  from publication  group by publication.Publisher "
  },
  {
    "NatSQL": "select publication.Publication_Date from publication  group by publication.Publication_Date  order by count ( publication.* )  desc limit 1"
  },
  {
    "NatSQL": "select book.Writer from book  where  count ( book.* )  > 1  group by book.Writer "
  },
  {
    "NatSQL": "select book.Title from book  where  @.@ not in publication.* "
  },
  {
    "NatSQL": "select publication.Publisher from publication  where  publication.Price > 10000000  and  publication.Price < 5000000 "
  },
  {
    "NatSQL": "select count (  distinct publication.Publication_Date )  from publication "
  },
  {
    "NatSQL": "select count (  distinct publication.Publication_Date )  from publication "
  },
  {
    "NatSQL": "select publication.Price from publication  where  publication.Publisher = \"文学\"  or  publication.Publisher = \"机械\" "
  },
  {
    "NatSQL": "select count ( actor.* )  from actor "
  },
  {
    "NatSQL": "select count ( actor.* )  from actor "
  },
  {
    "NatSQL": "select actor.Name from actor  order by actor.Name asc"
  },
  {
    "NatSQL": "select actor.Name from actor  order by actor.Name asc"
  },
  {
    "NatSQL": "select actor.Character , actor.Duration from actor "
  },
  {
    "NatSQL": "select actor.Character , actor.Duration from actor "
  },
  {
    "NatSQL": "select actor.Name from actor  where  actor.age != 20 "
  },
  {
    "NatSQL": "select actor.Name from actor  where  actor.age != 20 "
  },
  {
    "NatSQL": "select actor.Character from actor  order by actor.age desc"
  },
  {
    "NatSQL": "select actor.Character from actor  order by actor.age desc"
  },
  {
    "NatSQL": "select actor.Duration from actor  order by actor.age desc limit 1"
  },
  {
    "NatSQL": "select actor.Duration from actor  order by actor.age desc limit 1"
  },
  {
    "NatSQL": "select musical.Name from musical  where  musical.Nominee = \"梁朝伟\" "
  },
  {
    "NatSQL": "select musical.Name from musical  where  musical.Nominee = \"梁朝伟\" "
  },
  {
    "NatSQL": "select  distinct musical.Nominee from musical  where  musical.Award != \"金鸡奖\" "
  },
  {
    "NatSQL": "select  distinct musical.Nominee from musical  where  musical.Award != \"金鸡奖\" "
  },
  {
    "NatSQL": "select actor.Name , musical.Name from actor "
  },
  {
    "NatSQL": "select actor.Name , musical.Name from actor "
  },
  {
    "NatSQL": "select actor.Name from actor  where  musical.Name = \"歌剧魅影\" "
  },
  {
    "NatSQL": "select actor.Name from actor  where  musical.Name = \"歌剧魅影\" "
  },
  {
    "NatSQL": "select actor.Name from actor  order by musical.Year desc"
  },
  {
    "NatSQL": "select actor.Name from actor  order by musical.Year desc"
  },
  {
    "NatSQL": "select musical.Name , count ( actor.* )  from actor  group by actor.Musical_ID "
  },
  {
    "NatSQL": "select musical.Name , count ( actor.* )  from actor  group by actor.Musical_ID "
  },
  {
    "NatSQL": "select musical.Name from actor  where  count ( actor.* )  >= 3  group by actor.Musical_ID "
  },
  {
    "NatSQL": "select musical.Name from actor  where  count ( actor.* )  >= 3  group by actor.Musical_ID "
  },
  {
    "NatSQL": "select musical.Nominee , count ( musical.* )  from musical  group by musical.Nominee "
  },
  {
    "NatSQL": "select musical.Nominee , count ( musical.* )  from musical  group by musical.Nominee "
  },
  {
    "NatSQL": "select musical.Nominee from musical  group by musical.Nominee  order by count ( musical.* )  desc limit 1"
  },
  {
    "NatSQL": "select musical.Nominee from musical  group by musical.Nominee  order by count ( musical.* )  desc limit 1"
  },
  {
    "NatSQL": "select musical.Result from musical  group by musical.Result  order by count ( musical.* )  desc limit 1"
  },
  {
    "NatSQL": "select musical.Result from musical  group by musical.Result  order by count ( musical.* )  desc limit 1"
  },
  {
    "NatSQL": "select musical.Nominee from musical  where  count ( musical.* )  > 2  group by musical.Nominee "
  },
  {
    "NatSQL": "select musical.Nominee from musical  where  count ( musical.* )  > 2  group by musical.Nominee "
  },
  {
    "NatSQL": "select musical.Name from musical  where  @.@ not in actor.* "
  },
  {
    "NatSQL": "select musical.Name from musical  where  @.@ not in actor.* "
  },
  {
    "NatSQL": "select musical.Nominee from musical  where  musical.Award = \"金鸡奖\"  and  musical.Award = \"金马奖\" "
  },
  {
    "NatSQL": "select musical.Nominee from musical  where  musical.Award = \"金鸡奖\"  and  musical.Award = \"金马奖\" "
  },
  {
    "NatSQL": "select musical.Nominee from musical  where  musical.Award = \"金鸡奖\"  or  musical.Award = \"金像奖\" "
  },
  {
    "NatSQL": "select musical.Nominee from musical  where  musical.Award = \"金鸡奖\"  or  musical.Award = \"金像奖\" "
  },
  {
    "NatSQL": "select user_profiles.email from user_profiles  where  user_profiles.name = \"马丽\" "
  },
  {
    "NatSQL": "select user_profiles.partitionid from user_profiles  where  user_profiles.name = \"钢铁侠\" "
  },
  {
    "NatSQL": "select count ( user_profiles.* )  from user_profiles "
  },
  {
    "NatSQL": "select count ( follows.* )  from follows "
  },
  {
    "NatSQL": "select count ( follows.* )  from follows  group by follows.f1 "
  },
  {
    "NatSQL": "select count ( tweets.* )  from tweets "
  },
  {
    "NatSQL": "select count (  distinct tweets.uid )  from tweets "
  },
  {
    "NatSQL": "select user_profiles.name , user_profiles.email from user_profiles  where  user_profiles.name like \"往事随风\" "
  },
  {
    "NatSQL": "select user_profiles.name from user_profiles  where  user_profiles.email like \"巨星\"  or  user_profiles.email like \"qq\" "
  },
  {
    "NatSQL": "select tweets.text from tweets  where  tweets.text like \"实习\" "
  },
  {
    "NatSQL": "select user_profiles.name , user_profiles.email from user_profiles  where  user_profiles.followers > 1000 "
  },
  {
    "NatSQL": "select user_profiles.name from user_profiles  where  count ( follows.* )  > count ( follows.* )   and  user_profiles.name = \"蔡依林\"  group by follows.f1 "
  },
  {
    "NatSQL": "select user_profiles.name , user_profiles.email from user_profiles  where  count ( follows.* )  > 1  group by follows.f1 "
  },
  {
    "NatSQL": "select user_profiles.name from user_profiles  where  count ( tweets.* )  > 1  group by tweets.uid "
  },
  {
    "NatSQL": "select follows.f1 from user_profiles  where  user_profiles.name = \"马丽\"  and  user_profiles.name = \"苏晴\" "
  },
  {
    "NatSQL": "select follows.f1 from user_profiles  where  user_profiles.name = \"马丽\"  or  user_profiles.name = \"苏晴\" "
  },
  {
    "NatSQL": "select user_profiles.name from user_profiles  order by user_profiles.followers desc limit 1"
  },
  {
    "NatSQL": "select user_profiles.name , user_profiles.email from user_profiles  order by user_profiles.followers asc limit 1"
  },
  {
    "NatSQL": "select user_profiles.name , user_profiles.followers from user_profiles  order by user_profiles.followers desc"
  },
  {
    "NatSQL": "select user_profiles.name from user_profiles  order by user_profiles.followers desc limit 5"
  },
  {
    "NatSQL": "select tweets.text from tweets  order by tweets.createdate asc"
  },
  {
    "NatSQL": "select user_profiles.name , count ( tweets.* )  from user_profiles  group by tweets.uid "
  },
  {
    "NatSQL": "select user_profiles.name , user_profiles.partitionid from user_profiles  where  count ( tweets.* )  < 2  group by tweets.uid "
  },
  {
    "NatSQL": "select user_profiles.name , count ( user_profiles.* )  from user_profiles  where  count ( tweets.* )  > 1  group by tweets.uid "
  },
  {
    "NatSQL": "select avg ( user_profiles.followers )  from user_profiles  where  @.@ not in tweets.* "
  },
  {
    "NatSQL": "select avg ( user_profiles.followers )  from user_profiles  where  @.@ in tweets.* "
  },
  {
    "NatSQL": "select max ( user_profiles.followers )  , sum ( user_profiles.followers )  from user_profiles "
  },
  {
    "NatSQL": "select  distinct catalog_contents.catalog_entry_name from catalog_contents "
  },
  {
    "NatSQL": "select  distinct catalog_contents.catalog_entry_name from catalog_contents "
  },
  {
    "NatSQL": "select attribute_definitions.attribute_data_type from attribute_definitions  where  count ( attribute_definitions.* )  > 3  group by attribute_definitions.attribute_data_type "
  },
  {
    "NatSQL": "select attribute_definitions.attribute_data_type from attribute_definitions  where  count ( attribute_definitions.* )  > 3  group by attribute_definitions.attribute_data_type "
  },
  {
    "NatSQL": "select attribute_definitions.attribute_data_type from attribute_definitions  where  attribute_definitions.attribute_name = \"绿色\" "
  },
  {
    "NatSQL": "select attribute_definitions.attribute_data_type from attribute_definitions  where  attribute_definitions.attribute_name = \"绿色\" "
  },
  {
    "NatSQL": "select catalog_structure.catalog_level_name , catalog_structure.catalog_level_number from catalog_structure  where  catalog_structure.catalog_level_number between 5 and 10 "
  },
  {
    "NatSQL": "select catalog_structure.catalog_level_name , catalog_structure.catalog_level_number from catalog_structure  where  catalog_structure.catalog_level_number between 5 and 10 "
  },
  {
    "NatSQL": "select  distinct catalogs.catalog_publisher from catalogs  where  catalogs.catalog_publisher like \"小刚\" "
  },
  {
    "NatSQL": "select  distinct catalogs.catalog_publisher from catalogs  where  catalogs.catalog_publisher like \"小刚\" "
  },
  {
    "NatSQL": "select catalogs.catalog_publisher from catalogs  group by catalogs.catalog_publisher  order by count ( catalogs.* )  desc limit 1"
  },
  {
    "NatSQL": "select catalogs.catalog_publisher from catalogs  group by catalogs.catalog_publisher  order by count ( catalogs.* )  desc limit 1"
  },
  {
    "NatSQL": "select catalogs.catalog_name , catalogs.date_of_publication from catalogs  where  catalog_structure.catalog_level_number > 5 "
  },
  {
    "NatSQL": "select catalogs.catalog_name , catalogs.date_of_publication from catalogs  where  catalog_structure.catalog_level_number > 5 "
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  where  @.@ = catalog_contents_additional_attributes.attribute_value  order by count ( catalog_contents_additional_attributes.* )  desc limit 1"
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  where  @.@ = catalog_contents_additional_attributes.attribute_value  order by count ( catalog_contents_additional_attributes.* )  desc limit 1"
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  order by catalog_contents.price_in_dollars desc limit 1"
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  order by catalog_contents.price_in_dollars desc limit 1"
  },
  {
    "NatSQL": "select catalog_structure.catalog_level_name from catalog_contents  order by catalog_contents.price_in_dollars asc limit 1"
  },
  {
    "NatSQL": "select catalog_structure.catalog_level_name from catalog_contents  order by catalog_contents.price_in_dollars asc limit 1"
  },
  {
    "NatSQL": "select avg ( catalog_contents.price_in_euros )  , min ( catalog_contents.price_in_euros )  from catalog_contents "
  },
  {
    "NatSQL": "select avg ( catalog_contents.price_in_euros )  , min ( catalog_contents.price_in_euros )  from catalog_contents "
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  order by catalog_contents.height desc limit 1"
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  order by catalog_contents.height desc limit 1"
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  order by catalog_contents.capacity asc limit 1"
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  order by catalog_contents.capacity asc limit 1"
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  where  catalog_contents.product_stock_number like \"2\" "
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  where  catalog_contents.product_stock_number like \"2\" "
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  where  catalog_contents_additional_attributes.catalog_level_number = \"8\" "
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  where  catalog_contents_additional_attributes.catalog_level_number = \"8\" "
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  where  catalog_contents.length < 3  or  catalog_contents.width > 5 "
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  where  catalog_contents.length < 3  or  catalog_contents.width > 5 "
  },
  {
    "NatSQL": "select attribute_definitions.attribute_name , attribute_definitions.attribute_id from attribute_definitions  where  catalog_contents_additional_attributes.attribute_value = 0 "
  },
  {
    "NatSQL": "select attribute_definitions.attribute_name , attribute_definitions.attribute_id from attribute_definitions  where  catalog_contents_additional_attributes.attribute_value = 0 "
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name , catalog_contents.capacity from catalog_contents  where  catalog_contents.price_in_dollars > 700 "
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name , catalog_contents.capacity from catalog_contents  where  catalog_contents.price_in_dollars > 700 "
  },
  {
    "NatSQL": "select catalogs.date_of_latest_revision from catalogs  where  count ( catalogs.* )  > 1  group by catalogs.date_of_latest_revision "
  },
  {
    "NatSQL": "select catalogs.date_of_latest_revision from catalogs  where  count ( catalogs.* )  > 1  group by catalogs.date_of_latest_revision "
  },
  {
    "NatSQL": "select count ( catalog_contents.* )  from catalog_contents "
  },
  {
    "NatSQL": "select count ( catalog_contents.* )  from catalog_contents "
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  where  catalog_contents.next_entry_id > 8 "
  },
  {
    "NatSQL": "select catalog_contents.catalog_entry_name from catalog_contents  where  catalog_contents.next_entry_id > 8 "
  },
  {
    "NatSQL": "select count ( aircraft.* )  from aircraft "
  },
  {
    "NatSQL": "select count ( aircraft.* )  from aircraft "
  },
  {
    "NatSQL": "select aircraft.name , aircraft.distance from aircraft "
  },
  {
    "NatSQL": "select aircraft.name , aircraft.distance from aircraft "
  },
  {
    "NatSQL": "select aircraft.aid from aircraft  where  aircraft.distance > 1000 "
  },
  {
    "NatSQL": "select aircraft.aid from aircraft  where  aircraft.distance > 1000 "
  },
  {
    "NatSQL": "select count ( aircraft.* )  from aircraft  where  aircraft.distance between 1000 and 5000 "
  },
  {
    "NatSQL": "select count ( aircraft.* )  from aircraft  where  aircraft.distance between 1000 and 5000 "
  },
  {
    "NatSQL": "select aircraft.name , aircraft.distance from aircraft  where  aircraft.aid = 12 "
  },
  {
    "NatSQL": "select aircraft.name , aircraft.distance from aircraft  where  aircraft.aid = 12 "
  },
  {
    "NatSQL": "select min ( aircraft.distance )  , avg ( aircraft.distance )  , max ( aircraft.distance )  from aircraft "
  },
  {
    "NatSQL": "select min ( aircraft.distance )  , avg ( aircraft.distance )  , max ( aircraft.distance )  from aircraft "
  },
  {
    "NatSQL": "select aircraft.aid , aircraft.name from aircraft  order by aircraft.distance desc limit 1"
  },
  {
    "NatSQL": "select aircraft.aid , aircraft.name from aircraft  order by aircraft.distance desc limit 1"
  },
  {
    "NatSQL": "select aircraft.name from aircraft  order by aircraft.distance asc limit 3"
  },
  {
    "NatSQL": "select aircraft.name from aircraft  order by aircraft.distance asc limit 3"
  },
  {
    "NatSQL": "select aircraft.name from aircraft  where  @.@ > avg ( aircraft.distance )  "
  },
  {
    "NatSQL": "select aircraft.name from aircraft  where  @.@ > avg ( aircraft.distance )  "
  },
  {
    "NatSQL": "select count ( employee.* )  from employee "
  },
  {
    "NatSQL": "select count ( employee.* )  from employee "
  },
  {
    "NatSQL": "select employee.name , employee.salary from employee  order by employee.salary asc"
  },
  {
    "NatSQL": "select employee.name , employee.salary from employee  order by employee.salary asc"
  },
  {
    "NatSQL": "select employee.eid from employee  where  employee.salary > 100000 "
  },
  {
    "NatSQL": "select employee.eid from employee  where  employee.salary > 100000 "
  },
  {
    "NatSQL": "select count ( employee.* )  from employee  where  employee.salary between 100000 and 200000 "
  },
  {
    "NatSQL": "select count ( employee.* )  from employee  where  employee.salary between 100000 and 200000 "
  },
  {
    "NatSQL": "select employee.name , employee.salary from employee  where  employee.eid = 242518965 "
  },
  {
    "NatSQL": "select employee.name , employee.salary from employee  where  employee.eid = 242518965 "
  },
  {
    "NatSQL": "select avg ( employee.salary )  , max ( employee.salary )  from employee "
  },
  {
    "NatSQL": "select avg ( employee.salary )  , max ( employee.salary )  from employee "
  },
  {
    "NatSQL": "select employee.eid , employee.name from employee  order by employee.salary desc limit 1"
  },
  {
    "NatSQL": "select employee.eid , employee.name from employee  order by employee.salary desc limit 1"
  },
  {
    "NatSQL": "select employee.name from employee  order by employee.salary asc limit 3"
  },
  {
    "NatSQL": "select employee.name from employee  order by employee.salary asc limit 3"
  },
  {
    "NatSQL": "select employee.name from employee  where  @.@ > avg ( employee.salary )  "
  },
  {
    "NatSQL": "select employee.name from employee  where  @.@ > avg ( employee.salary )  "
  },
  {
    "NatSQL": "select employee.eid , employee.salary from employee  where  employee.name = \"张晓梅\" "
  },
  {
    "NatSQL": "select employee.eid , employee.salary from employee  where  employee.name = \"张晓梅\" "
  },
  {
    "NatSQL": "select count ( flight.* )  from flight "
  },
  {
    "NatSQL": "select count ( flight.* )  from flight "
  },
  {
    "NatSQL": "select flight.flno , flight.origin , flight.destination from flight  order by flight.origin asc"
  },
  {
    "NatSQL": "select flight.flno , flight.origin , flight.destination from flight  order by flight.origin asc"
  },
  {
    "NatSQL": "select flight.flno from flight  where  flight.origin = \"上海\" "
  },
  {
    "NatSQL": "select flight.flno from flight  where  flight.origin = \"上海\" "
  },
  {
    "NatSQL": "select flight.origin from flight  where  flight.destination = \"海口\" "
  },
  {
    "NatSQL": "select flight.origin from flight  where  flight.destination = \"海口\" "
  },
  {
    "NatSQL": "select flight.departure_date , flight.arrival_date from flight  where  flight.origin = \"上海\"  and  flight.destination = \"海口\" "
  },
  {
    "NatSQL": "select flight.departure_date , flight.arrival_date from flight  where  flight.origin = \"上海\"  and  flight.destination = \"海口\" "
  },
  {
    "NatSQL": "select flight.flno from flight  where  flight.distance > 2000 "
  },
  {
    "NatSQL": "select flight.flno from flight  where  flight.distance > 2000 "
  },
  {
    "NatSQL": "select avg ( flight.price )  from flight  where  flight.origin = \"上海\"  and  flight.destination = \"海口\" "
  },
  {
    "NatSQL": "select avg ( flight.price )  from flight  where  flight.origin = \"上海\"  and  flight.destination = \"海口\" "
  },
  {
    "NatSQL": "select flight.origin , flight.destination from flight  where  flight.price > 300 "
  },
  {
    "NatSQL": "select flight.origin , flight.destination from flight  where  flight.price > 300 "
  },
  {
    "NatSQL": "select flight.flno , flight.distance from flight  order by flight.price desc limit 1"
  },
  {
    "NatSQL": "select flight.flno , flight.distance from flight  order by flight.price desc limit 1"
  },
  {
    "NatSQL": "select flight.flno from flight  order by flight.distance asc limit 3"
  },
  {
    "NatSQL": "select flight.flno from flight  order by flight.distance asc limit 3"
  },
  {
    "NatSQL": "select avg ( flight.distance )  , avg ( flight.price )  from flight  where  flight.origin = \"上海\" "
  },
  {
    "NatSQL": "select avg ( flight.distance )  , avg ( flight.price )  from flight  where  flight.origin = \"上海\" "
  },
  {
    "NatSQL": "select flight.origin , count ( flight.* )  from flight  group by flight.origin "
  },
  {
    "NatSQL": "select flight.origin , count ( flight.* )  from flight  group by flight.origin "
  },
  {
    "NatSQL": "select flight.destination , count ( flight.* )  from flight  group by flight.destination "
  },
  {
    "NatSQL": "select flight.destination , count ( flight.* )  from flight  group by flight.destination "
  },
  {
    "NatSQL": "select flight.origin from flight  group by flight.origin  order by count ( flight.* )  desc limit 1"
  },
  {
    "NatSQL": "select flight.origin from flight  group by flight.origin  order by count ( flight.* )  desc limit 1"
  },
  {
    "NatSQL": "select flight.destination from flight  group by flight.destination  order by count ( flight.* )  asc limit 1"
  },
  {
    "NatSQL": "select flight.destination from flight  group by flight.destination  order by count ( flight.* )  asc limit 1"
  },
  {
    "NatSQL": "select aircraft.name from flight  where  flight.flno = 99 "
  },
  {
    "NatSQL": "select aircraft.name from flight  where  flight.flno = 99 "
  },
  {
    "NatSQL": "select flight.flno from flight  where  aircraft.name = \"空客\" "
  },
  {
    "NatSQL": "select flight.flno from flight  where  aircraft.name = \"空客\" "
  },
  {
    "NatSQL": "select aircraft.name , count ( flight.* )  from flight  group by flight.aid "
  },
  {
    "NatSQL": "select aircraft.name , count ( flight.* )  from flight  group by flight.aid "
  },
  {
    "NatSQL": "select aircraft.name from flight  where  count ( flight.* )  >= 2  group by flight.aid "
  },
  {
    "NatSQL": "select aircraft.name from flight  where  count ( flight.* )  >= 2  group by flight.aid "
  },
  {
    "NatSQL": "select count (  distinct certificate.eid )  from certificate "
  },
  {
    "NatSQL": "select count (  distinct certificate.eid )  from certificate "
  },
  {
    "NatSQL": "select employee.eid from employee  where  except_  @.@ is certificate.* "
  },
  {
    "NatSQL": "select employee.eid from employee  where  except_  @.@ is certificate.* "
  },
  {
    "NatSQL": "select aircraft.name from employee  where  employee.name = \"赵强\" "
  },
  {
    "NatSQL": "select aircraft.name from employee  where  employee.name = \"赵强\" "
  },
  {
    "NatSQL": "select employee.name from employee  where  aircraft.name = \"波音\" "
  },
  {
    "NatSQL": "select employee.name from employee  where  aircraft.name = \"波音\" "
  },
  {
    "NatSQL": "select employee.name from employee  where  aircraft.name = \"波音\"  and  aircraft.name = \"空客\" "
  },
  {
    "NatSQL": "select employee.name from employee  where  aircraft.name = \"波音\"  and  aircraft.name = \"空客\" "
  },
  {
    "NatSQL": "select employee.name from employee  where  except_  @.@ is certificate.*  and  aircraft.name = \"波音\" "
  },
  {
    "NatSQL": "select employee.name from employee  where  except_  @.@ is certificate.*  and  aircraft.name = \"波音\" "
  },
  {
    "NatSQL": "select aircraft.name from certificate  group by certificate.aid  order by count ( certificate.* )  desc limit 1"
  },
  {
    "NatSQL": "select aircraft.name from certificate  group by certificate.aid  order by count ( certificate.* )  desc limit 1"
  },
  {
    "NatSQL": "select aircraft.name from certificate  where  aircraft.distance > 5000  and  count ( certificate.* )  >= 5  group by certificate.aid "
  },
  {
    "NatSQL": "select aircraft.name from certificate  where  aircraft.distance > 5000  and  count ( certificate.* )  >= 5  group by certificate.aid "
  },
  {
    "NatSQL": "select employee.name , employee.salary from employee  group by employee.eid  order by count ( certificate.* )  desc limit 1"
  },
  {
    "NatSQL": "select employee.name , employee.salary from employee  group by employee.eid  order by count ( certificate.* )  desc limit 1"
  },
  {
    "NatSQL": "select employee.name from employee  where  aircraft.distance > 5000  group by employee.eid  order by count ( employee.* )  desc limit 1"
  },
  {
    "NatSQL": "select employee.name from employee  where  aircraft.distance > 5000  group by employee.eid  order by count ( employee.* )  desc limit 1"
  },
  {
    "NatSQL": "select count (  distinct allergy_type.Allergy )  from allergy_type "
  },
  {
    "NatSQL": "select count (  distinct allergy_type.Allergy )  from allergy_type "
  },
  {
    "NatSQL": "select count (  distinct allergy_type.AllergyType )  from allergy_type "
  },
  {
    "NatSQL": "select count (  distinct allergy_type.AllergyType )  from allergy_type "
  },
  {
    "NatSQL": "select  distinct allergy_type.AllergyType from allergy_type "
  },
  {
    "NatSQL": "select  distinct allergy_type.AllergyType from allergy_type "
  },
  {
    "NatSQL": "select allergy_type.Allergy , allergy_type.AllergyType from allergy_type "
  },
  {
    "NatSQL": "select allergy_type.Allergy , allergy_type.AllergyType from allergy_type "
  },
  {
    "NatSQL": "select  distinct allergy_type.Allergy from allergy_type  where  allergy_type.AllergyType = \"食物\" "
  },
  {
    "NatSQL": "select  distinct allergy_type.Allergy from allergy_type  where  allergy_type.AllergyType = \"食物\" "
  },
  {
    "NatSQL": "select allergy_type.AllergyType from allergy_type  where  allergy_type.Allergy = \"猫\" "
  },
  {
    "NatSQL": "select allergy_type.AllergyType from allergy_type  where  allergy_type.Allergy = \"猫\" "
  },
  {
    "NatSQL": "select count ( allergy_type.* )  from allergy_type  where  allergy_type.AllergyType = \"动物\" "
  },
  {
    "NatSQL": "select count ( allergy_type.* )  from allergy_type  where  allergy_type.AllergyType = \"动物\" "
  },
  {
    "NatSQL": "select allergy_type.AllergyType , count ( allergy_type.* )  from allergy_type  group by allergy_type.AllergyType "
  },
  {
    "NatSQL": "select allergy_type.AllergyType , count ( allergy_type.* )  from allergy_type  group by allergy_type.AllergyType "
  },
  {
    "NatSQL": "select allergy_type.AllergyType from allergy_type  group by allergy_type.AllergyType  order by count ( allergy_type.* )  desc limit 1"
  },
  {
    "NatSQL": "select allergy_type.AllergyType from allergy_type  group by allergy_type.AllergyType  order by count ( allergy_type.* )  desc limit 1"
  },
  {
    "NatSQL": "select allergy_type.AllergyType from allergy_type  group by allergy_type.AllergyType  order by count ( allergy_type.* )  asc limit 1"
  },
  {
    "NatSQL": "select allergy_type.AllergyType from allergy_type  group by allergy_type.AllergyType  order by count ( allergy_type.* )  asc limit 1"
  },
  {
    "NatSQL": "select count ( student.* )  from student "
  },
  {
    "NatSQL": "select count ( student.* )  from student "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student "
  },
  {
    "NatSQL": "select count (  distinct student.Advisor )  from student "
  },
  {
    "NatSQL": "select count (  distinct student.Advisor )  from student "
  },
  {
    "NatSQL": "select  distinct student.Major from student "
  },
  {
    "NatSQL": "select  distinct student.Major from student "
  },
  {
    "NatSQL": "select  distinct student.city_code from student "
  },
  {
    "NatSQL": "select  distinct student.city_code from student "
  },
  {
    "NatSQL": "select student.Fname , student.LName , student.Age from student  where  student.Sex = \"女\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName , student.Age from student  where  student.Sex = \"女\" "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Sex = \"男\" "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Sex = \"男\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Age = 18 "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Age = 18 "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Age > 20 "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Age > 20 "
  },
  {
    "NatSQL": "select student.city_code from student  where  student.LName = \"金\" "
  },
  {
    "NatSQL": "select student.city_code from student  where  student.LName = \"金\" "
  },
  {
    "NatSQL": "select student.Advisor from student  where  student.StuID = 1004 "
  },
  {
    "NatSQL": "select student.Advisor from student  where  student.StuID = 1004 "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.city_code = \"香港\"  or  student.city_code = \"深圳\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.city_code = \"香港\"  or  student.city_code = \"深圳\" "
  },
  {
    "NatSQL": "select min ( student.Age )  , avg ( student.Age )  , max ( student.Age )  from student "
  },
  {
    "NatSQL": "select min ( student.Age )  , avg ( student.Age )  , max ( student.Age )  from student "
  },
  {
    "NatSQL": "select student.LName from student  where  @.@ = min ( student.Age )  "
  },
  {
    "NatSQL": "select student.LName from student  where  @.@ = min ( student.Age )  "
  },
  {
    "NatSQL": "select student.StuID from student  where  @.@ = max ( student.Age )  "
  },
  {
    "NatSQL": "select student.StuID from student  where  @.@ = max ( student.Age )  "
  },
  {
    "NatSQL": "select student.Major , count ( student.* )  from student  group by student.Major "
  },
  {
    "NatSQL": "select student.Major , count ( student.* )  from student  group by student.Major "
  },
  {
    "NatSQL": "select student.Major from student  group by student.Major  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Major from student  group by student.Major  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Age , count ( student.* )  from student  group by student.Age "
  },
  {
    "NatSQL": "select student.Age , count ( student.* )  from student  group by student.Age "
  },
  {
    "NatSQL": "select avg ( student.Age )  , student.Sex from student  group by student.Sex "
  },
  {
    "NatSQL": "select avg ( student.Age )  , student.Sex from student  group by student.Sex "
  },
  {
    "NatSQL": "select student.city_code , count ( student.* )  from student  group by student.city_code "
  },
  {
    "NatSQL": "select student.city_code , count ( student.* )  from student  group by student.city_code "
  },
  {
    "NatSQL": "select student.Advisor , count ( student.* )  from student  group by student.Advisor "
  },
  {
    "NatSQL": "select student.Advisor , count ( student.* )  from student  group by student.Advisor "
  },
  {
    "NatSQL": "select student.Advisor from student  group by student.Advisor  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Advisor from student  group by student.Advisor  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( has_allergy.* )  from has_allergy  where  has_allergy.Allergy = \"猫\" "
  },
  {
    "NatSQL": "select count ( has_allergy.* )  from has_allergy  where  has_allergy.Allergy = \"猫\" "
  },
  {
    "NatSQL": "select has_allergy.StuID from has_allergy  where  count ( has_allergy.* )  >= 2  group by has_allergy.StuID "
  },
  {
    "NatSQL": "select has_allergy.StuID from has_allergy  where  count ( has_allergy.* )  >= 2  group by has_allergy.StuID "
  },
  {
    "NatSQL": "select student.StuID from student  where  except_  @.@ is has_allergy.* "
  },
  {
    "NatSQL": "select student.StuID from student  where  except_  @.@ is has_allergy.* "
  },
  {
    "NatSQL": "select count ( has_allergy.* )  from has_allergy  where  student.Sex = \"女\"  and  has_allergy.Allergy = \"牛奶\"  or  has_allergy.Allergy = \"鸡蛋\" "
  },
  {
    "NatSQL": "select count ( has_allergy.* )  from has_allergy  where  student.Sex = \"女\"  and  has_allergy.Allergy = \"牛奶\"  or  has_allergy.Allergy = \"鸡蛋\" "
  },
  {
    "NatSQL": "select count ( has_allergy.* )  from has_allergy  where  allergy_type.AllergyType = \"食物\" "
  },
  {
    "NatSQL": "select count ( has_allergy.* )  from has_allergy  where  allergy_type.AllergyType = \"食物\" "
  },
  {
    "NatSQL": "select has_allergy.Allergy from has_allergy  group by has_allergy.Allergy  order by count ( has_allergy.* )  desc limit 1"
  },
  {
    "NatSQL": "select has_allergy.Allergy from has_allergy  group by has_allergy.Allergy  order by count ( has_allergy.* )  desc limit 1"
  },
  {
    "NatSQL": "select has_allergy.Allergy , count ( has_allergy.* )  from has_allergy  group by has_allergy.Allergy "
  },
  {
    "NatSQL": "select has_allergy.Allergy , count ( has_allergy.* )  from has_allergy  group by has_allergy.Allergy "
  },
  {
    "NatSQL": "select allergy_type.AllergyType , count ( has_allergy.* )  from has_allergy  group by allergy_type.AllergyType "
  },
  {
    "NatSQL": "select allergy_type.AllergyType , count ( has_allergy.* )  from has_allergy  group by allergy_type.AllergyType "
  },
  {
    "NatSQL": "select student.LName , student.Age from student  where  @.@ in has_allergy.*  and  has_allergy.Allergy = \"牛奶\"  and  has_allergy.Allergy = \"猫\" "
  },
  {
    "NatSQL": "select student.LName , student.Age from student  where  @.@ in has_allergy.*  and  has_allergy.Allergy = \"牛奶\"  and  has_allergy.Allergy = \"猫\" "
  },
  {
    "NatSQL": "select allergy_type.Allergy , allergy_type.AllergyType from allergy_type  where  student.Fname = \"莎莎\"  order by allergy_type.Allergy asc"
  },
  {
    "NatSQL": "select allergy_type.Allergy , allergy_type.AllergyType from allergy_type  where  student.Fname = \"莎莎\"  order by allergy_type.Allergy asc"
  },
  {
    "NatSQL": "select student.Fname , student.Sex from student  where  @.@ in has_allergy.*  and  has_allergy.Allergy = \"牛奶\"  and  has_allergy.Allergy != \"猫\" "
  },
  {
    "NatSQL": "select student.Fname , student.Sex from student  where  @.@ in has_allergy.*  and  has_allergy.Allergy = \"牛奶\"  and  has_allergy.Allergy != \"猫\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from student  where  @.@ in has_allergy.*  and  allergy_type.AllergyType = \"食物\"  sub  @.@ in has_allergy.StuID  and  allergy_type.AllergyType = \"动物\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from student  where  @.@ in has_allergy.*  and  allergy_type.AllergyType = \"食物\"  sub  @.@ in has_allergy.StuID  and  allergy_type.AllergyType = \"动物\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  @.@ not in has_allergy.*  and  allergy_type.AllergyType = \"食物\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  @.@ not in has_allergy.*  and  allergy_type.AllergyType = \"食物\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Sex = \"男\"  and  @.@ in has_allergy.*  and  allergy_type.AllergyType = \"食物\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Sex = \"男\"  and  @.@ in has_allergy.*  and  allergy_type.AllergyType = \"食物\" "
  },
  {
    "NatSQL": "select  distinct student.Fname , student.city_code from student  where  has_allergy.Allergy = \"牛奶\"  or  has_allergy.Allergy = \"猫\" "
  },
  {
    "NatSQL": "select  distinct student.Fname , student.city_code from student  where  has_allergy.Allergy = \"牛奶\"  or  has_allergy.Allergy = \"猫\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Age > 18  and  @.@ not in has_allergy.*  and  allergy_type.AllergyType = \"食物\"  or  allergy_type.AllergyType = \"动物\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Age > 18  and  @.@ not in has_allergy.*  and  allergy_type.AllergyType = \"食物\"  or  allergy_type.AllergyType = \"动物\" "
  },
  {
    "NatSQL": "select student.Fname , student.Major from student  where  @.@ not in has_allergy.*  and  has_allergy.Allergy = \"大豆\" "
  },
  {
    "NatSQL": "select student.Fname , student.Major from student  where  @.@ not in has_allergy.*  and  has_allergy.Allergy = \"大豆\" "
  },
  {
    "NatSQL": "select invoices.billing_country , count ( invoices.* )  from invoices  group by invoices.billing_country  order by count ( invoices.* )  desc limit 5"
  },
  {
    "NatSQL": "select invoices.billing_country , count ( invoices.* )  from invoices  group by invoices.billing_country  order by count ( invoices.* )  desc limit 5"
  },
  {
    "NatSQL": "select invoices.billing_country , sum ( invoices.total )  from invoices  group by invoices.billing_country  order by sum ( invoices.total )  desc limit 8"
  },
  {
    "NatSQL": "select invoices.billing_country , sum ( invoices.total )  from invoices  group by invoices.billing_country  order by sum ( invoices.total )  desc limit 8"
  },
  {
    "NatSQL": "select invoices.billing_country , avg ( invoices.total )  from invoices  group by invoices.billing_country  order by avg ( invoices.total )  desc limit 10"
  },
  {
    "NatSQL": "select invoices.billing_country , avg ( invoices.total )  from invoices  group by invoices.billing_country  order by avg ( invoices.total )  desc limit 10"
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customers  order by invoices.invoice_date desc limit 5"
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customers  order by invoices.invoice_date desc limit 5"
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name , count ( invoices.* )  from customers  group by customers.id  order by count ( invoices.* )  desc limit 10"
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name , count ( invoices.* )  from customers  group by customers.id  order by count ( invoices.* )  desc limit 10"
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name , sum ( invoices.total )  from customers  group by customers.id  order by sum ( invoices.total )  desc limit 10"
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name , sum ( invoices.total )  from customers  group by customers.id  order by sum ( invoices.total )  desc limit 10"
  },
  {
    "NatSQL": "select genres.name , count ( tracks.* )  from genres  group by genres.id  order by count ( tracks.* )  desc limit 5"
  },
  {
    "NatSQL": "select genres.name , count ( tracks.* )  from genres  group by genres.id  order by count ( tracks.* )  desc limit 5"
  },
  {
    "NatSQL": "select albums.title from albums "
  },
  {
    "NatSQL": "select albums.title from albums "
  },
  {
    "NatSQL": "select albums.title from albums  order by albums.title asc"
  },
  {
    "NatSQL": "select albums.title from albums  order by albums.title asc"
  },
  {
    "NatSQL": "select albums.title from albums  where  albums.title like \"安\"  order by albums.title asc"
  },
  {
    "NatSQL": "select albums.title from albums  where  albums.title like \"安\"  order by albums.title asc"
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customers  order by invoices.total asc limit 10"
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customers  order by invoices.total asc limit 10"
  },
  {
    "NatSQL": "select sum ( invoices.total )  from invoices  where  invoices.billing_city = \"成都\"  and  invoices.billing_state = \"四川\" "
  },
  {
    "NatSQL": "select sum ( invoices.total )  from invoices  where  invoices.billing_city = \"成都\"  and  invoices.billing_state = \"四川\" "
  },
  {
    "NatSQL": "select count ( invoices.* )  from invoices  where  invoices.billing_city = \"成都\"  and  invoices.billing_state = \"四川\" "
  },
  {
    "NatSQL": "select count ( invoices.* )  from invoices  where  invoices.billing_city = \"成都\"  and  invoices.billing_state = \"四川\" "
  },
  {
    "NatSQL": "select invoices.billing_state , count ( invoices.* )  from invoices  where  invoices.billing_country = \"美国\"  group by invoices.billing_state "
  },
  {
    "NatSQL": "select invoices.billing_state , count ( invoices.* )  from invoices  where  invoices.billing_country = \"美国\"  group by invoices.billing_state "
  },
  {
    "NatSQL": "select invoices.billing_state , count ( invoices.* )  from invoices  where  invoices.billing_country = \"美国\"  group by invoices.billing_state  order by count ( invoices.* )  desc limit 1"
  },
  {
    "NatSQL": "select invoices.billing_state , count ( invoices.* )  from invoices  where  invoices.billing_country = \"美国\"  group by invoices.billing_state  order by count ( invoices.* )  desc limit 1"
  },
  {
    "NatSQL": "select invoices.billing_state , count ( invoices.* )  , sum ( invoices.total )  from invoices  where  invoices.billing_state = \"浙江\" "
  },
  {
    "NatSQL": "select invoices.billing_state , count ( invoices.* )  , sum ( invoices.total )  from invoices  where  invoices.billing_state = \"浙江\" "
  },
  {
    "NatSQL": "select albums.title from albums  where  artists.name = \"零点乐队\" "
  },
  {
    "NatSQL": "select albums.title from albums  where  artists.name = \"零点乐队\" "
  },
  {
    "NatSQL": "select count ( albums.* )  from albums  where  artists.name = \"周杰伦\" "
  },
  {
    "NatSQL": "select count ( albums.* )  from albums  where  artists.name = \"周杰伦\" "
  },
  {
    "NatSQL": "select customers.company from customers  where  customers.first_name = \"宋\"  and  customers.last_name = \"志鹏\" "
  },
  {
    "NatSQL": "select customers.company from customers  where  customers.first_name = \"宋\"  and  customers.last_name = \"志鹏\" "
  },
  {
    "NatSQL": "select customers.email , customers.phone from customers  where  customers.first_name = \"卢\"  and  customers.last_name = \"军\" "
  },
  {
    "NatSQL": "select customers.email , customers.phone from customers  where  customers.first_name = \"卢\"  and  customers.last_name = \"军\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  customers.city = \"唐山\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  customers.city = \"唐山\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  customers.state = \"浙江\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  customers.state = \"浙江\" "
  },
  {
    "NatSQL": "select customers.country from customers  where  customers.first_name = \"姜\"  and  customers.last_name = \"子玉\" "
  },
  {
    "NatSQL": "select customers.country from customers  where  customers.first_name = \"姜\"  and  customers.last_name = \"子玉\" "
  },
  {
    "NatSQL": "select albums.title from artists  where  artists.name like \"强\" "
  },
  {
    "NatSQL": "select albums.title from artists  where  artists.name like \"强\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from employees  where  employees.first_name = \"马\"  and  employees.last_name = \"志强\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from employees  where  employees.first_name = \"马\"  and  employees.last_name = \"志强\" "
  },
  {
    "NatSQL": "select employees.title , employees.phone , employees.hire_date from employees  where  employees.first_name = \"袁\"  and  employees.last_name = \"熙\" "
  },
  {
    "NatSQL": "select employees.title , employees.phone , employees.hire_date from employees  where  employees.first_name = \"袁\"  and  employees.last_name = \"熙\" "
  },
  {
    "NatSQL": "select employees.first_name , employees.last_name from employees  where  employees.first_name = \"袁\"  and  employees.last_name = \"熙\" "
  },
  {
    "NatSQL": "select employees.first_name , employees.last_name from employees  where  employees.first_name = \"袁\"  and  employees.last_name = \"熙\" "
  },
  {
    "NatSQL": "select employees.address from employees  where  employees.first_name = \"袁\"  and  employees.last_name = \"熙\" "
  },
  {
    "NatSQL": "select employees.address from employees  where  employees.first_name = \"袁\"  and  employees.last_name = \"熙\" "
  },
  {
    "NatSQL": "select employees.first_name , employees.last_name from employees  group by employees.id  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select employees.first_name , employees.last_name from employees  group by employees.id  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( employees.* )  from employees  where  employees.country = \"加拿大\" "
  },
  {
    "NatSQL": "select count ( employees.* )  from employees  where  employees.country = \"加拿大\" "
  },
  {
    "NatSQL": "select employees.phone from employees  where  employees.first_name = \"袁\"  and  employees.last_name = \"熙\" "
  },
  {
    "NatSQL": "select employees.phone from employees  where  employees.first_name = \"袁\"  and  employees.last_name = \"熙\" "
  },
  {
    "NatSQL": "select employees.first_name , employees.last_name from employees  order by employees.birth_date desc limit 1"
  },
  {
    "NatSQL": "select employees.first_name , employees.last_name from employees  order by employees.birth_date desc limit 1"
  },
  {
    "NatSQL": "select employees.first_name , employees.last_name from employees  order by employees.hire_date asc limit 10"
  },
  {
    "NatSQL": "select employees.first_name , employees.last_name from employees  order by employees.hire_date asc limit 10"
  },
  {
    "NatSQL": "select count ( employees.* )  , employees.city from employees  where  employees.title = \"运维职员\"  group by employees.city "
  },
  {
    "NatSQL": "select count ( employees.* )  , employees.city from employees  where  employees.title = \"运维职员\"  group by employees.city "
  },
  {
    "NatSQL": "select employees.first_name , employees.last_name , count (  distinct employees.reports_to )  from employees  group by employees.reports_to  order by count (  distinct employees.reports_to )  desc limit 1"
  },
  {
    "NatSQL": "select employees.first_name , employees.last_name , count (  distinct employees.reports_to )  from employees  group by employees.reports_to "
  },
  {
    "NatSQL": "select count ( invoices.* )  from customers  where  customers.first_name = \"周\"  and  customers.last_name = \"浩歌\" "
  },
  {
    "NatSQL": "select count ( invoices.* )  from customers  where  customers.first_name = \"周\"  and  customers.last_name = \"浩歌\" "
  },
  {
    "NatSQL": "select sum ( invoices.total )  from customers  where  customers.first_name = \"周\"  and  customers.last_name = \"浩歌\" "
  },
  {
    "NatSQL": "select sum ( invoices.total )  from customers  where  customers.first_name = \"周\"  and  customers.last_name = \"浩歌\" "
  },
  {
    "NatSQL": "select media_types.name from media_types "
  },
  {
    "NatSQL": "select media_types.name from media_types "
  },
  {
    "NatSQL": "select  distinct genres.name from genres "
  },
  {
    "NatSQL": "select  distinct genres.name from genres "
  },
  {
    "NatSQL": "select playlists.name from playlists "
  },
  {
    "NatSQL": "select playlists.name from playlists "
  },
  {
    "NatSQL": "select tracks.composer from tracks  where  tracks.name = \"逆战\" "
  },
  {
    "NatSQL": "select tracks.composer from tracks  where  tracks.name = \"逆战\" "
  },
  {
    "NatSQL": "select tracks.milliseconds from tracks  where  tracks.name = \"逆战\" "
  },
  {
    "NatSQL": "select tracks.milliseconds from tracks  where  tracks.name = \"逆战\" "
  },
  {
    "NatSQL": "select tracks.name from genres  where  genres.name = \"摇滚\" "
  },
  {
    "NatSQL": "select tracks.name from genres  where  genres.name = \"摇滚\" "
  },
  {
    "NatSQL": "select albums.title from albums  where  tracks.name = \"奇幻旅程\" "
  },
  {
    "NatSQL": "select albums.title from albums  where  tracks.name = \"奇幻旅程\" "
  },
  {
    "NatSQL": "select tracks.name from tracks  where  albums.title = \"奇幻旅程\" "
  },
  {
    "NatSQL": "select tracks.name from tracks  where  albums.title = \"奇幻旅程\" "
  },
  {
    "NatSQL": "select albums.title from albums  where  @.@ join tracks.*  and  count ( albums.id )  > 10  group by albums.id "
  },
  {
    "NatSQL": "select albums.title from albums  where  @.@ join tracks.*  and  count ( albums.id )  > 10  group by albums.id "
  },
  {
    "NatSQL": "select tracks.name from genres  where  genres.name = \"摇滚\"  and  media_types.name = \"MPEG\" "
  },
  {
    "NatSQL": "select tracks.name from genres  where  genres.name = \"摇滚\"  and  media_types.name = \"MPEG\" "
  },
  {
    "NatSQL": "select tracks.name from genres  where  genres.name = \"摇滚\"  or  media_types.name = \"MPEG\" "
  },
  {
    "NatSQL": "select tracks.name from genres  where  genres.name = \"摇滚\"  or  media_types.name = \"MPEG\" "
  },
  {
    "NatSQL": "select tracks.name from genres  where  genres.name = \"摇滚\"  or  genres.name = \"爵士\" "
  },
  {
    "NatSQL": "select tracks.name from genres  where  genres.name = \"摇滚\"  or  genres.name = \"爵士\" "
  },
  {
    "NatSQL": "select tracks.name from tracks  where  playlists.name = \"电影\" "
  },
  {
    "NatSQL": "select tracks.name from tracks  where  playlists.name = \"电影\" "
  },
  {
    "NatSQL": "select playlists.name from playlists  where  count ( playlist_tracks.track_id )  > 100  group by playlist_tracks.playlist_id "
  },
  {
    "NatSQL": "select playlists.name from playlists  where  count ( playlist_tracks.track_id )  > 100  group by playlist_tracks.playlist_id "
  },
  {
    "NatSQL": "select tracks.name from tracks  where  customers.first_name = \"康\"  and  customers.last_name = \"伯约\" "
  },
  {
    "NatSQL": "select tracks.name from tracks  where  customers.first_name = \"康\"  and  customers.last_name = \"伯约\" "
  },
  {
    "NatSQL": "select tracks.unit_price from tracks  where  tracks.name = \"逆战\" "
  },
  {
    "NatSQL": "select tracks.unit_price from tracks  where  tracks.name = \"逆战\" "
  },
  {
    "NatSQL": "select tracks.name from tracks  where  playlists.name = \"电影\"  and  playlists.name != \"音乐\" "
  },
  {
    "NatSQL": "select tracks.name from tracks  where  playlists.name = \"电影\"  and  playlists.name != \"音乐\" "
  },
  {
    "NatSQL": "select tracks.name from tracks  where  playlists.name = \"电影\"  and  playlists.name = \"音乐\" "
  },
  {
    "NatSQL": "select tracks.name from tracks  where  playlists.name = \"电影\"  and  playlists.name = \"音乐\" "
  },
  {
    "NatSQL": "select count ( tracks.* )  , genres.name from genres  group by genres.name "
  },
  {
    "NatSQL": "select count ( tracks.* )  , genres.name from genres  group by genres.name "
  },
  {
    "NatSQL": "select count ( editor.* )  from editor "
  },
  {
    "NatSQL": "select editor.Name from editor  order by editor.Age asc"
  },
  {
    "NatSQL": "select editor.Name , editor.Age from editor "
  },
  {
    "NatSQL": "select editor.Name from editor  where  editor.Age > 25 "
  },
  {
    "NatSQL": "select editor.Name from editor  where  editor.Age = 24  or  editor.Age = 25 "
  },
  {
    "NatSQL": "select editor.Name from editor  order by editor.Age asc limit 1"
  },
  {
    "NatSQL": "select editor.Age , count ( editor.* )  from editor  group by editor.Age "
  },
  {
    "NatSQL": "select editor.Age from editor  group by editor.Age  order by count ( editor.* )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct journal.Theme from journal "
  },
  {
    "NatSQL": "select editor.Name , journal.Theme from journal_committee "
  },
  {
    "NatSQL": "select editor.Name , journal.Theme from journal_committee "
  },
  {
    "NatSQL": "select editor.Name , editor.Age , journal.Theme from journal_committee  order by journal.Theme asc"
  },
  {
    "NatSQL": "select editor.Name from journal_committee  where  journal.Sales > 3000 "
  },
  {
    "NatSQL": "select editor.Editor_ID , editor.Name , count ( journal_committee.* )  from editor  group by editor.Editor_ID "
  },
  {
    "NatSQL": "select editor.Name from editor  where  count ( journal_committee.* )  >= 2  group by editor.Name "
  },
  {
    "NatSQL": "select editor.Name from editor  where  @.@ not in journal_committee.* "
  },
  {
    "NatSQL": "select journal.Date , journal.Theme , journal.Sales from journal  where  except_  @.@ is journal_committee.* "
  },
  {
    "NatSQL": "select avg ( journal.Sales )  from journal  where  journal_committee.Work_Type = \"照片\" "
  },
  {
    "NatSQL": "select count ( accounts.* )  from accounts "
  },
  {
    "NatSQL": "select count ( accounts.* )  from accounts "
  },
  {
    "NatSQL": "select accounts.account_id , accounts.customer_id , accounts.account_name from accounts "
  },
  {
    "NatSQL": "select accounts.account_id , accounts.customer_id , accounts.account_name from accounts "
  },
  {
    "NatSQL": "select accounts.other_account_details from accounts  where  accounts.account_name = \"338\" "
  },
  {
    "NatSQL": "select accounts.other_account_details from accounts  where  accounts.account_name = \"338\" "
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_last_name , customers.customer_phone from accounts  where  accounts.account_name = \"162\" "
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_last_name , customers.customer_phone from accounts  where  accounts.account_name = \"162\" "
  },
  {
    "NatSQL": "select count ( accounts.* )  from accounts  where  customers.customer_first_name = \"艺术\"  and  customers.customer_last_name = \"王\" "
  },
  {
    "NatSQL": "select count ( accounts.* )  from accounts  where  customers.customer_first_name = \"艺术\"  and  customers.customer_last_name = \"王\" "
  },
  {
    "NatSQL": "select accounts.customer_id , count ( accounts.* )  from accounts  group by accounts.customer_id "
  },
  {
    "NatSQL": "select accounts.customer_id , count ( accounts.* )  from accounts  group by accounts.customer_id "
  },
  {
    "NatSQL": "select accounts.customer_id , count ( accounts.* )  from accounts  group by accounts.customer_id  order by count ( accounts.* )  desc limit 1"
  },
  {
    "NatSQL": "select accounts.customer_id , count ( accounts.* )  from accounts  group by accounts.customer_id  order by count ( accounts.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_last_name , customers.customer_id from accounts  group by accounts.customer_id  order by count ( accounts.* )  asc limit 1"
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_last_name , customers.customer_id from accounts  group by accounts.customer_id  order by count ( accounts.* )  asc limit 1"
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  @.@ not in accounts.* "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  @.@ not in accounts.* "
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_last_name from customers  where  except_  @.@ is accounts.* "
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_last_name from customers  where  except_  @.@ is accounts.* "
  },
  {
    "NatSQL": "select  distinct customers.customer_first_name , customers.customer_last_name from customers  where  @.@ join accounts.* "
  },
  {
    "NatSQL": "select  distinct customers.customer_first_name , customers.customer_last_name from customers  where  @.@ join accounts.* "
  },
  {
    "NatSQL": "select count (  distinct accounts.customer_id )  from accounts "
  },
  {
    "NatSQL": "select count (  distinct accounts.customer_id )  from accounts "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select customers.customer_id , customers.customer_first_name , customers.customer_last_name , customers.customer_phone from customers "
  },
  {
    "NatSQL": "select customers.customer_id , customers.customer_first_name , customers.customer_last_name , customers.customer_phone from customers "
  },
  {
    "NatSQL": "select customers.customer_phone , customers.customer_email from customers  where  customers.customer_first_name = \"许\"  and  customers.customer_last_name = \"海超\" "
  },
  {
    "NatSQL": "select customers.customer_phone , customers.customer_email from customers  where  customers.customer_first_name = \"许\"  and  customers.customer_last_name = \"海超\" "
  },
  {
    "NatSQL": "select count ( customers_cards.* )  from customers_cards "
  },
  {
    "NatSQL": "select count ( customers_cards.* )  from customers_cards "
  },
  {
    "NatSQL": "select customers_cards.card_id , customers_cards.customer_id , customers_cards.card_type_code , customers_cards.card_number from customers_cards "
  },
  {
    "NatSQL": "select customers_cards.card_id , customers_cards.customer_id , customers_cards.card_type_code , customers_cards.card_number from customers_cards "
  },
  {
    "NatSQL": "select customers_cards.date_valid_from , customers_cards.date_valid_to from customers_cards  where  customers_cards.card_number = \"4560596484842\" "
  },
  {
    "NatSQL": "select customers_cards.date_valid_from , customers_cards.date_valid_to from customers_cards  where  customers_cards.card_number = \"4560596484842\" "
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_last_name , customers.customer_phone from customers_cards  where  customers_cards.card_number = \"4560596484842\" "
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_last_name , customers.customer_phone from customers_cards  where  customers_cards.card_number = \"4560596484842\" "
  },
  {
    "NatSQL": "select count ( customers_cards.* )  from customers_cards  where  customers.customer_first_name = \"艺术\"  and  customers.customer_last_name = \"王\" "
  },
  {
    "NatSQL": "select count ( customers_cards.* )  from customers_cards  where  customers.customer_first_name = \"艺术\"  and  customers.customer_last_name = \"王\" "
  },
  {
    "NatSQL": "select count ( customers_cards.* )  from customers_cards  where  customers_cards.card_type_code = \"借记卡\" "
  },
  {
    "NatSQL": "select count ( customers_cards.* )  from customers_cards  where  customers_cards.card_type_code = \"借记卡\" "
  },
  {
    "NatSQL": "select count ( customers_cards.* )  from customers_cards  where  customers.customer_first_name = \"白\"  and  customers.customer_last_name = \"启光\"  and  customers_cards.card_type_code = \"信用卡\" "
  },
  {
    "NatSQL": "select count ( customers_cards.* )  from customers_cards  where  customers.customer_first_name = \"白\"  and  customers.customer_last_name = \"启光\"  and  customers_cards.card_type_code = \"信用卡\" "
  },
  {
    "NatSQL": "select customers_cards.customer_id , count ( customers_cards.* )  from customers_cards  group by customers_cards.customer_id "
  },
  {
    "NatSQL": "select customers_cards.customer_id , count ( customers_cards.* )  from customers_cards  group by customers_cards.customer_id "
  },
  {
    "NatSQL": "select customers_cards.customer_id , count ( customers_cards.* )  from customers_cards  group by customers_cards.customer_id  order by count ( customers_cards.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers_cards.customer_id , count ( customers_cards.* )  from customers_cards  group by customers_cards.customer_id  order by count ( customers_cards.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name from customers_cards  where  count ( customers_cards.* )  >= 2  group by customers_cards.customer_id "
  },
  {
    "NatSQL": "select customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name from customers_cards  where  count ( customers_cards.* )  >= 2  group by customers_cards.customer_id "
  },
  {
    "NatSQL": "select customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name from customers_cards  group by customers_cards.customer_id  order by count ( customers_cards.* )  asc limit 1"
  },
  {
    "NatSQL": "select customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name from customers_cards  group by customers_cards.customer_id  order by count ( customers_cards.* )  asc limit 1"
  },
  {
    "NatSQL": "select customers_cards.card_type_code , count ( customers_cards.* )  from customers_cards  group by customers_cards.card_type_code "
  },
  {
    "NatSQL": "select customers_cards.card_type_code , count ( customers_cards.* )  from customers_cards  group by customers_cards.card_type_code "
  },
  {
    "NatSQL": "select customers_cards.card_type_code from customers_cards  group by customers_cards.card_type_code  order by count ( customers_cards.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers_cards.card_type_code from customers_cards  group by customers_cards.card_type_code  order by count ( customers_cards.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers_cards.card_type_code from customers_cards  where  count ( customers_cards.* )  >= 5  group by customers_cards.card_type_code "
  },
  {
    "NatSQL": "select customers_cards.card_type_code from customers_cards  where  count ( customers_cards.* )  >= 5  group by customers_cards.card_type_code "
  },
  {
    "NatSQL": "select customers_cards.card_type_code , count (  distinct customers_cards.customer_id )  from customers_cards  group by customers_cards.card_type_code "
  },
  {
    "NatSQL": "select customers_cards.card_type_code , count (  distinct customers_cards.customer_id )  from customers_cards  group by customers_cards.card_type_code "
  },
  {
    "NatSQL": "select customers.customer_id , customers.customer_first_name from customers  where  except_  @.@ is customers_cards.*  and  customers_cards.card_type_code = \"信用卡\" "
  },
  {
    "NatSQL": "select customers.customer_id , customers.customer_first_name from customers  where  except_  @.@ is customers_cards.*  and  customers_cards.card_type_code = \"信用卡\" "
  },
  {
    "NatSQL": "select  distinct customers_cards.card_type_code from customers_cards "
  },
  {
    "NatSQL": "select  distinct customers_cards.card_type_code from customers_cards "
  },
  {
    "NatSQL": "select count (  distinct customers_cards.card_type_code )  from customers_cards "
  },
  {
    "NatSQL": "select count (  distinct customers_cards.card_type_code )  from customers_cards "
  },
  {
    "NatSQL": "select  distinct financial_transactions.transaction_type from financial_transactions "
  },
  {
    "NatSQL": "select  distinct financial_transactions.transaction_type from financial_transactions "
  },
  {
    "NatSQL": "select count (  distinct financial_transactions.transaction_type )  from financial_transactions "
  },
  {
    "NatSQL": "select count (  distinct financial_transactions.transaction_type )  from financial_transactions "
  },
  {
    "NatSQL": "select avg ( financial_transactions.transaction_amount )  , sum ( financial_transactions.transaction_amount )  from financial_transactions "
  },
  {
    "NatSQL": "select avg ( financial_transactions.transaction_amount )  , sum ( financial_transactions.transaction_amount )  from financial_transactions "
  },
  {
    "NatSQL": "select customers_cards.card_type_code , count ( financial_transactions.* )  from financial_transactions  group by customers_cards.card_type_code "
  },
  {
    "NatSQL": "select customers_cards.card_type_code , count ( financial_transactions.* )  from financial_transactions  group by customers_cards.card_type_code "
  },
  {
    "NatSQL": "select financial_transactions.transaction_type , count ( financial_transactions.* )  from financial_transactions  group by financial_transactions.transaction_type "
  },
  {
    "NatSQL": "select financial_transactions.transaction_type , count ( financial_transactions.* )  from financial_transactions  group by financial_transactions.transaction_type "
  },
  {
    "NatSQL": "select financial_transactions.transaction_type from financial_transactions  group by financial_transactions.transaction_type  order by sum ( financial_transactions.transaction_amount )  desc limit 1"
  },
  {
    "NatSQL": "select financial_transactions.transaction_type from financial_transactions  group by financial_transactions.transaction_type  order by sum ( financial_transactions.transaction_amount )  desc limit 1"
  },
  {
    "NatSQL": "select financial_transactions.account_id , count ( financial_transactions.* )  from financial_transactions  group by financial_transactions.account_id "
  },
  {
    "NatSQL": "select financial_transactions.account_id , count ( financial_transactions.* )  from financial_transactions  group by financial_transactions.account_id "
  },
  {
    "NatSQL": "select count ( track.* )  from track "
  },
  {
    "NatSQL": "select count ( track.* )  from track "
  },
  {
    "NatSQL": "select track.Name , track.Location from track "
  },
  {
    "NatSQL": "select track.Name , track.Location from track "
  },
  {
    "NatSQL": "select track.Name , track.Seating from track  where  track.Year_Opened > 2000  order by track.Seating asc"
  },
  {
    "NatSQL": "select track.Name , track.Seating from track  where  track.Year_Opened > 2000  order by track.Seating asc"
  },
  {
    "NatSQL": "select track.Name , track.Location , track.Seating from track  order by track.Year_Opened desc limit 1"
  },
  {
    "NatSQL": "select track.Name , track.Location , track.Seating from track  order by track.Year_Opened desc limit 1"
  },
  {
    "NatSQL": "select min ( track.Seating )  , max ( track.Seating )  , avg ( track.Seating )  from track "
  },
  {
    "NatSQL": "select min ( track.Seating )  , max ( track.Seating )  , avg ( track.Seating )  from track "
  },
  {
    "NatSQL": "select track.Name , track.Location , track.Year_Opened from track  where  @.@ > avg ( track.Seating )  "
  },
  {
    "NatSQL": "select track.Name , track.Location , track.Year_Opened from track  where  @.@ > avg ( track.Seating )  "
  },
  {
    "NatSQL": "select  distinct track.Location from track "
  },
  {
    "NatSQL": "select  distinct track.Location from track "
  },
  {
    "NatSQL": "select count ( race.* )  from race "
  },
  {
    "NatSQL": "select count ( race.* )  from race "
  },
  {
    "NatSQL": "select  distinct race.Class from race "
  },
  {
    "NatSQL": "select  distinct race.Class from race "
  },
  {
    "NatSQL": "select race.Name , race.Class , race.Date from race "
  },
  {
    "NatSQL": "select race.Name , race.Class , race.Date from race "
  },
  {
    "NatSQL": "select race.Class , count ( race.* )  from race  group by race.Class "
  },
  {
    "NatSQL": "select race.Class , count ( race.* )  from race  group by race.Class "
  },
  {
    "NatSQL": "select race.Class from race  group by race.Class  order by count ( race.* )  desc limit 1"
  },
  {
    "NatSQL": "select race.Class from race  group by race.Class  order by count ( race.* )  desc limit 1"
  },
  {
    "NatSQL": "select race.Class from race  where  count ( race.* )  >= 2  group by race.Class "
  },
  {
    "NatSQL": "select race.Class from race  where  count ( race.* )  >= 2  group by race.Class "
  },
  {
    "NatSQL": "select track.Name from track  where  except_  @.@ is track.*  and  race.Class = \"GT\" "
  },
  {
    "NatSQL": "select track.Name from track  where  except_  @.@ is track.*  and  race.Class = \"GT\" "
  },
  {
    "NatSQL": "select track.Name from track  where  @.@ not in race.* "
  },
  {
    "NatSQL": "select track.Name from track  where  @.@ not in race.* "
  },
  {
    "NatSQL": "select track.Year_Opened from track  where  track.Seating between 4000 and 5000 "
  },
  {
    "NatSQL": "select track.Year_Opened from track  where  track.Seating between 4000 and 5000 "
  },
  {
    "NatSQL": "select track.Name , count ( race.* )  from race  group by race.Track_ID "
  },
  {
    "NatSQL": "select track.Name , count ( race.* )  from race  group by race.Track_ID "
  },
  {
    "NatSQL": "select track.Name from race  group by race.Track_ID  order by count ( race.* )  desc limit 1"
  },
  {
    "NatSQL": "select track.Name from race  group by race.Track_ID  order by count ( race.* )  desc limit 1"
  },
  {
    "NatSQL": "select race.Name , race.Date , track.Name from race "
  },
  {
    "NatSQL": "select race.Name , race.Date , track.Name from race "
  },
  {
    "NatSQL": "select track.Name , track.Location from race  where  count ( race.* )  = 1  group by race.Track_ID "
  },
  {
    "NatSQL": "select track.Name , track.Location from race  where  count ( race.* )  = 1  group by race.Track_ID "
  },
  {
    "NatSQL": "select track.Location from track  where  track.Seating > 90000  and  track.Seating < 70000 "
  },
  {
    "NatSQL": "select track.Location from track  where  track.Seating > 90000  and  track.Seating < 70000 "
  },
  {
    "NatSQL": "select count ( member.* )  from member  where  member.Membership_card = \"黑卡\" "
  },
  {
    "NatSQL": "select count ( member.* )  , member.Address from member  group by member.Address "
  },
  {
    "NatSQL": "select member.Name from member  where  member.Address = \"金华\"  or  member.Address = \"湖州\" "
  },
  {
    "NatSQL": "select member.Name , member.Member_ID from member  where  member.Membership_card = \"黑卡\"  or  member.Age < 30 "
  },
  {
    "NatSQL": "select member.Time_of_purchase , member.Age , member.Address from member  order by member.Time_of_purchase asc"
  },
  {
    "NatSQL": "select member.Membership_card from member  where  count ( member.* )  > 5  group by member.Membership_card "
  },
  {
    "NatSQL": "select member.Address from member  where  member.Age < 30  and  member.Age > 40 "
  },
  {
    "NatSQL": "select member.Membership_card from member  where  member.Address = \"金华\"  and  member.Address = \"湖州\" "
  },
  {
    "NatSQL": "select count ( member.* )  from member  where  member.Address != \"金华\" "
  },
  {
    "NatSQL": "select member.Address from member  where  except_  @.@ is member.*  and  member.Membership_card = \"黑卡\" "
  },
  {
    "NatSQL": "select shop.Address from shop  order by shop.Open_Year asc"
  },
  {
    "NatSQL": "select avg ( shop.Num_of_staff )  , avg ( shop.Score )  from shop "
  },
  {
    "NatSQL": "select shop.Shop_ID , shop.Address from shop  where  @.@ < avg ( shop.Score )  "
  },
  {
    "NatSQL": "select shop.Address , shop.Num_of_staff from shop  where  @.@ not in happy_hour.* "
  },
  {
    "NatSQL": "select shop.Address , shop.Shop_ID from shop  where  happy_hour.Month = \"五月\" "
  },
  {
    "NatSQL": "select happy_hour.Shop_ID , count ( happy_hour.* )  from happy_hour  group by happy_hour.Shop_ID  order by count ( happy_hour.* )  desc limit 1"
  },
  {
    "NatSQL": "select happy_hour.Month from happy_hour  group by happy_hour.Month  order by count ( happy_hour.* )  desc limit 1"
  },
  {
    "NatSQL": "select happy_hour.Month from happy_hour  where  count ( happy_hour.* )  > 2  group by happy_hour.Month "
  },
  {
    "NatSQL": "select count ( album.* )  from album "
  },
  {
    "NatSQL": "select count ( album.* )  from album "
  },
  {
    "NatSQL": "select genre.Name from genre "
  },
  {
    "NatSQL": "select genre.Name from genre "
  },
  {
    "NatSQL": "select customer.* from customer  where  customer.State = \"广东\" "
  },
  {
    "NatSQL": "select customer.* from customer  where  customer.State = \"广东\" "
  },
  {
    "NatSQL": "select employee.FirstName , employee.LastName from employee  where  employee.City = \"青岛\" "
  },
  {
    "NatSQL": "select employee.FirstName , employee.LastName from employee  where  employee.City = \"青岛\" "
  },
  {
    "NatSQL": "select  distinct invoice.BillingCountry from invoice "
  },
  {
    "NatSQL": "select  distinct invoice.BillingCountry from invoice "
  },
  {
    "NatSQL": "select artist.Name from artist  where  artist.Name like \"安\" "
  },
  {
    "NatSQL": "select artist.Name from artist  where  artist.Name like \"安\" "
  },
  {
    "NatSQL": "select album.Title from album  where  artist.Name = \"吴亦凡\" "
  },
  {
    "NatSQL": "select album.Title from album  where  artist.Name = \"吴亦凡\" "
  },
  {
    "NatSQL": "select count ( album.* )  from album  where  artist.Name = \"陈奕迅\" "
  },
  {
    "NatSQL": "select count ( album.* )  from album  where  artist.Name = \"陈奕迅\" "
  },
  {
    "NatSQL": "select artist.Name from album  where  album.Title = \"奇幻旅程\" "
  },
  {
    "NatSQL": "select artist.Name from album  where  album.Title = \"奇幻旅程\" "
  },
  {
    "NatSQL": "select artist.Name from album  group by artist.Name  order by count ( album.* )  desc limit 1"
  },
  {
    "NatSQL": "select artist.Name from album  group by artist.Name  order by count ( album.* )  desc limit 1"
  },
  {
    "NatSQL": "select track.Name from track  where  track.Name like \"你\" "
  },
  {
    "NatSQL": "select track.Name from track  where  track.Name like \"你\" "
  },
  {
    "NatSQL": "select avg ( track.UnitPrice )  from track "
  },
  {
    "NatSQL": "select avg ( track.UnitPrice )  from track "
  },
  {
    "NatSQL": "select max ( track.Milliseconds )  , min ( track.Milliseconds )  from track "
  },
  {
    "NatSQL": "select max ( track.Milliseconds )  , min ( track.Milliseconds )  from track "
  },
  {
    "NatSQL": "select album.Title , track.AlbumId , count ( album.* )  from album  group by track.AlbumId "
  },
  {
    "NatSQL": "select album.Title , track.AlbumId , count ( album.* )  from album  group by track.AlbumId "
  },
  {
    "NatSQL": "select genre.Name from genre  group by track.GenreId  order by count ( track.* )  desc limit 1"
  },
  {
    "NatSQL": "select genre.Name from genre  group by track.GenreId  order by count ( track.* )  desc limit 1"
  },
  {
    "NatSQL": "select mediatype.Name from mediatype  group by track.MediaTypeId  order by count ( track.* )  asc limit 1"
  },
  {
    "NatSQL": "select mediatype.Name from mediatype  group by track.MediaTypeId  order by count ( track.* )  asc limit 1"
  },
  {
    "NatSQL": "select album.Title , track.AlbumId from album  where  track.UnitPrice > 1  group by track.AlbumId "
  },
  {
    "NatSQL": "select  distinct album.Title , track.AlbumId from album  where  track.UnitPrice > 1  group by track.AlbumId "
  },
  {
    "NatSQL": "select count ( track.* )  from genre  where  genre.Name = \"摇滚\" "
  },
  {
    "NatSQL": "select count ( track.* )  from genre  where  genre.Name = \"摇滚\" "
  },
  {
    "NatSQL": "select avg ( track.UnitPrice )  from genre  where  genre.Name = \"爵士\" "
  },
  {
    "NatSQL": "select avg ( track.UnitPrice )  from genre  where  genre.Name = \"爵士\" "
  },
  {
    "NatSQL": "select customer.FirstName , customer.LastName from customer  where  customer.Email = \"luisg@embraer.com.br\" "
  },
  {
    "NatSQL": "select customer.FirstName , customer.LastName from customer  where  customer.Email = \"luisg@embraer.com.br\" "
  },
  {
    "NatSQL": "select count ( customer.* )  from customer  where  customer.Email like \"qq.com\" "
  },
  {
    "NatSQL": "select count ( customer.* )  from customer  where  customer.Email like \"qq.com\" "
  },
  {
    "NatSQL": "select employee.FirstName , employee.LastName from customer  where  customer.FirstName = \"小红\" "
  },
  {
    "NatSQL": "select employee.FirstName , employee.LastName from customer  where  customer.FirstName = \"小红\" "
  },
  {
    "NatSQL": "select employee.City from customer  where  customer.PostalCode = \"70174\" "
  },
  {
    "NatSQL": "select employee.City from customer  where  customer.PostalCode = \"70174\" "
  },
  {
    "NatSQL": "select count (  distinct employee.City )  from employee "
  },
  {
    "NatSQL": "select count (  distinct employee.City )  from employee "
  },
  {
    "NatSQL": "select invoice.InvoiceDate from customer  where  customer.FirstName = \"卢\"  and  customer.LastName = \"军\" "
  },
  {
    "NatSQL": "select invoice.InvoiceDate from customer  where  customer.FirstName = \"卢\"  and  customer.LastName = \"军\" "
  },
  {
    "NatSQL": "select customer.LastName from customer  where  except_  @.@ is invoice.*  and  invoice.Total > 20 "
  },
  {
    "NatSQL": "select customer.LastName from customer  where  except_  @.@ is invoice.*  and  invoice.Total > 20 "
  },
  {
    "NatSQL": "select  distinct customer.FirstName from customer  where  @.@ join invoice.*  and  customer.Country = \"巴西\" "
  },
  {
    "NatSQL": "select  distinct customer.FirstName from customer  where  @.@ join invoice.*  and  customer.Country = \"巴西\" "
  },
  {
    "NatSQL": "select  distinct customer.Address from customer  where  @.@ join invoice.*  and  customer.Country = \"德国\" "
  },
  {
    "NatSQL": "select  distinct customer.Address from customer  where  @.@ join invoice.*  and  customer.Country = \"德国\" "
  },
  {
    "NatSQL": "select employee.Phone from employee "
  },
  {
    "NatSQL": "select employee.Phone from employee "
  },
  {
    "NatSQL": "select count ( track.* )  from mediatype  where  mediatype.Name = \"AAC\" "
  },
  {
    "NatSQL": "select count ( track.* )  from mediatype  where  mediatype.Name = \"AAC\" "
  },
  {
    "NatSQL": "select avg ( track.Milliseconds )  from genre  where  genre.Name = \"拉丁\"  or  genre.Name = \"流行\" "
  },
  {
    "NatSQL": "select avg ( track.Milliseconds )  from genre  where  genre.Name = \"拉丁\"  or  genre.Name = \"流行\" "
  },
  {
    "NatSQL": "select customer.FirstName , employee.EmployeeId from customer  where  count ( customer.* )  >= 10  group by customer.SupportRepId "
  },
  {
    "NatSQL": "select customer.FirstName , employee.EmployeeId from customer  where  count ( customer.* )  >= 10  group by customer.SupportRepId "
  },
  {
    "NatSQL": "select customer.LastName from customer  where  @.@ join employee.*  and  count ( customer.* )  <= 20  group by customer.SupportRepId "
  },
  {
    "NatSQL": "select customer.LastName from customer  where  @.@ join employee.*  and  count ( customer.* )  <= 20  group by customer.SupportRepId "
  },
  {
    "NatSQL": "select album.Title from album  order by album.Title asc"
  },
  {
    "NatSQL": "select album.Title from album  order by album.Title asc"
  },
  {
    "NatSQL": "select artist.Name , artist.ArtistId from album  where  count ( album.* )  >= 3  group by album.ArtistId  order by artist.Name asc"
  },
  {
    "NatSQL": "select artist.Name , artist.ArtistId from album  where  count ( album.* )  >= 3  group by album.ArtistId  order by artist.Name asc"
  },
  {
    "NatSQL": "select artist.Name from artist  where  except_  @.@ is album.* "
  },
  {
    "NatSQL": "select artist.Name from artist  where  except_  @.@ is album.* "
  },
  {
    "NatSQL": "select avg ( track.UnitPrice )  from genre  where  genre.Name = \"摇滚\" "
  },
  {
    "NatSQL": "select avg ( track.UnitPrice )  from genre  where  genre.Name = \"摇滚\" "
  },
  {
    "NatSQL": "select max ( track.Milliseconds )  , min ( track.Milliseconds )  from genre  where  genre.Name = \"流行\" "
  },
  {
    "NatSQL": "select max ( track.Milliseconds )  , min ( track.Milliseconds )  from genre  where  genre.Name = \"流行\" "
  },
  {
    "NatSQL": "select employee.BirthDate from employee  where  employee.City = \"长沙\" "
  },
  {
    "NatSQL": "select employee.BirthDate from employee  where  employee.City = \"长沙\" "
  },
  {
    "NatSQL": "select  distinct track.UnitPrice from track "
  },
  {
    "NatSQL": "select  distinct track.UnitPrice from track "
  },
  {
    "NatSQL": "select count ( artist.* )  from artist  where  @.@ not in album.* "
  },
  {
    "NatSQL": "select count ( artist.* )  from artist  where  @.@ not in album.* "
  },
  {
    "NatSQL": "select album.Title from album  where  genre.Name = \"雷鬼\"  and  genre.Name = \"摇滚\" "
  },
  {
    "NatSQL": "select album.Title from album  where  genre.Name = \"雷鬼\"  and  genre.Name = \"摇滚\" "
  },
  {
    "NatSQL": "select available_policies.Customer_Phone from available_policies "
  },
  {
    "NatSQL": "select available_policies.Customer_Phone from available_policies "
  },
  {
    "NatSQL": "select available_policies.Customer_Phone from available_policies  where  available_policies.policy_type_code = \"人寿保险\" "
  },
  {
    "NatSQL": "select available_policies.Customer_Phone from available_policies  where  available_policies.policy_type_code = \"人寿保险\" "
  },
  {
    "NatSQL": "select available_policies.policy_type_code from available_policies  group by available_policies.policy_type_code  order by count ( available_policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select available_policies.policy_type_code from available_policies  group by available_policies.policy_type_code  order by count ( available_policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select available_policies.Customer_Phone from available_policies  where  @.@ = available_policies.policy_type_code  order by count ( available_policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select available_policies.Customer_Phone from available_policies  where  @.@ = available_policies.policy_type_code  order by count ( available_policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select available_policies.policy_type_code from available_policies  where  count ( available_policies.* )  > 4  group by available_policies.policy_type_code "
  },
  {
    "NatSQL": "select available_policies.policy_type_code from available_policies  where  count ( available_policies.* )  > 4  group by available_policies.policy_type_code "
  },
  {
    "NatSQL": "select sum ( settlements.Settlement_Amount )  , avg ( settlements.Settlement_Amount )  from settlements "
  },
  {
    "NatSQL": "select sum ( settlements.Settlement_Amount )  , avg ( settlements.Settlement_Amount )  from settlements "
  },
  {
    "NatSQL": "select services.Service_name from first_notification_of_loss  where  count ( first_notification_of_loss.* )  > 2  group by first_notification_of_loss.Service_ID "
  },
  {
    "NatSQL": "select services.Service_name from first_notification_of_loss  where  count ( first_notification_of_loss.* )  > 2  group by first_notification_of_loss.Service_ID "
  },
  {
    "NatSQL": "select claims.Effective_Date from claims  group by claims.Claim_ID  order by sum ( settlements.Settlement_Amount )  desc limit 1"
  },
  {
    "NatSQL": "select claims.Effective_Date from claims  group by claims.Claim_ID  order by sum ( settlements.Settlement_Amount )  desc limit 1"
  },
  {
    "NatSQL": "select count ( customers_policies.* )  from customers  where  customers.Customer_name = \"李帅\" "
  },
  {
    "NatSQL": "select count ( customers_policies.* )  from customers  where  customers.Customer_name = \"李帅\" "
  },
  {
    "NatSQL": "select customers.Customer_name from customers  group by customers.Customer_name  order by count ( customers_policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.Customer_name from customers  group by customers.Customer_name  order by count ( customers_policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct available_policies.policy_type_code from customers  where  customers.Customer_name = \"李帅\" "
  },
  {
    "NatSQL": "select  distinct available_policies.policy_type_code from customers  where  customers.Customer_name = \"李帅\" "
  },
  {
    "NatSQL": "select  distinct available_policies.policy_type_code from customers  where  @.@ = customers.Customer_name  order by count ( customers_policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct available_policies.policy_type_code from customers  where  @.@ = customers.Customer_name  order by count ( customers_policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select services.Service_name from services  order by services.Service_name asc"
  },
  {
    "NatSQL": "select services.Service_name from services  order by services.Service_name asc"
  },
  {
    "NatSQL": "select count ( services.* )  from services "
  },
  {
    "NatSQL": "select count ( services.* )  from services "
  },
  {
    "NatSQL": "select customers.Customer_name from customers  where  except_  @.@ is first_notification_of_loss.* "
  },
  {
    "NatSQL": "select customers.Customer_name from customers  where  except_  @.@ is first_notification_of_loss.* "
  },
  {
    "NatSQL": "select customers.Customer_name from customers  where  @.@ join first_notification_of_loss.*  and  services.Service_name = \"取消保单\"  or  services.Service_name = \"升级保单\" "
  },
  {
    "NatSQL": "select customers.Customer_name from customers  where  services.Service_name = \"取消保单\"  or  services.Service_name = \"升级保单\" "
  },
  {
    "NatSQL": "select customers.Customer_name from customers  where  services.Service_name = \"取消保单\"  and  services.Service_name = \"新开保单\" "
  },
  {
    "NatSQL": "select customers.Customer_name from customers  where  services.Service_name = \"取消保单\"  and  services.Service_name = \"新开保单\" "
  },
  {
    "NatSQL": "select customers.Customer_ID from customers  where  customers.Customer_name like \"楠\" "
  },
  {
    "NatSQL": "select customers.Customer_ID from customers  where  customers.Customer_name like \"楠\" "
  },
  {
    "NatSQL": "select max ( settlements.Settlement_Amount )  , min ( settlements.Settlement_Amount )  from settlements "
  },
  {
    "NatSQL": "select max ( settlements.Settlement_Amount )  , min ( settlements.Settlement_Amount )  from settlements "
  },
  {
    "NatSQL": "select customers.Customer_ID , customers.Customer_name from customers  order by customers.Customer_ID asc"
  },
  {
    "NatSQL": "select customers.Customer_ID , customers.Customer_name from customers  order by customers.Customer_ID asc"
  },
  {
    "NatSQL": "select customers_policies.Date_Opened , customers_policies.Date_Closed from customers  where  customers.Customer_name like \"楠\" "
  },
  {
    "NatSQL": "select customers_policies.Date_Opened , customers_policies.Date_Closed from customers  where  customers.Customer_name like \"楠\" "
  },
  {
    "NatSQL": "select count ( enzyme.* )  from enzyme "
  },
  {
    "NatSQL": "select count ( enzyme.* )  from enzyme "
  },
  {
    "NatSQL": "select enzyme.name from enzyme  order by enzyme.name desc"
  },
  {
    "NatSQL": "select enzyme.name from enzyme  order by enzyme.name desc"
  },
  {
    "NatSQL": "select enzyme.name , enzyme.Location from enzyme "
  },
  {
    "NatSQL": "select enzyme.name , enzyme.Location from enzyme "
  },
  {
    "NatSQL": "select max ( enzyme.OMIM )  from enzyme "
  },
  {
    "NatSQL": "select max ( enzyme.OMIM )  from enzyme "
  },
  {
    "NatSQL": "select enzyme.Product , enzyme.Chromosome , enzyme.Porphyria from enzyme  where  enzyme.Location = \"贵阳\" "
  },
  {
    "NatSQL": "select enzyme.Product , enzyme.Chromosome , enzyme.Porphyria from enzyme  where  enzyme.Location = \"贵阳\" "
  },
  {
    "NatSQL": "select enzyme.name from enzyme  where  enzyme.Product != \"淀粉酶\" "
  },
  {
    "NatSQL": "select enzyme.name from enzyme  where  enzyme.Product != \"淀粉酶\" "
  },
  {
    "NatSQL": "select medicine.name , medicine.Trade_Name from medicine  where  medicine.FDA_approved = \"是\" "
  },
  {
    "NatSQL": "select medicine.name , medicine.Trade_Name from medicine  where  medicine.FDA_approved = \"是\" "
  },
  {
    "NatSQL": "select enzyme.name from enzyme  where  medicine.name = \"氨磺必利\"  and  medicine_enzyme_interaction.interaction_type = \"抑制剂\" "
  },
  {
    "NatSQL": "select enzyme.name from enzyme  where  medicine.name = \"氨磺必利\"  and  medicine_enzyme_interaction.interaction_type = \"抑制剂\" "
  },
  {
    "NatSQL": "select medicine.id , medicine.name from medicine  where  count ( medicine_enzyme_interaction.* )  >= 2  group by medicine.id "
  },
  {
    "NatSQL": "select medicine.id , medicine.name from medicine  where  count ( medicine_enzyme_interaction.* )  >= 2  group by medicine.id "
  },
  {
    "NatSQL": "select medicine.id , medicine.name , medicine.FDA_approved from medicine  group by medicine.id  order by count ( medicine_enzyme_interaction.* )  desc"
  },
  {
    "NatSQL": "select medicine.id , medicine.name , medicine.FDA_approved from medicine  group by medicine.id  order by count ( medicine_enzyme_interaction.* )  desc"
  },
  {
    "NatSQL": "select enzyme.id , enzyme.name from enzyme  where  medicine_enzyme_interaction.interaction_type = \"催化剂\"  group by enzyme.id  order by count ( enzyme.* )  desc limit 1"
  },
  {
    "NatSQL": "select enzyme.id , enzyme.name from enzyme  where  medicine_enzyme_interaction.interaction_type = \"催化剂\"  group by enzyme.id  order by count ( enzyme.* )  desc limit 1"
  },
  {
    "NatSQL": "select medicine_enzyme_interaction.interaction_type from medicine_enzyme_interaction  where  enzyme.name = \"ALA合酶\"  and  medicine.name = \"阿立哌唑\" "
  },
  {
    "NatSQL": "select medicine_enzyme_interaction.interaction_type from medicine_enzyme_interaction  where  enzyme.name = \"ALA合酶\"  and  medicine.name = \"阿立哌唑\" "
  },
  {
    "NatSQL": "select medicine_enzyme_interaction.interaction_type , count ( medicine_enzyme_interaction.* )  from medicine_enzyme_interaction  group by medicine_enzyme_interaction.interaction_type  order by count ( medicine_enzyme_interaction.* )  desc limit 1"
  },
  {
    "NatSQL": "select medicine_enzyme_interaction.interaction_type , count ( medicine_enzyme_interaction.* )  from medicine_enzyme_interaction  group by medicine_enzyme_interaction.interaction_type  order by count ( medicine_enzyme_interaction.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( medicine.* )  from medicine  where  medicine.FDA_approved = \"没有\" "
  },
  {
    "NatSQL": "select count ( medicine.* )  from medicine  where  medicine.FDA_approved = \"没有\" "
  },
  {
    "NatSQL": "select count ( enzyme.* )  from enzyme  where  @.@ not in medicine_enzyme_interaction.* "
  },
  {
    "NatSQL": "select count ( enzyme.* )  from enzyme  where  @.@ not in medicine_enzyme_interaction.* "
  },
  {
    "NatSQL": "select medicine.id , medicine.Trade_Name from medicine  where  count ( medicine_enzyme_interaction.* )  >= 3  group by medicine.id "
  },
  {
    "NatSQL": "select medicine.id , medicine.Trade_Name from medicine  where  count ( medicine_enzyme_interaction.* )  >= 3  group by medicine.id "
  },
  {
    "NatSQL": "select  distinct enzyme.name , enzyme.Location , enzyme.Product from enzyme  where  medicine_enzyme_interaction.interaction_type = \"抑制剂\" "
  },
  {
    "NatSQL": "select  distinct enzyme.name , enzyme.Location , enzyme.Product from enzyme  where  medicine_enzyme_interaction.interaction_type = \"抑制剂\" "
  },
  {
    "NatSQL": "select medicine.name , medicine.Trade_Name from medicine  where  medicine_enzyme_interaction.interaction_type = \"抑制剂\"  and  medicine_enzyme_interaction.interaction_type = \"催化剂\" "
  },
  {
    "NatSQL": "select medicine.name , medicine.Trade_Name from medicine  where  medicine_enzyme_interaction.interaction_type = \"抑制剂\"  and  medicine_enzyme_interaction.interaction_type = \"催化剂\" "
  },
  {
    "NatSQL": "select medicine.name , medicine.Trade_Name from medicine  where  except_  @.@ is medicine_enzyme_interaction.*  and  enzyme.Product = \"生物酶\" "
  },
  {
    "NatSQL": "select medicine.name , medicine.Trade_Name from medicine  where  except_  @.@ is medicine_enzyme_interaction.*  and  enzyme.Product = \"生物酶\" "
  },
  {
    "NatSQL": "select count (  distinct medicine.FDA_approved )  from medicine "
  },
  {
    "NatSQL": "select count (  distinct medicine.FDA_approved )  from medicine "
  },
  {
    "NatSQL": "select enzyme.name from enzyme  where  enzyme.name like \"物\" "
  },
  {
    "NatSQL": "select enzyme.name from enzyme  where  enzyme.name like \"物\" "
  },
  {
    "NatSQL": "select medicine.Trade_Name , count ( medicine.* )  from medicine  group by medicine.Trade_Name "
  },
  {
    "NatSQL": "select medicine.Trade_Name , count ( medicine.* )  from medicine  group by medicine.Trade_Name "
  },
  {
    "NatSQL": "select university.School , university.Nickname from university  order by university.Founded asc"
  },
  {
    "NatSQL": "select university.School , university.Nickname from university  order by university.Founded asc"
  },
  {
    "NatSQL": "select university.School , university.Location from university  where  university.Affiliation = \"公立\" "
  },
  {
    "NatSQL": "select university.School , university.Location from university  where  university.Affiliation = \"公立\" "
  },
  {
    "NatSQL": "select university.Founded from university  order by university.Enrollment desc limit 1"
  },
  {
    "NatSQL": "select university.Founded from university  order by university.Enrollment desc limit 1"
  },
  {
    "NatSQL": "select university.Founded from university  where  university.Affiliation != \"公立\"  order by university.Founded desc limit 1"
  },
  {
    "NatSQL": "select university.Founded from university  where  university.Affiliation != \"公立\"  order by university.Founded desc limit 1"
  },
  {
    "NatSQL": "select count (  distinct basketball_match.School_ID )  from basketball_match "
  },
  {
    "NatSQL": "select count (  distinct basketball_match.School_ID )  from basketball_match "
  },
  {
    "NatSQL": "select basketball_match.ACC_Percent from basketball_match  order by basketball_match.ACC_Percent desc limit 1"
  },
  {
    "NatSQL": "select basketball_match.ACC_Percent from basketball_match  order by basketball_match.ACC_Percent desc limit 1"
  },
  {
    "NatSQL": "select university.Primary_conference from university  order by basketball_match.ACC_Percent asc limit 1"
  },
  {
    "NatSQL": "select university.Primary_conference from university  order by basketball_match.ACC_Percent asc limit 1"
  },
  {
    "NatSQL": "select basketball_match.Team_Name , basketball_match.ACC_Regular_Season from university  order by university.Founded asc limit 1"
  },
  {
    "NatSQL": "select basketball_match.Team_Name , basketball_match.ACC_Regular_Season from university  order by university.Founded asc limit 1"
  },
  {
    "NatSQL": "select basketball_match.All_Games , university.Location from university  where  basketball_match.Team_Name = \"暨南大学\" "
  },
  {
    "NatSQL": "select basketball_match.All_Games , university.Location from university  where  basketball_match.Team_Name = \"暨南大学\" "
  },
  {
    "NatSQL": "select avg ( university.Enrollment )  from university  where  university.Founded < 1850 "
  },
  {
    "NatSQL": "select avg ( university.Enrollment )  from university  where  university.Founded < 1850 "
  },
  {
    "NatSQL": "select university.Enrollment , university.Primary_conference from university  order by university.Founded asc limit 1"
  },
  {
    "NatSQL": "select university.Enrollment , university.Primary_conference from university  order by university.Founded asc limit 1"
  },
  {
    "NatSQL": "select sum ( university.Enrollment )  , min ( university.Enrollment )  from university "
  },
  {
    "NatSQL": "select sum ( university.Enrollment )  , min ( university.Enrollment )  from university "
  },
  {
    "NatSQL": "select sum ( university.Enrollment )  , university.Affiliation from university  group by university.Affiliation "
  },
  {
    "NatSQL": "select sum ( university.Enrollment )  , university.Affiliation from university  group by university.Affiliation "
  },
  {
    "NatSQL": "select count ( university.* )  from university  where  @.@ not in basketball_match.* "
  },
  {
    "NatSQL": "select count ( university.* )  from university  where  @.@ not in basketball_match.* "
  },
  {
    "NatSQL": "select university.School from university  where  university.Founded > 1850  or  university.Affiliation = \"公立\" "
  },
  {
    "NatSQL": "select university.School from university  where  university.Founded > 1850  or  university.Affiliation = \"公立\" "
  },
  {
    "NatSQL": "select count (  distinct university.Affiliation )  from university "
  },
  {
    "NatSQL": "select count (  distinct university.Affiliation )  from university "
  },
  {
    "NatSQL": "select count ( university.* )  from university  where  university.Location like \"上海\" "
  },
  {
    "NatSQL": "select count ( university.* )  from university  where  university.Location like \"上海\" "
  },
  {
    "NatSQL": "select basketball_match.Team_Name from university  where  @.@ < avg ( university.Enrollment )  "
  },
  {
    "NatSQL": "select basketball_match.Team_Name from university  where  @.@ < avg ( university.Enrollment )  "
  },
  {
    "NatSQL": "select count ( university.* )  , university.Affiliation from university  where  university.Enrollment > 20000  group by university.Affiliation "
  },
  {
    "NatSQL": "select count ( university.* )  , university.Affiliation from university  where  university.Enrollment > 20000  group by university.Affiliation "
  },
  {
    "NatSQL": "select sum ( university.Enrollment )  , university.Affiliation from university  where  university.Founded > 1850  group by university.Affiliation "
  },
  {
    "NatSQL": "select sum ( university.Enrollment )  , university.Affiliation from university  where  university.Founded > 1850  group by university.Affiliation "
  },
  {
    "NatSQL": "select max ( university.Enrollment )  from university "
  },
  {
    "NatSQL": "select max ( university.Enrollment )  from university "
  },
  {
    "NatSQL": "select basketball_match.* from basketball_match "
  },
  {
    "NatSQL": "select basketball_match.* from basketball_match "
  },
  {
    "NatSQL": "select basketball_match.Team_Name from basketball_match  order by basketball_match.All_Home desc"
  },
  {
    "NatSQL": "select basketball_match.Team_Name from basketball_match  order by basketball_match.All_Home desc"
  },
  {
    "NatSQL": "select chip_model.Model_name from chip_model  where  chip_model.Launch_year between 2002 and 2004 "
  },
  {
    "NatSQL": "select chip_model.Model_name , chip_model.RAM_MiB from chip_model  order by chip_model.RAM_MiB asc limit 1"
  },
  {
    "NatSQL": "select phone.chip_model , phone.screen_mode from phone  where  phone.Hardware_Model_name = \"LG-P760\" "
  },
  {
    "NatSQL": "select count ( phone.* )  from phone  where  phone.Company_name = \"小米\" "
  },
  {
    "NatSQL": "select max ( chip_model.RAM_MiB )  , min ( chip_model.RAM_MiB )  from chip_model  where  phone.Company_name = \"小米\" "
  },
  {
    "NatSQL": "select avg ( chip_model.ROM_MiB )  from chip_model  where  phone.Company_name = \"小米\" "
  },
  {
    "NatSQL": "select phone.Hardware_Model_name , phone.Company_name from chip_model  where  chip_model.Launch_year = 2002  or  chip_model.RAM_MiB > 32 "
  },
  {
    "NatSQL": "select phone.Hardware_Model_name , phone.Company_name from phone  where  phone.Accreditation_type like \"全权\" "
  },
  {
    "NatSQL": "select screen_mode.Char_cells , screen_mode.Pixels , screen_mode.Hardware_colours from screen_mode  where  phone.Hardware_Model_name = \"LG-P760\" "
  },
  {
    "NatSQL": "select phone.Hardware_Model_name , phone.Company_name from screen_mode  where  screen_mode.Type = \"图像\" "
  },
  {
    "NatSQL": "select phone.Company_name , count ( phone.* )  from phone  group by phone.Company_name  order by count ( phone.* )  asc limit 1"
  },
  {
    "NatSQL": "select phone.Company_name from phone  where  count ( phone.* )  > 1  group by phone.Company_name "
  },
  {
    "NatSQL": "select max ( screen_mode.used_kb )  , min ( screen_mode.used_kb )  , avg ( screen_mode.used_kb )  from screen_mode "
  },
  {
    "NatSQL": "select phone.Hardware_Model_name from chip_model  where  chip_model.Launch_year = 2002  order by chip_model.RAM_MiB desc limit 1"
  },
  {
    "NatSQL": "select chip_model.WiFi , screen_mode.Type from chip_model  where  phone.Hardware_Model_name = \"LG-P760\" "
  },
  {
    "NatSQL": "select phone.Hardware_Model_name from chip_model  where  screen_mode.Type = \"文本\"  or  chip_model.RAM_MiB > 32 "
  },
  {
    "NatSQL": "select  distinct phone.Hardware_Model_name from screen_mode  where  screen_mode.Type = \"图像\"  or  phone.Company_name = \"小米\" "
  },
  {
    "NatSQL": "select  distinct phone.Hardware_Model_name from screen_mode  where  phone.Company_name = \"小米\"  and  screen_mode.Type != \"文本\" "
  },
  {
    "NatSQL": "select  distinct phone.Hardware_Model_name , phone.Company_name from screen_mode  where  screen_mode.used_kb between 10 and 15 "
  },
  {
    "NatSQL": "select phone.Accreditation_type , count ( phone.* )  from phone  group by phone.Accreditation_type "
  },
  {
    "NatSQL": "select phone.Accreditation_type , count ( phone.* )  from phone  group by phone.Accreditation_type "
  },
  {
    "NatSQL": "select phone.Accreditation_level from phone  where  count ( phone.* )  > 3  group by phone.Accreditation_level "
  },
  {
    "NatSQL": "select chip_model.* from chip_model "
  },
  {
    "NatSQL": "select count ( chip_model.* )  from chip_model  where  chip_model.WiFi = \"没有\" "
  },
  {
    "NatSQL": "select count ( chip_model.* )  from chip_model  where  chip_model.WiFi = \"没有\" "
  },
  {
    "NatSQL": "select chip_model.Model_name from chip_model  order by chip_model.Launch_year asc"
  },
  {
    "NatSQL": "select avg ( chip_model.RAM_MiB )  from chip_model  where  @.@ not in phone.chip_model "
  },
  {
    "NatSQL": "select chip_model.Model_name from chip_model  where  except_  @.@ is phone.*  and  phone.Accreditation_type = \"全权\" "
  },
  {
    "NatSQL": "select screen_mode.Pixels from screen_mode  where  phone.Accreditation_type = \"临时\"  and  phone.Accreditation_type = \"全权\" "
  },
  {
    "NatSQL": "select count ( country.* )  from country "
  },
  {
    "NatSQL": "select count ( country.* )  from country "
  },
  {
    "NatSQL": "select country.Country_name , country.Capital from country "
  },
  {
    "NatSQL": "select country.Country_name , country.Capital from country "
  },
  {
    "NatSQL": "select country.Official_native_language from country  where  country.Official_native_language like \"英语\" "
  },
  {
    "NatSQL": "select country.Official_native_language from country  where  country.Official_native_language like \"英语\" "
  },
  {
    "NatSQL": "select  distinct match_season.Position from match_season "
  },
  {
    "NatSQL": "select  distinct match_season.Position from match_season "
  },
  {
    "NatSQL": "select match_season.Player from match_season  where  match_season.College = \"浙江大学\" "
  },
  {
    "NatSQL": "select match_season.Player from match_season  where  match_season.College = \"浙江大学\" "
  },
  {
    "NatSQL": "select  distinct match_season.Position from match_season  where  match_season.College = \"浙江大学\"  or  match_season.College = \"武汉大学\" "
  },
  {
    "NatSQL": "select  distinct match_season.Position from match_season  where  match_season.College = \"浙江大学\"  or  match_season.College = \"武汉大学\" "
  },
  {
    "NatSQL": "select match_season.Draft_Pick_Number , match_season.Draft_Class from match_season  where  match_season.Position = \"后卫\" "
  },
  {
    "NatSQL": "select match_season.Draft_Pick_Number , match_season.Draft_Class from match_season  where  match_season.Position = \"后卫\" "
  },
  {
    "NatSQL": "select count (  distinct match_season.Team )  from match_season "
  },
  {
    "NatSQL": "select count (  distinct match_season.Team )  from match_season "
  },
  {
    "NatSQL": "select player.Player , player.Years_Played from player "
  },
  {
    "NatSQL": "select player.Player , player.Years_Played from player "
  },
  {
    "NatSQL": "select team.Name from team "
  },
  {
    "NatSQL": "select team.Name from team "
  },
  {
    "NatSQL": "select match_season.Season , match_season.Player , country.Country_name from country "
  },
  {
    "NatSQL": "select match_season.Season , match_season.Player , country.Country_name from country "
  },
  {
    "NatSQL": "select match_season.Player from country  where  country.Country_name = \"印度尼西亚\" "
  },
  {
    "NatSQL": "select match_season.Player from country  where  country.Country_name = \"印度尼西亚\" "
  },
  {
    "NatSQL": "select  distinct match_season.Position from country  where  country.Capital = \"都柏林\" "
  },
  {
    "NatSQL": "select  distinct match_season.Position from country  where  country.Capital = \"都柏林\" "
  },
  {
    "NatSQL": "select country.Official_native_language from country  where  match_season.College = \"同济\"  or  match_season.College = \"武汉大学\" "
  },
  {
    "NatSQL": "select country.Official_native_language from country  where  match_season.College = \"同济\"  or  match_season.College = \"武汉大学\" "
  },
  {
    "NatSQL": "select count (  distinct country.Official_native_language )  from country  where  match_season.Position = \"后卫\" "
  },
  {
    "NatSQL": "select count (  distinct country.Official_native_language )  from country  where  match_season.Position = \"后卫\" "
  },
  {
    "NatSQL": "select match_season.Season , match_season.Player , team.Name from match_season "
  },
  {
    "NatSQL": "select match_season.Season , match_season.Player , team.Name from match_season "
  },
  {
    "NatSQL": "select match_season.Position from match_season  where  team.Name = \"杭州绿城\" "
  },
  {
    "NatSQL": "select match_season.Position from match_season  where  team.Name = \"杭州绿城\" "
  },
  {
    "NatSQL": "select count (  distinct match_season.College )  from match_season  where  team.Name = \"重庆力帆\" "
  },
  {
    "NatSQL": "select count (  distinct match_season.College )  from match_season  where  team.Name = \"重庆力帆\" "
  },
  {
    "NatSQL": "select player.Player , player.Years_Played from player  where  team.Name = \"重庆力帆\" "
  },
  {
    "NatSQL": "select player.Player , player.Years_Played from player  where  team.Name = \"重庆力帆\" "
  },
  {
    "NatSQL": "select match_season.Position , count ( match_season.* )  from match_season  group by match_season.Position "
  },
  {
    "NatSQL": "select match_season.Position , count ( match_season.* )  from match_season  group by match_season.Position "
  },
  {
    "NatSQL": "select country.Country_name , count ( match_season.* )  from country  group by country.Country_name "
  },
  {
    "NatSQL": "select country.Country_name , count ( match_season.* )  from country  group by country.Country_name "
  },
  {
    "NatSQL": "select match_season.Player from match_season  order by match_season.College asc"
  },
  {
    "NatSQL": "select match_season.Player from match_season  order by match_season.College asc"
  },
  {
    "NatSQL": "select match_season.Position from match_season  group by match_season.Position  order by count ( match_season.* )  desc limit 1"
  },
  {
    "NatSQL": "select match_season.Position from match_season  group by match_season.Position  order by count ( match_season.* )  desc limit 1"
  },
  {
    "NatSQL": "select match_season.College from match_season  group by match_season.College  order by count ( match_season.* )  desc limit 3"
  },
  {
    "NatSQL": "select match_season.College from match_season  group by match_season.College  order by count ( match_season.* )  desc limit 3"
  },
  {
    "NatSQL": "select match_season.College from match_season  where  count ( match_season.* )  >= 2  group by match_season.College "
  },
  {
    "NatSQL": "select match_season.College from match_season  where  count ( match_season.* )  >= 2  group by match_season.College "
  },
  {
    "NatSQL": "select match_season.College from match_season  where  count ( match_season.* )  >= 2  group by match_season.College  order by match_season.College desc"
  },
  {
    "NatSQL": "select match_season.College from match_season  where  count ( match_season.* )  >= 2  group by match_season.College  order by match_season.College desc"
  },
  {
    "NatSQL": "select team.Name from team  where  @.@ not in match_season.Team "
  },
  {
    "NatSQL": "select team.Name from team  where  @.@ not in match_season.Team "
  },
  {
    "NatSQL": "select country.Country_name from country  where  match_season.Position = \"前锋\"  and  match_season.Position = \"后卫\" "
  },
  {
    "NatSQL": "select country.Country_name from country  where  match_season.Position = \"前锋\"  and  match_season.Position = \"后卫\" "
  },
  {
    "NatSQL": "select match_season.College from match_season  where  match_season.Position = \"中场\"  and  match_season.Position = \"后卫\" "
  },
  {
    "NatSQL": "select match_season.College from match_season  where  match_season.Position = \"中场\"  and  match_season.Position = \"后卫\" "
  },
  {
    "NatSQL": "select count ( climber.* )  from climber "
  },
  {
    "NatSQL": "select count ( climber.* )  from climber "
  },
  {
    "NatSQL": "select climber.Name from climber  order by climber.Points desc"
  },
  {
    "NatSQL": "select climber.Name from climber  order by climber.Points desc"
  },
  {
    "NatSQL": "select climber.Name from climber  where  climber.Country != \"瑞士\" "
  },
  {
    "NatSQL": "select climber.Name from climber  where  climber.Country != \"瑞士\" "
  },
  {
    "NatSQL": "select max ( climber.Points )  from climber  where  climber.Country = \"英国\" "
  },
  {
    "NatSQL": "select max ( climber.Points )  from climber  where  climber.Country = \"英国\" "
  },
  {
    "NatSQL": "select count (  distinct climber.Country )  from climber "
  },
  {
    "NatSQL": "select count (  distinct climber.Country )  from climber "
  },
  {
    "NatSQL": "select mountain.Name from mountain  order by mountain.Name asc"
  },
  {
    "NatSQL": "select mountain.Name from mountain  order by mountain.Name asc"
  },
  {
    "NatSQL": "select mountain.Country from mountain  where  mountain.Height > 5000 "
  },
  {
    "NatSQL": "select mountain.Country from mountain  where  mountain.Height > 5000 "
  },
  {
    "NatSQL": "select mountain.Name from mountain  order by mountain.Height desc limit 1"
  },
  {
    "NatSQL": "select mountain.Name from mountain  order by mountain.Height desc limit 1"
  },
  {
    "NatSQL": "select  distinct mountain.Range from mountain  order by mountain.Prominence desc limit 3"
  },
  {
    "NatSQL": "select  distinct mountain.Range from mountain  order by mountain.Prominence desc limit 3"
  },
  {
    "NatSQL": "select climber.Name , mountain.Name from climber "
  },
  {
    "NatSQL": "select climber.Name , mountain.Name from climber "
  },
  {
    "NatSQL": "select climber.Name , mountain.Height from climber "
  },
  {
    "NatSQL": "select climber.Name , mountain.Height from climber "
  },
  {
    "NatSQL": "select mountain.Height from climber  order by climber.Points desc limit 1"
  },
  {
    "NatSQL": "select mountain.Height from climber  order by climber.Points desc limit 1"
  },
  {
    "NatSQL": "select  distinct mountain.Name from climber  where  climber.Country = \"德国\" "
  },
  {
    "NatSQL": "select  distinct mountain.Name from climber  where  climber.Country = \"德国\" "
  },
  {
    "NatSQL": "select climber.Time from climber  where  mountain.Country = \"乌干达\" "
  },
  {
    "NatSQL": "select climber.Time from climber  where  mountain.Country = \"乌干达\" "
  },
  {
    "NatSQL": "select climber.Country , count ( climber.* )  from climber  group by climber.Country "
  },
  {
    "NatSQL": "select climber.Country , count ( climber.* )  from climber  group by climber.Country "
  },
  {
    "NatSQL": "select mountain.Country from mountain  where  count ( mountain.* )  > 1  group by mountain.Country "
  },
  {
    "NatSQL": "select mountain.Country from mountain  where  count ( mountain.* )  > 1  group by mountain.Country "
  },
  {
    "NatSQL": "select mountain.Name from mountain  where  @.@ not in climber.* "
  },
  {
    "NatSQL": "select mountain.Name from mountain  where  @.@ not in climber.* "
  },
  {
    "NatSQL": "select mountain.Country from mountain  where  mountain.Height > 5600  and  mountain.Height < 5200 "
  },
  {
    "NatSQL": "select mountain.Country from mountain  where  mountain.Height > 5600  and  mountain.Height < 5200 "
  },
  {
    "NatSQL": "select mountain.Range from mountain  group by mountain.Range  order by count ( mountain.* )  desc limit 1"
  },
  {
    "NatSQL": "select mountain.Range from mountain  group by mountain.Range  order by count ( mountain.* )  desc limit 1"
  },
  {
    "NatSQL": "select mountain.Name from mountain  where  mountain.Height > 5000  or  mountain.Prominence > 1000 "
  },
  {
    "NatSQL": "select mountain.Name from mountain  where  mountain.Height > 5000  or  mountain.Prominence > 1000 "
  },
  {
    "NatSQL": "select count ( body_builder.* )  from body_builder "
  },
  {
    "NatSQL": "select body_builder.Total from body_builder  order by body_builder.Total asc"
  },
  {
    "NatSQL": "select body_builder.Snatch , body_builder.Clean_Jerk from body_builder  order by body_builder.Snatch asc"
  },
  {
    "NatSQL": "select avg ( body_builder.Snatch )  from body_builder "
  },
  {
    "NatSQL": "select body_builder.Clean_Jerk from body_builder  order by body_builder.Total desc limit 1"
  },
  {
    "NatSQL": "select people.Birth_Date from people  order by people.Height asc"
  },
  {
    "NatSQL": "select people.Name from body_builder  where  @.@ join body_builder.* "
  },
  {
    "NatSQL": "select people.Name from body_builder  where  body_builder.Total > 300 "
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ join body_builder.*  order by people.Weight desc limit 1"
  },
  {
    "NatSQL": "select people.Birth_Date , people.Birth_Place from body_builder  order by body_builder.Total desc limit 1"
  },
  {
    "NatSQL": "select people.Height from body_builder  where  body_builder.Total < 315 "
  },
  {
    "NatSQL": "select avg ( body_builder.Total )  from body_builder  where  people.Height > 200 "
  },
  {
    "NatSQL": "select people.Name from body_builder  order by body_builder.Total desc"
  },
  {
    "NatSQL": "select people.Birth_Place , count ( people.* )  from people  group by people.Birth_Place "
  },
  {
    "NatSQL": "select people.Birth_Place from people  group by people.Birth_Place  order by count ( people.* )  desc limit 1"
  },
  {
    "NatSQL": "select people.Birth_Place from people  where  count ( people.* )  >= 2  group by people.Birth_Place "
  },
  {
    "NatSQL": "select people.Height , people.Weight from people  order by people.Height desc"
  },
  {
    "NatSQL": "select body_builder.* from body_builder "
  },
  {
    "NatSQL": "select people.Name , people.Birth_Place from people  where  except_  @.@ is body_builder.* "
  },
  {
    "NatSQL": "select count (  distinct people.Birth_Place )  from people "
  },
  {
    "NatSQL": "select count ( people.* )  from people  where  @.@ not in body_builder.* "
  },
  {
    "NatSQL": "select people.Weight from body_builder  where  body_builder.Snatch > 140  or  people.Height > 200 "
  },
  {
    "NatSQL": "select body_builder.Total from body_builder  where  people.Birth_Date like \"一月\" "
  },
  {
    "NatSQL": "select min ( body_builder.Snatch )  from body_builder "
  },
  {
    "NatSQL": "select count ( election.* )  from election "
  },
  {
    "NatSQL": "select election.Votes from election  order by election.Votes desc"
  },
  {
    "NatSQL": "select election.Date , election.Vote_Percent from election "
  },
  {
    "NatSQL": "select min ( election.Vote_Percent )  , max ( election.Vote_Percent )  from election "
  },
  {
    "NatSQL": "select representative.Name , representative.Party from representative "
  },
  {
    "NatSQL": "select representative.Name from representative  where  representative.Party != \"民主党\" "
  },
  {
    "NatSQL": "select representative.Lifespan from representative  where  representative.State = \"上海\"  or  representative.State = \"江西\" "
  },
  {
    "NatSQL": "select representative.Name , election.Date from election "
  },
  {
    "NatSQL": "select representative.Name from election  where  election.Votes > 10000 "
  },
  {
    "NatSQL": "select representative.Name from election  order by election.Votes desc"
  },
  {
    "NatSQL": "select representative.Party from election  order by election.Votes asc limit 1"
  },
  {
    "NatSQL": "select representative.Lifespan from election  order by election.Vote_Percent desc"
  },
  {
    "NatSQL": "select avg ( election.Votes )  from election  where  representative.Party = \"民主党\" "
  },
  {
    "NatSQL": "select representative.Party , count ( representative.* )  from representative  group by representative.Party "
  },
  {
    "NatSQL": "select representative.Party , count ( representative.* )  from representative  group by representative.Party  order by count ( representative.* )  desc limit 1"
  },
  {
    "NatSQL": "select representative.Party from representative  where  count ( representative.* )  >= 3  group by representative.Party "
  },
  {
    "NatSQL": "select representative.State from representative  where  count ( representative.* )  >= 2  group by representative.State "
  },
  {
    "NatSQL": "select representative.Name from representative  where  @.@ not in election.* "
  },
  {
    "NatSQL": "select representative.Party from representative  where  representative.State = \"上海\"  and  representative.State = \"湖北\" "
  },
  {
    "NatSQL": "select count (  distinct representative.Party )  from representative "
  },
  {
    "NatSQL": "select count ( apartment_bookings.* )  from apartment_bookings "
  },
  {
    "NatSQL": "select count ( apartment_bookings.* )  from apartment_bookings "
  },
  {
    "NatSQL": "select apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings "
  },
  {
    "NatSQL": "select apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings "
  },
  {
    "NatSQL": "select  distinct apartment_buildings.building_description from apartment_buildings "
  },
  {
    "NatSQL": "select  distinct apartment_buildings.building_description from apartment_buildings "
  },
  {
    "NatSQL": "select apartment_buildings.building_short_name from apartment_buildings  where  apartment_buildings.building_manager = \"张力\" "
  },
  {
    "NatSQL": "select apartment_buildings.building_short_name from apartment_buildings  where  apartment_buildings.building_manager = \"张力\" "
  },
  {
    "NatSQL": "select apartment_buildings.building_address , apartment_buildings.building_phone from apartment_buildings  where  apartment_buildings.building_manager = \"王刚\" "
  },
  {
    "NatSQL": "select apartment_buildings.building_address , apartment_buildings.building_phone from apartment_buildings  where  apartment_buildings.building_manager = \"王刚\" "
  },
  {
    "NatSQL": "select apartment_buildings.building_full_name from apartment_buildings  where  apartment_buildings.building_full_name like \"号码\" "
  },
  {
    "NatSQL": "select apartment_buildings.building_full_name from apartment_buildings  where  apartment_buildings.building_full_name like \"号码\" "
  },
  {
    "NatSQL": "select min ( apartments.bathroom_count )  , max ( apartments.bathroom_count )  from apartments "
  },
  {
    "NatSQL": "select min ( apartments.bathroom_count )  , max ( apartments.bathroom_count )  from apartments "
  },
  {
    "NatSQL": "select avg ( apartments.bedroom_count )  from apartments "
  },
  {
    "NatSQL": "select avg ( apartments.bedroom_count )  from apartments "
  },
  {
    "NatSQL": "select apartments.apt_number , apartments.room_count from apartments "
  },
  {
    "NatSQL": "select apartments.apt_number , apartments.room_count from apartments "
  },
  {
    "NatSQL": "select avg ( apartments.room_count )  from apartments  where  apartments.apt_type_code = \"套房\" "
  },
  {
    "NatSQL": "select avg ( apartments.room_count )  from apartments  where  apartments.apt_type_code = \"套房\" "
  },
  {
    "NatSQL": "select apartments.apt_number from apartments  where  apartments.apt_type_code = \"公寓\" "
  },
  {
    "NatSQL": "select apartments.apt_number from apartments  where  apartments.apt_type_code = \"公寓\" "
  },
  {
    "NatSQL": "select guests.guest_first_name , guests.guest_last_name from guests "
  },
  {
    "NatSQL": "select guests.guest_first_name , guests.guest_last_name from guests "
  },
  {
    "NatSQL": "select guests.date_of_birth from guests  where  guests.gender_code = \"男性\" "
  },
  {
    "NatSQL": "select guests.date_of_birth from guests  where  guests.gender_code = \"男性\" "
  },
  {
    "NatSQL": "select apartments.apt_number , apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings "
  },
  {
    "NatSQL": "select apartments.apt_number , apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings "
  },
  {
    "NatSQL": "select apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings  where  apartments.apt_type_code = \"双人房\" "
  },
  {
    "NatSQL": "select apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings  where  apartments.apt_type_code = \"双人房\" "
  },
  {
    "NatSQL": "select apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings  where  apartments.bedroom_count > 2 "
  },
  {
    "NatSQL": "select apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings  where  apartments.bedroom_count > 2 "
  },
  {
    "NatSQL": "select apartment_bookings.booking_status_code from apartment_bookings  where  apartments.apt_number = \"634\" "
  },
  {
    "NatSQL": "select apartment_bookings.booking_status_code from apartment_bookings  where  apartments.apt_number = \"634\" "
  },
  {
    "NatSQL": "select  distinct apartments.apt_number from apartment_bookings  where  apartment_bookings.booking_status_code = \"确认\" "
  },
  {
    "NatSQL": "select  distinct apartments.apt_number from apartment_bookings  where  apartment_bookings.booking_status_code = \"确认\" "
  },
  {
    "NatSQL": "select avg ( apartments.room_count )  from apartment_bookings  where  apartment_bookings.booking_status_code = \"临时\" "
  },
  {
    "NatSQL": "select avg ( apartments.room_count )  from apartment_bookings  where  apartment_bookings.booking_status_code = \"临时\" "
  },
  {
    "NatSQL": "select guests.guest_first_name , apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings "
  },
  {
    "NatSQL": "select guests.guest_first_name , apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings "
  },
  {
    "NatSQL": "select apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings  where  guests.gender_code = \"女\" "
  },
  {
    "NatSQL": "select apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings  where  guests.gender_code = \"女\" "
  },
  {
    "NatSQL": "select guests.guest_first_name , guests.guest_last_name from apartment_bookings  where  apartment_bookings.booking_status_code = \"确认\" "
  },
  {
    "NatSQL": "select guests.guest_first_name , guests.guest_last_name from apartment_bookings  where  apartment_bookings.booking_status_code = \"确认\" "
  },
  {
    "NatSQL": "select apartment_facilities.facility_code from apartment_facilities  where  apartments.bedroom_count > 4 "
  },
  {
    "NatSQL": "select apartment_facilities.facility_code from apartment_facilities  where  apartments.bedroom_count > 4 "
  },
  {
    "NatSQL": "select sum ( apartments.room_count )  from apartment_facilities  where  apartment_facilities.facility_code = \"体育馆\" "
  },
  {
    "NatSQL": "select sum ( apartments.room_count )  from apartment_facilities  where  apartment_facilities.facility_code = \"体育馆\" "
  },
  {
    "NatSQL": "select sum ( apartments.room_count )  from apartment_buildings  where  apartment_buildings.building_short_name = \"如家\" "
  },
  {
    "NatSQL": "select sum ( apartments.room_count )  from apartment_buildings  where  apartment_buildings.building_short_name = \"如家\" "
  },
  {
    "NatSQL": "select apartment_buildings.building_address from apartment_buildings  where  apartments.bathroom_count > 2 "
  },
  {
    "NatSQL": "select apartment_buildings.building_address from apartment_buildings  where  apartments.bathroom_count > 2 "
  },
  {
    "NatSQL": "select apartments.apt_type_code , apartments.apt_number from apartment_buildings  where  apartment_buildings.building_manager = \"小波\" "
  },
  {
    "NatSQL": "select apartments.apt_type_code , apartments.apt_number from apartment_buildings  where  apartment_buildings.building_manager = \"小波\" "
  },
  {
    "NatSQL": "select apartment_bookings.booking_status_code , count ( apartment_bookings.* )  from apartment_bookings  group by apartment_bookings.booking_status_code "
  },
  {
    "NatSQL": "select apartment_bookings.booking_status_code , count ( apartment_bookings.* )  from apartment_bookings  group by apartment_bookings.booking_status_code "
  },
  {
    "NatSQL": "select apartments.apt_number from apartments  order by apartments.room_count asc"
  },
  {
    "NatSQL": "select apartments.apt_number from apartments  order by apartments.room_count asc"
  },
  {
    "NatSQL": "select apartments.apt_number from apartments  order by apartments.bedroom_count desc limit 1"
  },
  {
    "NatSQL": "select apartments.apt_number from apartments  order by apartments.bedroom_count desc limit 1"
  },
  {
    "NatSQL": "select apartments.apt_type_code , count ( apartments.* )  from apartments  group by apartments.apt_type_code  order by count ( apartments.* )  asc"
  },
  {
    "NatSQL": "select apartments.apt_type_code , count ( apartments.* )  from apartments  group by apartments.apt_type_code  order by count ( apartments.* )  asc"
  },
  {
    "NatSQL": "select apartments.apt_type_code from apartments  group by apartments.apt_type_code  order by avg ( apartments.room_count )  desc limit 3"
  },
  {
    "NatSQL": "select apartments.apt_type_code from apartments  group by apartments.apt_type_code  order by avg ( apartments.room_count )  desc limit 3"
  },
  {
    "NatSQL": "select apartments.apt_type_code , apartments.bathroom_count , apartments.bedroom_count from apartments  group by apartments.apt_type_code  order by sum ( apartments.room_count )  desc limit 1"
  },
  {
    "NatSQL": "select apartments.apt_type_code , apartments.bathroom_count , apartments.bedroom_count from apartments  group by apartments.apt_type_code  order by sum ( apartments.room_count )  desc limit 1"
  },
  {
    "NatSQL": "select apartments.apt_type_code from apartments  group by apartments.apt_type_code  order by count ( apartments.* )  desc limit 1"
  },
  {
    "NatSQL": "select apartments.apt_type_code from apartments  group by apartments.apt_type_code  order by count ( apartments.* )  desc limit 1"
  },
  {
    "NatSQL": "select apartments.apt_type_code from apartments  where  apartments.bathroom_count > 1  group by apartments.apt_type_code  order by count ( apartments.* )  desc limit 1"
  },
  {
    "NatSQL": "select apartments.apt_type_code from apartments  where  apartments.bathroom_count > 1  group by apartments.apt_type_code  order by count ( apartments.* )  desc limit 1"
  },
  {
    "NatSQL": "select apartments.apt_type_code , max ( apartments.room_count )  , min ( apartments.room_count )  from apartments  group by apartments.apt_type_code "
  },
  {
    "NatSQL": "select apartments.apt_type_code , max ( apartments.room_count )  , min ( apartments.room_count )  from apartments  group by apartments.apt_type_code "
  },
  {
    "NatSQL": "select guests.gender_code , count ( guests.* )  from guests  group by guests.gender_code  order by count ( guests.* )  desc"
  },
  {
    "NatSQL": "select guests.gender_code , count ( guests.* )  from guests  group by guests.gender_code  order by count ( guests.* )  desc"
  },
  {
    "NatSQL": "select count ( apartments.* )  from apartments  where  @.@ not in apartment_facilities.* "
  },
  {
    "NatSQL": "select count ( apartments.* )  from apartments  where  @.@ not in apartment_facilities.* "
  },
  {
    "NatSQL": "select apartments.apt_number from apartment_bookings  where  apartment_bookings.booking_status_code = \"确认\"  and  apartment_bookings.booking_status_code = \"临时\" "
  },
  {
    "NatSQL": "select apartments.apt_number from apartment_bookings  where  apartment_bookings.booking_status_code = \"确认\"  and  apartment_bookings.booking_status_code = \"临时\" "
  },
  {
    "NatSQL": "select apartments.apt_number from apartments  where  view_unit_status.available_yn = 0  and  view_unit_status.available_yn = 1 "
  },
  {
    "NatSQL": "select apartments.apt_number from apartments  where  view_unit_status.available_yn = 0  and  view_unit_status.available_yn = 1 "
  },
  {
    "NatSQL": "select count ( game.* )  from game  where  game.Season > 2007 "
  },
  {
    "NatSQL": "select game.Date from game  order by game.Home_team desc"
  },
  {
    "NatSQL": "select game.Season , game.Home_team , game.Away_team from game "
  },
  {
    "NatSQL": "select max ( stadium.Home_Games )  , min ( stadium.Home_Games )  , avg ( stadium.Home_Games )  from stadium "
  },
  {
    "NatSQL": "select stadium.Average_Attendance from stadium  where  stadium.Capacity_Percentage > 100 "
  },
  {
    "NatSQL": "select injury_accident.Player , injury_accident.Number_of_matches , injury_accident.Source from injury_accident  where  injury_accident.Injury != \"膝盖受伤\" "
  },
  {
    "NatSQL": "select game.Season from game  where  injury_accident.Player = \"郑智\" "
  },
  {
    "NatSQL": "select game.id , game.Score , game.Date from game  where  count ( injury_accident.* )  >= 2  group by game.id "
  },
  {
    "NatSQL": "select stadium.id , stadium.name from stadium  group by stadium.id  order by count ( injury_accident.* )  desc limit 1"
  },
  {
    "NatSQL": "select stadium.id , stadium.name from stadium  group by stadium.id  order by count ( injury_accident.* )  desc limit 1"
  },
  {
    "NatSQL": "select game.Season , stadium.name from game  where  injury_accident.Injury = \"脚部受伤\"  or  injury_accident.Injury = \"膝盖受伤\" "
  },
  {
    "NatSQL": "select count (  distinct injury_accident.Source )  from injury_accident "
  },
  {
    "NatSQL": "select count ( game.* )  from game  where  @.@ not in injury_accident.* "
  },
  {
    "NatSQL": "select count (  distinct injury_accident.Injury )  from injury_accident  where  game.Season > 2010 "
  },
  {
    "NatSQL": "select stadium.name from game  where  injury_accident.Player = \"郑智\"  and  injury_accident.Player = \"于大宝\" "
  },
  {
    "NatSQL": "select stadium.name , stadium.Average_Attendance , stadium.Total_Attendance from stadium  where  except_  @.@ is injury_accident.* "
  },
  {
    "NatSQL": "select stadium.name from stadium  where  stadium.name like \"中心\" "
  },
  {
    "NatSQL": "select stadium.id , count ( game.* )  from stadium  group by stadium.id "
  },
  {
    "NatSQL": "select game.Date , injury_accident.Player from game  order by game.Season desc"
  },
  {
    "NatSQL": "select country.name , league.name from country "
  },
  {
    "NatSQL": "select count ( league.* )  from country  where  @.@ join country.*  and  country.name = \"英格兰\" "
  },
  {
    "NatSQL": "select avg ( player.weight )  from player "
  },
  {
    "NatSQL": "select max ( player.weight )  , min ( player.weight )  from player "
  },
  {
    "NatSQL": "select  distinct player.player_name from player  where  @.@ > avg ( player_attributes.overall_rating )  "
  },
  {
    "NatSQL": "select  distinct player.player_name from player  where  player_attributes.dribbling = max ( player_attributes.overall_rating )  "
  },
  {
    "NatSQL": "select  distinct player.player_name from player  where  player_attributes.crossing > 90  and  player_attributes.preferred_foot = \"右\" "
  },
  {
    "NatSQL": "select  distinct player.player_name from player  where  player_attributes.preferred_foot = \"左\"  and  player_attributes.overall_rating >= 85  and  player_attributes.overall_rating <= 90 "
  },
  {
    "NatSQL": "select player_attributes.preferred_foot , avg ( player_attributes.overall_rating )  from player_attributes  group by player_attributes.preferred_foot "
  },
  {
    "NatSQL": "select player_attributes.preferred_foot , count ( player_attributes.* )  from player_attributes  where  player_attributes.overall_rating > 80  group by player_attributes.preferred_foot "
  },
  {
    "NatSQL": "select  distinct player.player_api_id from player  where  player.height >= 180  and  player_attributes.overall_rating > 85 "
  },
  {
    "NatSQL": "select  distinct player.player_api_id from player  where  player.height >= 180  and  player.height <= 190  and  player_attributes.preferred_foot = \"左\" "
  },
  {
    "NatSQL": "select  distinct player.player_name from player  order by player_attributes.overall_rating desc limit 3"
  },
  {
    "NatSQL": "select  distinct player.player_name , player.birthday from player  order by player_attributes.potential desc limit 5"
  },
  {
    "NatSQL": "select count ( performance.* )  from performance "
  },
  {
    "NatSQL": "select performance.Host from performance  order by performance.Attendance asc"
  },
  {
    "NatSQL": "select performance.Date , performance.Location from performance "
  },
  {
    "NatSQL": "select performance.Attendance from performance  where  performance.Location = \"工人体育场\"  or  performance.Location = \"虹口体育场\" "
  },
  {
    "NatSQL": "select avg ( performance.Attendance )  from performance "
  },
  {
    "NatSQL": "select performance.Date from performance  order by performance.Attendance desc limit 1"
  },
  {
    "NatSQL": "select performance.Location , count ( performance.* )  from performance  group by performance.Location "
  },
  {
    "NatSQL": "select performance.Location from performance  group by performance.Location  order by count ( performance.* )  desc limit 1"
  },
  {
    "NatSQL": "select performance.Location from performance  where  count ( performance.* )  >= 2  group by performance.Location "
  },
  {
    "NatSQL": "select performance.Location from performance  where  performance.Attendance > 2000  and  performance.Attendance < 1000 "
  },
  {
    "NatSQL": "select member.Name , performance.Location from member_attendance "
  },
  {
    "NatSQL": "select member.Name , performance.Location from member_attendance  order by member.Name asc"
  },
  {
    "NatSQL": "select performance.Date from member_attendance  where  member.Role = \"小提琴\" "
  },
  {
    "NatSQL": "select member.Name , performance.Date from member_attendance  order by performance.Attendance desc"
  },
  {
    "NatSQL": "select member.Name from member  where  @.@ not in member_attendance.* "
  },
  {
    "NatSQL": "select  distinct classroom.building from classroom  where  classroom.capacity > 50 "
  },
  {
    "NatSQL": "select  distinct classroom.building from classroom  where  classroom.capacity > 50 "
  },
  {
    "NatSQL": "select count ( classroom.* )  from classroom  where  classroom.building != \"教学\" "
  },
  {
    "NatSQL": "select count ( classroom.* )  from classroom  where  classroom.building != \"教学\" "
  },
  {
    "NatSQL": "select department.dept_name , department.building from department  where  @.@ > avg ( department.budget )  "
  },
  {
    "NatSQL": "select department.dept_name , department.building from department  where  @.@ > avg ( department.budget )  "
  },
  {
    "NatSQL": "select classroom.building , classroom.room_number from classroom  where  classroom.capacity between 50 and 100 "
  },
  {
    "NatSQL": "select classroom.building , classroom.room_number from classroom  where  classroom.capacity between 50 and 100 "
  },
  {
    "NatSQL": "select department.dept_name , department.building from department  order by department.budget desc limit 1"
  },
  {
    "NatSQL": "select department.dept_name , department.building from department  order by department.budget desc limit 1"
  },
  {
    "NatSQL": "select student.name from student  where  student.dept_name = \"历史\"  order by student.tot_cred desc limit 1"
  },
  {
    "NatSQL": "select student.name from student  where  student.dept_name = \"历史\"  order by student.tot_cred desc limit 1"
  },
  {
    "NatSQL": "select count ( classroom.* )  from classroom  where  classroom.building = \"教学\" "
  },
  {
    "NatSQL": "select count ( classroom.* )  from classroom  where  classroom.building = \"教学\" "
  },
  {
    "NatSQL": "select count (  distinct advisor.s_ID )  from advisor "
  },
  {
    "NatSQL": "select count (  distinct advisor.s_ID )  from advisor "
  },
  {
    "NatSQL": "select count (  distinct course.dept_name )  from course "
  },
  {
    "NatSQL": "select count (  distinct course.dept_name )  from course "
  },
  {
    "NatSQL": "select count (  distinct course.course_id )  from course  where  course.dept_name = \"屋里\" "
  },
  {
    "NatSQL": "select count (  distinct course.course_id )  from course  where  course.dept_name = \"屋里\" "
  },
  {
    "NatSQL": "select course.title from course  where  count ( prereq.* )  = 2  group by prereq.course_id "
  },
  {
    "NatSQL": "select course.title from course  where  count ( prereq.* )  = 2  group by prereq.course_id "
  },
  {
    "NatSQL": "select course.title , course.credits , course.dept_name from course  where  count ( prereq.* )  > 1  group by prereq.course_id "
  },
  {
    "NatSQL": "select course.title , course.credits , course.dept_name from course  where  count ( prereq.* )  > 1  group by prereq.course_id "
  },
  {
    "NatSQL": "select count ( course.* )  from course  where  @.@ not in prereq.course_id "
  },
  {
    "NatSQL": "select count ( course.* )  from course  where  @.@ not in prereq.course_id "
  },
  {
    "NatSQL": "select course.title from course  where  @.@ not in prereq.course_id "
  },
  {
    "NatSQL": "select course.title from course  where  @.@ not in prereq.course_id "
  },
  {
    "NatSQL": "select count (  distinct teaches.ID )  from teaches "
  },
  {
    "NatSQL": "select count (  distinct teaches.ID )  from teaches "
  },
  {
    "NatSQL": "select sum ( department.budget )  from department  where  department.dept_name = \"管理\"  or  department.dept_name = \"金融\" "
  },
  {
    "NatSQL": "select sum ( department.budget )  from department  where  department.dept_name = \"管理\"  or  department.dept_name = \"金融\" "
  },
  {
    "NatSQL": "select instructor.dept_name from instructor  where  instructor.name like \"成庆\" "
  },
  {
    "NatSQL": "select instructor.dept_name from instructor  where  instructor.name like \"成庆\" "
  },
  {
    "NatSQL": "select count ( classroom.* )  from classroom  where  classroom.building = \"教学\"  and  classroom.capacity < 50 "
  },
  {
    "NatSQL": "select count ( classroom.* )  from classroom  where  classroom.building = \"教学\"  and  classroom.capacity < 50 "
  },
  {
    "NatSQL": "select department.dept_name , department.budget from department  where  @.@ > avg ( department.budget )  "
  },
  {
    "NatSQL": "select department.dept_name , department.budget from department  where  @.@ > avg ( department.budget )  "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  instructor.dept_name = \"统计学\"  order by instructor.salary asc limit 1"
  },
  {
    "NatSQL": "select instructor.name from instructor  where  instructor.dept_name = \"统计学\"  order by instructor.salary asc limit 1"
  },
  {
    "NatSQL": "select course.title from course  where  course.dept_name = \"统计学\"  and  course.dept_name = \"心理学\" "
  },
  {
    "NatSQL": "select course.title from course  where  course.dept_name = \"统计学\"  and  course.dept_name = \"心理学\" "
  },
  {
    "NatSQL": "select course.title from course  where  course.dept_name = \"统计学\"  and  course.dept_name != \"心理学\" "
  },
  {
    "NatSQL": "select course.title from course  where  course.dept_name = \"统计学\"  and  course.dept_name != \"心理学\" "
  },
  {
    "NatSQL": "select teaches.ID from teaches  where  teaches.semester = \"秋季\"  and  teaches.year = 2009  and  teaches.semester != \"春季\"  and  teaches.year = 2010 "
  },
  {
    "NatSQL": "select teaches.ID from teaches  where  teaches.semester = \"秋季\"  and  teaches.year = 2009  and  teaches.semester != \"春季\"  and  teaches.year = 2010 "
  },
  {
    "NatSQL": "select  distinct student.name from student  where  takes.year = 2009  or  takes.year = 2010 "
  },
  {
    "NatSQL": "select  distinct student.name from student  where  takes.year = 2009  or  takes.year = 2010 "
  },
  {
    "NatSQL": "select course.dept_name from course  group by course.dept_name  order by count ( course.* )  desc limit 3"
  },
  {
    "NatSQL": "select course.dept_name from course  group by course.dept_name  order by count ( course.* )  desc limit 3"
  },
  {
    "NatSQL": "select course.dept_name from course  group by course.dept_name  order by sum ( course.credits )  desc limit 1"
  },
  {
    "NatSQL": "select course.dept_name from course  group by course.dept_name  order by sum ( course.credits )  desc limit 1"
  },
  {
    "NatSQL": "select course.title from course  order by course.title , course.credits asc"
  },
  {
    "NatSQL": "select course.title from course  order by course.title , course.credits asc"
  },
  {
    "NatSQL": "select department.dept_name from department  order by department.budget asc limit 1"
  },
  {
    "NatSQL": "select department.dept_name from department  order by department.budget asc limit 1"
  },
  {
    "NatSQL": "select department.dept_name , department.building from department  order by department.budget desc"
  },
  {
    "NatSQL": "select department.dept_name , department.building from department  order by department.budget desc"
  },
  {
    "NatSQL": "select instructor.name from instructor  order by instructor.salary desc limit 1"
  },
  {
    "NatSQL": "select instructor.name from instructor  order by instructor.salary desc limit 1"
  },
  {
    "NatSQL": "select instructor.* from instructor  order by instructor.salary asc"
  },
  {
    "NatSQL": "select instructor.* from instructor  order by instructor.salary asc"
  },
  {
    "NatSQL": "select student.name , student.dept_name from student  order by student.tot_cred asc"
  },
  {
    "NatSQL": "select student.name , student.dept_name from student  order by student.tot_cred asc"
  },
  {
    "NatSQL": "select course.title , instructor.name from course  where  teaches.year = 2008  order by course.title asc"
  },
  {
    "NatSQL": "select course.title , instructor.name from course  where  teaches.year = 2008  order by course.title asc"
  },
  {
    "NatSQL": "select instructor.name from instructor  where  count ( advisor.* )  > 1  group by advisor.i_ID "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  count ( advisor.* )  > 1  group by advisor.i_ID "
  },
  {
    "NatSQL": "select student.name from student  where  count ( advisor.* )  > 1  group by advisor.s_ID "
  },
  {
    "NatSQL": "select student.name from student  where  count ( advisor.* )  > 1  group by advisor.s_ID "
  },
  {
    "NatSQL": "select count ( classroom.* )  , classroom.building from classroom  where  classroom.capacity > 50  group by classroom.building "
  },
  {
    "NatSQL": "select count ( classroom.* )  , classroom.building from classroom  where  classroom.capacity > 50  group by classroom.building "
  },
  {
    "NatSQL": "select max ( classroom.capacity )  , avg ( classroom.capacity )  , classroom.building from classroom  group by classroom.building "
  },
  {
    "NatSQL": "select max ( classroom.capacity )  , avg ( classroom.capacity )  , classroom.building from classroom  group by classroom.building "
  },
  {
    "NatSQL": "select course.title from course  where  count ( course.* )  > 1  group by course.title "
  },
  {
    "NatSQL": "select course.title from course  where  count ( course.* )  > 1  group by course.title "
  },
  {
    "NatSQL": "select sum ( course.credits )  , course.dept_name from course  group by course.dept_name "
  },
  {
    "NatSQL": "select sum ( course.credits )  , course.dept_name from course  group by course.dept_name "
  },
  {
    "NatSQL": "select min ( instructor.salary )  , instructor.dept_name from instructor  where  avg ( instructor.salary )  > avg ( instructor.salary )   group by instructor.dept_name "
  },
  {
    "NatSQL": "select min ( instructor.salary )  , instructor.dept_name from instructor  where  avg ( instructor.salary )  > avg ( instructor.salary )   group by instructor.dept_name "
  },
  {
    "NatSQL": "select count ( section.* )  , section.semester , section.year from section  group by section.semester , section.year "
  },
  {
    "NatSQL": "select count ( section.* )  , section.semester , section.year from section  group by section.semester , section.year "
  },
  {
    "NatSQL": "select section.year from section  group by section.year  order by count ( section.* )  desc limit 1"
  },
  {
    "NatSQL": "select section.year from section  group by section.year  order by count ( section.* )  desc limit 1"
  },
  {
    "NatSQL": "select section.semester , section.year from section  group by section.semester , section.year  order by count ( section.* )  desc limit 1"
  },
  {
    "NatSQL": "select section.semester , section.year from section  group by section.semester , section.year  order by count ( section.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.dept_name from student  group by student.dept_name  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.dept_name from student  group by student.dept_name  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( student.* )  , student.dept_name from student  group by student.dept_name "
  },
  {
    "NatSQL": "select count ( student.* )  , student.dept_name from student  group by student.dept_name "
  },
  {
    "NatSQL": "select takes.semester , takes.year from takes  group by takes.semester , takes.year  order by count ( takes.* )  asc limit 1"
  },
  {
    "NatSQL": "select takes.semester , takes.year from takes  group by takes.semester , takes.year  order by count ( takes.* )  asc limit 1"
  },
  {
    "NatSQL": "select advisor.i_ID from advisor  where  student.dept_name = \"历史\" "
  },
  {
    "NatSQL": "select advisor.i_ID from advisor  where  student.dept_name = \"历史\" "
  },
  {
    "NatSQL": "select instructor.name , instructor.salary from advisor  where  @.@ join advisor.*  and  student.dept_name = \"历史\" "
  },
  {
    "NatSQL": "select instructor.name , instructor.salary from advisor  where  @.@ join advisor.*  and  student.dept_name = \"历史\" "
  },
  {
    "NatSQL": "select course.course_id from course  where  except_  @.@ is prereq.* "
  },
  {
    "NatSQL": "select course.course_id from course  where  except_  @.@ is prereq.* "
  },
  {
    "NatSQL": "select course.title from course  where  @.@ not in prereq.course_id "
  },
  {
    "NatSQL": "select course.title from course  where  @.@ not in prereq.course_id "
  },
  {
    "NatSQL": "select course.title from course  where  @.@ in prereq.*  and  course.title = \"国际金融\" "
  },
  {
    "NatSQL": "select course.title from course  where  @.@ in prereq.*  and  course.title = \"国际金融\" "
  },
  {
    "NatSQL": "select course.title from course  where  @.@ in prereq.course_id  and  course.title = \"微分几何\" "
  },
  {
    "NatSQL": "select course.title from course  where  @.@ in prereq.course_id  and  course.title = \"微分几何\" "
  },
  {
    "NatSQL": "select student.name from student  where  @.@ in takes.*  and  takes.semester = \"秋季\"  and  takes.year = 2003 "
  },
  {
    "NatSQL": "select student.name from student  where  @.@ in takes.*  and  takes.semester = \"秋季\"  and  takes.year = 2003 "
  },
  {
    "NatSQL": "select course.title from course  where  section.building = \"智远楼\"  and  section.semester = \"秋季\"  and  section.year = 2010 "
  },
  {
    "NatSQL": "select course.title from course  where  section.building = \"智远楼\"  and  section.semester = \"秋季\"  and  section.year = 2010 "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  @.@ join teaches.*  and  course.title = \"C语言\" "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  course.title = \"C语言\" "
  },
  {
    "NatSQL": "select instructor.name , instructor.salary from advisor  where  @.@ join advisor.*  and  student.dept_name = \"数学\" "
  },
  {
    "NatSQL": "select instructor.name , instructor.salary from advisor  where  @.@ join advisor.*  and  student.dept_name = \"数学\" "
  },
  {
    "NatSQL": "select instructor.name from advisor  where  @.@ join advisor.*  and  student.dept_name = \"数学\"  order by student.tot_cred asc"
  },
  {
    "NatSQL": "select instructor.name from advisor  where  @.@ join advisor.*  and  student.dept_name = \"数学\"  order by student.tot_cred asc"
  },
  {
    "NatSQL": "select course.title from course  where  @.@ in prereq.*  and  course.title = \"移动计算\" "
  },
  {
    "NatSQL": "select course.title from course  where  @.@ in prereq.*  and  course.title = \"移动计算\" "
  },
  {
    "NatSQL": "select instructor.name from advisor  where  @.@ join advisor.*  order by student.tot_cred desc limit 1"
  },
  {
    "NatSQL": "select instructor.name from advisor  where  @.@ join advisor.*  order by student.tot_cred desc limit 1"
  },
  {
    "NatSQL": "select instructor.name from instructor  where  @.@ not in teaches.* "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  @.@ not in teaches.* "
  },
  {
    "NatSQL": "select instructor.ID from instructor  where  except_  @.@ is teaches.* "
  },
  {
    "NatSQL": "select instructor.ID from instructor  where  except_  @.@ is teaches.* "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  @.@ not in teaches.*  and  teaches.semester = \"春季\" "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  @.@ not in teaches.*  and  teaches.semester = \"春季\" "
  },
  {
    "NatSQL": "select instructor.dept_name from instructor  group by instructor.dept_name  order by avg ( instructor.salary )  desc limit 1"
  },
  {
    "NatSQL": "select instructor.dept_name from instructor  group by instructor.dept_name  order by avg ( instructor.salary )  desc limit 1"
  },
  {
    "NatSQL": "select avg ( instructor.salary )  , count ( instructor.* )  from instructor  order by department.budget desc limit 1"
  },
  {
    "NatSQL": "select avg ( instructor.salary )  , count ( instructor.* )  from instructor  order by department.budget desc limit 1"
  },
  {
    "NatSQL": "select course.title , course.credits from classroom  where  @.@ = max ( classroom.capacity )  "
  },
  {
    "NatSQL": "select course.title , course.credits from classroom  where  @.@ = max ( classroom.capacity )  "
  },
  {
    "NatSQL": "select student.name from student  where  @.@ not in takes.*  and  course.dept_name = \"生物学\" "
  },
  {
    "NatSQL": "select student.name from student  where  @.@ not in takes.*  and  course.dept_name = \"生物学\" "
  },
  {
    "NatSQL": "select count (  distinct student.ID )  , count (  distinct instructor.ID )  , department.dept_name from department  group by instructor.dept_name "
  },
  {
    "NatSQL": "select count (  distinct student.ID )  , count (  distinct instructor.ID )  , department.dept_name from department  group by instructor.dept_name "
  },
  {
    "NatSQL": "select student.name from student  where  takes.course_id in prereq.prereq_id  and  course.title = \"国际金融\" "
  },
  {
    "NatSQL": "select student.name from student  where  takes.course_id in prereq.prereq_id  and  course.title = \"国际金融\" "
  },
  {
    "NatSQL": "select instructor.name , instructor.salary from instructor  where  @.@ < avg ( instructor.salary )   and  instructor.dept_name = \"屋里\" "
  },
  {
    "NatSQL": "select instructor.name , instructor.salary from instructor  where  @.@ < avg ( instructor.salary )   and  instructor.dept_name = \"屋里\" "
  },
  {
    "NatSQL": "select student.name from course  where  course.dept_name = \"统计学\" "
  },
  {
    "NatSQL": "select student.name from course  where  course.dept_name = \"统计学\" "
  },
  {
    "NatSQL": "select section.building , section.room_number , section.semester , section.year from course  where  course.dept_name = \"心理学\"  order by course.title asc"
  },
  {
    "NatSQL": "select section.building , section.room_number , section.semester , section.year from course  where  course.dept_name = \"心理学\"  order by course.title asc"
  },
  {
    "NatSQL": "select instructor.name from instructor  where  instructor.dept_name = \"计算机科学\" "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  instructor.dept_name = \"计算机科学\" "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  instructor.dept_name = \"计算机科学\"  and  instructor.salary > 80000 "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  instructor.dept_name = \"计算机科学\"  and  instructor.salary > 80000 "
  },
  {
    "NatSQL": "select instructor.name , teaches.course_id from instructor "
  },
  {
    "NatSQL": "select instructor.name , teaches.course_id from instructor "
  },
  {
    "NatSQL": "select instructor.name , teaches.course_id from instructor  where  instructor.dept_name = \"艺术\" "
  },
  {
    "NatSQL": "select instructor.name , teaches.course_id from instructor  where  instructor.dept_name = \"艺术\" "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  instructor.name like \"明\" "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  instructor.name like \"明\" "
  },
  {
    "NatSQL": "select  distinct instructor.name from instructor  order by instructor.name asc"
  },
  {
    "NatSQL": "select  distinct instructor.name from instructor  order by instructor.name asc"
  },
  {
    "NatSQL": "select section.course_id from section  where  section.semester = \"秋季\"  and  section.year = 2009  or  section.semester = \"春季\"  and  section.year = 2010 "
  },
  {
    "NatSQL": "select section.course_id from section  where  section.semester = \"秋季\"  and  section.year = 2009  or  section.semester = \"春季\"  and  section.year = 2010 "
  },
  {
    "NatSQL": "select section.course_id from section  where  section.semester = \"秋季\"  and  section.year = 2009  and  section.semester = \"春季\"  and  section.year = 2010 "
  },
  {
    "NatSQL": "select section.course_id from section  where  section.semester = \"秋季\"  and  section.year = 2009  and  section.semester = \"春季\"  and  section.year = 2010 "
  },
  {
    "NatSQL": "select section.course_id from section  where  section.semester = \"秋季\"  and  section.year = 2009  and  section.semester != \"春季\"  and  section.year = 2010 "
  },
  {
    "NatSQL": "select section.course_id from section  where  section.semester = \"秋季\"  and  section.year = 2009  and  section.semester != \"春季\"  and  section.year = 2010 "
  },
  {
    "NatSQL": "select  distinct instructor.salary from instructor  where  @.@ < max ( instructor.salary )  "
  },
  {
    "NatSQL": "select  distinct instructor.salary from instructor  where  @.@ < max ( instructor.salary )  "
  },
  {
    "NatSQL": "select count (  distinct teaches.ID )  from teaches  where  teaches.semester = \"春季\"  and  teaches.year = 2010 "
  },
  {
    "NatSQL": "select count (  distinct teaches.ID )  from teaches  where  teaches.semester = \"春季\"  and  teaches.year = 2010 "
  },
  {
    "NatSQL": "select instructor.dept_name , avg ( instructor.salary )  from instructor  where  avg ( instructor.salary )  > 42000  group by instructor.dept_name "
  },
  {
    "NatSQL": "select instructor.dept_name , avg ( instructor.salary )  from instructor  where  avg ( instructor.salary )  > 42000  group by instructor.dept_name "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  @.@ > min ( instructor.salary )   and  instructor.dept_name = \"生物学\" "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  @.@ > min ( instructor.salary )   and  instructor.dept_name = \"生物学\" "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  @.@ > max ( instructor.salary )   and  instructor.dept_name = \"生物学\" "
  },
  {
    "NatSQL": "select instructor.name from instructor  where  @.@ > max ( instructor.salary )   and  instructor.dept_name = \"生物学\" "
  },
  {
    "NatSQL": "select count ( debate.* )  from debate "
  },
  {
    "NatSQL": "select debate.Venue from debate  order by debate.Num_of_Audience asc"
  },
  {
    "NatSQL": "select debate.Date , debate.Venue from debate "
  },
  {
    "NatSQL": "select debate.Date from debate  where  debate.Num_of_Audience > 150 "
  },
  {
    "NatSQL": "select people.Name from people  where  people.Age = 35  or  people.Age = 36 "
  },
  {
    "NatSQL": "select people.Party from people  order by people.Age asc limit 1"
  },
  {
    "NatSQL": "select people.Party , count ( people.* )  from people  group by people.Party "
  },
  {
    "NatSQL": "select people.Party from people  group by people.Party  order by count ( people.* )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct debate.Venue from debate "
  },
  {
    "NatSQL": "select people.Name , debate.Date , debate.Venue from debate_people "
  },
  {
    "NatSQL": "select people.Name , debate.Date , debate.Venue from debate_people  order by people.Name asc"
  },
  {
    "NatSQL": "select people.Name from debate_people  where  debate.Num_of_Audience > 200 "
  },
  {
    "NatSQL": "select people.Name , count ( debate_people.* )  from debate_people  group by people.Name "
  },
  {
    "NatSQL": "select people.Name from debate_people  where  count ( debate_people.* )  >= 2  group by people.Name "
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ not in debate_people.Affirmative "
  },
  {
    "NatSQL": "select customers.Customer_Details from customers  order by customers.Customer_Details asc"
  },
  {
    "NatSQL": "select customers.Customer_Details from customers  order by customers.Customer_Details asc"
  },
  {
    "NatSQL": "select policies.Policy_Type_Code from policies  where  customers.Customer_Details = \"李帅\" "
  },
  {
    "NatSQL": "select policies.Policy_Type_Code from policies  where  customers.Customer_Details = \"李帅\" "
  },
  {
    "NatSQL": "select policies.Policy_Type_Code from policies  group by policies.Policy_Type_Code  order by count ( policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select policies.Policy_Type_Code from policies  group by policies.Policy_Type_Code  order by count ( policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select policies.Policy_Type_Code from policies  where  count ( policies.* )  > 2  group by policies.Policy_Type_Code "
  },
  {
    "NatSQL": "select policies.Policy_Type_Code from policies  where  count ( policies.* )  > 2  group by policies.Policy_Type_Code "
  },
  {
    "NatSQL": "select sum ( claim_headers.Amount_Piad )  , avg ( claim_headers.Amount_Piad )  from claim_headers "
  },
  {
    "NatSQL": "select sum ( claim_headers.Amount_Piad )  , avg ( claim_headers.Amount_Piad )  from claim_headers "
  },
  {
    "NatSQL": "select sum ( claim_headers.Amount_Claimed )  from claim_headers  where  @.@ = claims_documents.Created_Date  order by claims_documents.Created_Date asc limit 1"
  },
  {
    "NatSQL": "select sum ( claim_headers.Amount_Claimed )  from claim_headers  where  @.@ = claims_documents.Created_Date  order by claims_documents.Created_Date asc limit 1"
  },
  {
    "NatSQL": "select customers.Customer_Details from claim_headers  where  @.@ = max ( claim_headers.Amount_Claimed )  "
  },
  {
    "NatSQL": "select customers.Customer_Details from claim_headers  where  @.@ = max ( claim_headers.Amount_Claimed )  "
  },
  {
    "NatSQL": "select customers.Customer_Details from claim_headers  where  @.@ = min ( claim_headers.Amount_Piad )  "
  },
  {
    "NatSQL": "select customers.Customer_Details from claim_headers  where  @.@ = min ( claim_headers.Amount_Piad )  "
  },
  {
    "NatSQL": "select customers.Customer_Details from customers  where  except_  @.@ is policies.* "
  },
  {
    "NatSQL": "select customers.Customer_Details from customers  where  except_  @.@ is policies.* "
  },
  {
    "NatSQL": "select count ( claims_processing_stages.* )  from claims_processing_stages "
  },
  {
    "NatSQL": "select count ( claims_processing_stages.* )  from claims_processing_stages "
  },
  {
    "NatSQL": "select claims_processing_stages.Claim_Status_Name from claims_processing  group by claims_processing.Claim_Stage_ID  order by count ( claims_processing.* )  desc limit 1"
  },
  {
    "NatSQL": "select claims_processing_stages.Claim_Status_Name from claims_processing  group by claims_processing.Claim_Stage_ID  order by count ( claims_processing.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.Customer_Details from customers  where  customers.Customer_Details like \"楠\" "
  },
  {
    "NatSQL": "select customers.Customer_Details from customers  where  customers.Customer_Details like \"楠\" "
  },
  {
    "NatSQL": "select  distinct customers.Customer_Details from policies  where  policies.Policy_Type_Code = \"代理\" "
  },
  {
    "NatSQL": "select  distinct customers.Customer_Details from policies  where  policies.Policy_Type_Code = \"代理\" "
  },
  {
    "NatSQL": "select  distinct customers.Customer_Details from policies  where  policies.Policy_Type_Code = \"代理\"  or  policies.Policy_Type_Code = \"统一\" "
  },
  {
    "NatSQL": "select  distinct customers.Customer_Details from policies  where  policies.Policy_Type_Code = \"代理\"  or  policies.Policy_Type_Code = \"统一\" "
  },
  {
    "NatSQL": "select customers.Customer_Details from customers  where  union_  @.@ is staff.* "
  },
  {
    "NatSQL": "select customers.Customer_Details from customers  where  union_  @.@ is staff.* "
  },
  {
    "NatSQL": "select policies.Policy_Type_Code , count ( policies.* )  from policies  group by policies.Policy_Type_Code "
  },
  {
    "NatSQL": "select policies.Policy_Type_Code , count ( policies.* )  from policies  group by policies.Policy_Type_Code "
  },
  {
    "NatSQL": "select customers.Customer_Details from policies  group by customers.Customer_Details  order by count ( policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.Customer_Details from policies  group by customers.Customer_Details  order by count ( policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select claims_processing_stages.Claim_Status_Description from claims_processing_stages  where  claims_processing_stages.Claim_Status_Name = \"开放\" "
  },
  {
    "NatSQL": "select claims_processing_stages.Claim_Status_Description from claims_processing_stages  where  claims_processing_stages.Claim_Status_Name = \"开放\" "
  },
  {
    "NatSQL": "select count (  distinct claims_processing.Claim_Outcome_Code )  from claims_processing "
  },
  {
    "NatSQL": "select count (  distinct claims_processing.Claim_Outcome_Code )  from claims_processing "
  },
  {
    "NatSQL": "select customers.Customer_Details from policies  where  @.@ = max ( policies.Start_Date )  "
  },
  {
    "NatSQL": "select customers.Customer_Details from policies  where  @.@ = max ( policies.Start_Date )  "
  },
  {
    "NatSQL": "select count ( accounts.* )  from accounts "
  },
  {
    "NatSQL": "select count ( accounts.* )  from accounts "
  },
  {
    "NatSQL": "select count (  distinct accounts.customer_id )  from accounts "
  },
  {
    "NatSQL": "select count (  distinct accounts.customer_id )  from accounts "
  },
  {
    "NatSQL": "select accounts.account_id , accounts.date_account_opened , accounts.account_name , accounts.other_account_details from accounts "
  },
  {
    "NatSQL": "select accounts.account_id , accounts.date_account_opened , accounts.account_name , accounts.other_account_details from accounts "
  },
  {
    "NatSQL": "select accounts.account_id , accounts.date_account_opened , accounts.account_name , accounts.other_account_details from accounts  where  customers.customer_first_name = \"余\" "
  },
  {
    "NatSQL": "select accounts.account_id , accounts.date_account_opened , accounts.account_name , accounts.other_account_details from accounts  where  customers.customer_first_name = \"余\" "
  },
  {
    "NatSQL": "select accounts.account_name , accounts.other_account_details from accounts  where  customers.customer_first_name = \"余\"  and  customers.customer_last_name = \"菲菲\" "
  },
  {
    "NatSQL": "select accounts.account_name , accounts.other_account_details from accounts  where  customers.customer_first_name = \"余\"  and  customers.customer_last_name = \"菲菲\" "
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_last_name from accounts  where  accounts.account_name = \"900\" "
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_last_name from accounts  where  accounts.account_name = \"900\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  @.@ not in accounts.customer_id "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  @.@ not in accounts.customer_id "
  },
  {
    "NatSQL": "select  distinct customers.customer_first_name , customers.customer_last_name , customers.phone_number from customers  where  @.@ join accounts.* "
  },
  {
    "NatSQL": "select  distinct customers.customer_first_name , customers.customer_last_name , customers.phone_number from customers  where  @.@ join accounts.* "
  },
  {
    "NatSQL": "select customers.customer_id from customers  where  except_  @.@ is accounts.* "
  },
  {
    "NatSQL": "select customers.customer_id from customers  where  except_  @.@ is accounts.* "
  },
  {
    "NatSQL": "select count ( accounts.* )  , accounts.customer_id from accounts  group by accounts.customer_id "
  },
  {
    "NatSQL": "select count ( accounts.* )  , accounts.customer_id from accounts  group by accounts.customer_id "
  },
  {
    "NatSQL": "select customers.customer_id , customers.customer_first_name , customers.customer_last_name from accounts  group by accounts.customer_id  order by count ( accounts.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_id , customers.customer_first_name , customers.customer_last_name from accounts  group by accounts.customer_id  order by count ( accounts.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_id , customers.customer_first_name , customers.customer_last_name , count ( accounts.* )  from accounts  group by accounts.customer_id "
  },
  {
    "NatSQL": "select customers.customer_id , customers.customer_first_name , customers.customer_last_name , count ( accounts.* )  from accounts  group by accounts.customer_id "
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_id from accounts  where  count ( accounts.* )  >= 2  group by accounts.customer_id "
  },
  {
    "NatSQL": "select customers.customer_first_name , customers.customer_id from accounts  where  count ( accounts.* )  >= 2  group by accounts.customer_id "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select customers.gender , count ( customers.* )  from customers  group by customers.gender "
  },
  {
    "NatSQL": "select customers.gender , count ( customers.* )  from customers  group by customers.gender "
  },
  {
    "NatSQL": "select count ( financial_transactions.* )  from financial_transactions "
  },
  {
    "NatSQL": "select count ( financial_transactions.* )  from financial_transactions "
  },
  {
    "NatSQL": "select count ( financial_transactions.* )  , financial_transactions.account_id from financial_transactions "
  },
  {
    "NatSQL": "select count ( financial_transactions.* )  , financial_transactions.account_id from financial_transactions "
  },
  {
    "NatSQL": "select count ( financial_transactions.* )  from financial_transactions  where  accounts.account_name = \"337\" "
  },
  {
    "NatSQL": "select count ( financial_transactions.* )  from financial_transactions  where  accounts.account_name = \"337\" "
  },
  {
    "NatSQL": "select avg ( financial_transactions.transaction_amount )  , min ( financial_transactions.transaction_amount )  , max ( financial_transactions.transaction_amount )  , sum ( financial_transactions.transaction_amount )  from financial_transactions "
  },
  {
    "NatSQL": "select avg ( financial_transactions.transaction_amount )  , min ( financial_transactions.transaction_amount )  , max ( financial_transactions.transaction_amount )  , sum ( financial_transactions.transaction_amount )  from financial_transactions "
  },
  {
    "NatSQL": "select financial_transactions.transaction_id from financial_transactions  where  @.@ > avg ( financial_transactions.transaction_amount )  "
  },
  {
    "NatSQL": "select financial_transactions.transaction_id from financial_transactions  where  @.@ > avg ( financial_transactions.transaction_amount )  "
  },
  {
    "NatSQL": "select financial_transactions.transaction_type , sum ( financial_transactions.transaction_amount )  from financial_transactions  group by financial_transactions.transaction_type "
  },
  {
    "NatSQL": "select financial_transactions.transaction_type , sum ( financial_transactions.transaction_amount )  from financial_transactions  group by financial_transactions.transaction_type "
  },
  {
    "NatSQL": "select accounts.account_name , accounts.account_id , count ( financial_transactions.* )  from financial_transactions  group by financial_transactions.account_id "
  },
  {
    "NatSQL": "select accounts.account_name , financial_transactions.account_id , count ( financial_transactions.* )  from financial_transactions  group by financial_transactions.account_id "
  },
  {
    "NatSQL": "select financial_transactions.account_id from financial_transactions  group by financial_transactions.account_id  order by count ( financial_transactions.* )  desc limit 1"
  },
  {
    "NatSQL": "select financial_transactions.account_id from financial_transactions  group by financial_transactions.account_id  order by count ( financial_transactions.* )  desc limit 1"
  },
  {
    "NatSQL": "select accounts.account_id , accounts.account_name from financial_transactions  where  count ( financial_transactions.* )  >= 4  group by financial_transactions.account_id "
  },
  {
    "NatSQL": "select accounts.account_id , accounts.account_name from financial_transactions  where  count ( financial_transactions.* )  >= 4  group by financial_transactions.account_id "
  },
  {
    "NatSQL": "select  distinct products.product_size from products "
  },
  {
    "NatSQL": "select  distinct products.product_size from products "
  },
  {
    "NatSQL": "select  distinct products.product_color from products "
  },
  {
    "NatSQL": "select  distinct products.product_color from products "
  },
  {
    "NatSQL": "select financial_transactions.invoice_number , count ( financial_transactions.* )  from financial_transactions  group by financial_transactions.invoice_number "
  },
  {
    "NatSQL": "select financial_transactions.invoice_number , count ( financial_transactions.* )  from financial_transactions  group by financial_transactions.invoice_number "
  },
  {
    "NatSQL": "select invoices.invoice_number , invoices.invoice_date from financial_transactions  group by financial_transactions.invoice_number  order by count ( financial_transactions.* )  desc limit 1"
  },
  {
    "NatSQL": "select invoices.invoice_number , invoices.invoice_date from financial_transactions  group by financial_transactions.invoice_number  order by count ( financial_transactions.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( invoices.* )  from invoices "
  },
  {
    "NatSQL": "select count ( invoices.* )  from invoices "
  },
  {
    "NatSQL": "select invoices.invoice_date , invoices.order_id , orders.order_details from invoices "
  },
  {
    "NatSQL": "select invoices.invoice_date , invoices.order_id , orders.order_details from invoices "
  },
  {
    "NatSQL": "select invoices.order_id , count ( invoices.* )  from invoices  group by invoices.order_id "
  },
  {
    "NatSQL": "select invoices.order_id , count ( invoices.* )  from invoices  group by invoices.order_id "
  },
  {
    "NatSQL": "select orders.order_id , orders.order_details from invoices  where  count ( invoices.* )  > 2  group by orders.order_id "
  },
  {
    "NatSQL": "select orders.order_id , orders.order_details from invoices  where  count ( invoices.* )  > 2  group by orders.order_id "
  },
  {
    "NatSQL": "select customers.customer_last_name , customers.customer_id , customers.phone_number from orders  group by orders.customer_id  order by count ( orders.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_last_name , customers.customer_id , customers.phone_number from orders  group by orders.customer_id  order by count ( orders.* )  desc limit 1"
  },
  {
    "NatSQL": "select products.product_name from products  where  except_  @.@ is order_items.* "
  },
  {
    "NatSQL": "select products.product_name from products  where  except_  @.@ is order_items.* "
  },
  {
    "NatSQL": "select products.product_name , sum ( order_items.product_quantity )  from order_items  group by products.product_name "
  },
  {
    "NatSQL": "select products.product_name , sum ( order_items.product_quantity )  from order_items  group by products.product_name "
  },
  {
    "NatSQL": "select order_items.order_id , count ( order_items.* )  from order_items  group by order_items.order_id "
  },
  {
    "NatSQL": "select order_items.order_id , count ( order_items.* )  from order_items  group by order_items.order_id "
  },
  {
    "NatSQL": "select order_items.product_id , count (  distinct order_items.order_id )  from order_items  group by order_items.product_id "
  },
  {
    "NatSQL": "select order_items.product_id , count (  distinct order_items.order_id )  from order_items  group by order_items.product_id "
  },
  {
    "NatSQL": "select products.product_name , count ( orders.* )  from order_items  group by products.product_name "
  },
  {
    "NatSQL": "select products.product_name , count ( orders.* )  from order_items  group by products.product_name "
  },
  {
    "NatSQL": "select order_items.order_id , count (  distinct order_items.product_id )  from order_items  group by order_items.order_id "
  },
  {
    "NatSQL": "select order_items.order_id , count (  distinct order_items.product_id )  from order_items  group by order_items.order_id "
  },
  {
    "NatSQL": "select order_items.order_id , sum ( order_items.product_quantity )  from order_items  group by order_items.order_id "
  },
  {
    "NatSQL": "select order_items.order_id , sum ( order_items.product_quantity )  from order_items  group by order_items.order_id "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  @.@ not in order_items.* "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  @.@ not in order_items.* "
  },
  {
    "NatSQL": "select count ( church.* )  from church  where  church.Open_Date < 1850 "
  },
  {
    "NatSQL": "select church.Name , church.Open_Date , church.Organized_by from church "
  },
  {
    "NatSQL": "select church.Name from church  order by church.Open_Date desc"
  },
  {
    "NatSQL": "select church.Open_Date from church  where  count ( church.* )  >= 2  group by church.Open_Date "
  },
  {
    "NatSQL": "select church.Organized_by , church.Name from church  where  church.Open_Date between 1830 and 1840 "
  },
  {
    "NatSQL": "select church.Open_Date , count ( church.* )  from church  group by church.Open_Date "
  },
  {
    "NatSQL": "select church.Name , church.Open_Date from church  order by church.Open_Date desc limit 3"
  },
  {
    "NatSQL": "select count ( people.* )  from people  where  people.Is_Male = \"女\"  and  people.Age > 30 "
  },
  {
    "NatSQL": "select people.Country from people  where  people.Age < 25  and  people.Age > 30 "
  },
  {
    "NatSQL": "select min ( people.Age )  , max ( people.Age )  , avg ( people.Age )  from people "
  },
  {
    "NatSQL": "select people.Name , people.Country from people  where  @.@ < avg ( people.Age )  "
  },
  {
    "NatSQL": "select people.Name , people.Name from wedding  where  wedding.Year > 2014 "
  },
  {
    "NatSQL": "select people.Name , people.Age from people  where  people.Is_Male = \"T\"  and  @.@ not in wedding.Male_ID "
  },
  {
    "NatSQL": "select church.Name from church  where  except_  @.@ is church.*  and  wedding.Year = 2015 "
  },
  {
    "NatSQL": "select church.Name from church  where  count ( wedding.* )  >= 2  group by church.Church_ID "
  },
  {
    "NatSQL": "select people.Name from wedding  where  wedding.Year = 2016  and  people.Is_Male = \"女\"  and  people.Country = \"加拿大\" "
  },
  {
    "NatSQL": "select count ( wedding.* )  from wedding  where  wedding.Year = 2016 "
  },
  {
    "NatSQL": "select church.Name from wedding  where  people.Age > 30  or  people.Age > 30 "
  },
  {
    "NatSQL": "select people.Country , count ( people.* )  from people  group by people.Country "
  },
  {
    "NatSQL": "select count (  distinct wedding.Church_ID )  from wedding  where  wedding.Year = 2016 "
  },
  {
    "NatSQL": "select count ( artist.* )  from artist "
  },
  {
    "NatSQL": "select count ( artist.* )  from artist "
  },
  {
    "NatSQL": "select artist.Name , artist.Age , artist.Country from artist  order by artist.Year_Join asc"
  },
  {
    "NatSQL": "select artist.Name , artist.Age , artist.Country from artist  order by artist.Year_Join asc"
  },
  {
    "NatSQL": "select  distinct artist.Country from artist "
  },
  {
    "NatSQL": "select  distinct artist.Country from artist "
  },
  {
    "NatSQL": "select artist.Name , artist.Year_Join from artist  where  artist.Country != \"美国\" "
  },
  {
    "NatSQL": "select artist.Name , artist.Year_Join from artist  where  artist.Country != \"美国\" "
  },
  {
    "NatSQL": "select count ( artist.* )  from artist  where  artist.Age > 46  and  artist.Year_Join > 1990 "
  },
  {
    "NatSQL": "select count ( artist.* )  from artist  where  artist.Age > 46  and  artist.Year_Join > 1990 "
  },
  {
    "NatSQL": "select avg ( artist.Age )  , min ( artist.Age )  from artist  where  artist.Country = \"美国\" "
  },
  {
    "NatSQL": "select avg ( artist.Age )  , min ( artist.Age )  from artist  where  artist.Country = \"美国\" "
  },
  {
    "NatSQL": "select artist.Name from artist  order by artist.Year_Join desc limit 1"
  },
  {
    "NatSQL": "select artist.Name from artist  order by artist.Year_Join desc limit 1"
  },
  {
    "NatSQL": "select count ( exhibition.* )  from exhibition  where  exhibition.Year >= 2005 "
  },
  {
    "NatSQL": "select count ( exhibition.* )  from exhibition  where  exhibition.Year >= 2005 "
  },
  {
    "NatSQL": "select exhibition.Theme , exhibition.Year from exhibition  where  exhibition.Ticket_Price < 15 "
  },
  {
    "NatSQL": "select exhibition.Theme , exhibition.Year from exhibition  where  exhibition.Ticket_Price < 15 "
  },
  {
    "NatSQL": "select artist.Name , count ( exhibition.* )  from exhibition  group by exhibition.Artist_ID "
  },
  {
    "NatSQL": "select artist.Name , count ( exhibition.* )  from exhibition  group by exhibition.Artist_ID "
  },
  {
    "NatSQL": "select artist.Name , artist.Country from exhibition  group by exhibition.Artist_ID  order by count ( exhibition.* )  desc limit 1"
  },
  {
    "NatSQL": "select artist.Name , artist.Country from exhibition  group by exhibition.Artist_ID  order by count ( exhibition.* )  desc limit 1"
  },
  {
    "NatSQL": "select artist.Name from artist  where  @.@ not in exhibition.* "
  },
  {
    "NatSQL": "select artist.Name from artist  where  @.@ not in exhibition.* "
  },
  {
    "NatSQL": "select exhibition.Theme , artist.Name from exhibition  where  @.@ > avg ( exhibition.Ticket_Price )  "
  },
  {
    "NatSQL": "select exhibition.Theme , artist.Name from exhibition  where  @.@ > avg ( exhibition.Ticket_Price )  "
  },
  {
    "NatSQL": "select avg ( exhibition.Ticket_Price )  , min ( exhibition.Ticket_Price )  , max ( exhibition.Ticket_Price )  from exhibition  where  exhibition.Year < 2009 "
  },
  {
    "NatSQL": "select avg ( exhibition.Ticket_Price )  , min ( exhibition.Ticket_Price )  , max ( exhibition.Ticket_Price )  from exhibition  where  exhibition.Year < 2009 "
  },
  {
    "NatSQL": "select exhibition.Theme , exhibition.Year from exhibition  order by exhibition.Ticket_Price desc"
  },
  {
    "NatSQL": "select exhibition.Theme , exhibition.Year from exhibition  order by exhibition.Ticket_Price desc"
  },
  {
    "NatSQL": "select exhibition.Theme , exhibition_record.Date , exhibition_record.Attendance from exhibition_record  where  exhibition.Year = 2004 "
  },
  {
    "NatSQL": "select exhibition.Theme , exhibition_record.Date , exhibition_record.Attendance from exhibition_record  where  exhibition.Year = 2004 "
  },
  {
    "NatSQL": "select artist.Name from artist  where  except_  @.@ is exhibition.*  and  exhibition.Year = 2004 "
  },
  {
    "NatSQL": "select artist.Name from artist  where  except_  @.@ is exhibition.*  and  exhibition.Year = 2004 "
  },
  {
    "NatSQL": "select exhibition.Theme from exhibition_record  where  exhibition_record.Attendance < 100  and  exhibition_record.Attendance > 500 "
  },
  {
    "NatSQL": "select exhibition.Theme from exhibition_record  where  exhibition_record.Attendance < 100  and  exhibition_record.Attendance > 500 "
  },
  {
    "NatSQL": "select count ( exhibition_record.* )  from exhibition_record  where  exhibition_record.Attendance > 100  or  exhibition.Ticket_Price < 10 "
  },
  {
    "NatSQL": "select count ( exhibition_record.* )  from exhibition_record  where  exhibition_record.Attendance > 100  or  exhibition.Ticket_Price < 10 "
  },
  {
    "NatSQL": "select artist.Name from exhibition_record  where  avg ( exhibition_record.Attendance )  > 200  group by artist.Artist_ID "
  },
  {
    "NatSQL": "select artist.Name from exhibition_record  where  avg ( exhibition_record.Attendance )  > 200  group by artist.Artist_ID "
  },
  {
    "NatSQL": "select item.i_id from item  where  item.title = \"橙色\" "
  },
  {
    "NatSQL": "select item.* from item "
  },
  {
    "NatSQL": "select count ( review.* )  from review "
  },
  {
    "NatSQL": "select count ( useracct.* )  from useracct "
  },
  {
    "NatSQL": "select avg ( review.rating )  , max ( review.rating )  from review "
  },
  {
    "NatSQL": "select min ( review.rank )  from review "
  },
  {
    "NatSQL": "select count (  distinct review.u_id )  from review "
  },
  {
    "NatSQL": "select count (  distinct review.i_id )  from review "
  },
  {
    "NatSQL": "select count ( item.* )  from item  where  @.@ not in review.* "
  },
  {
    "NatSQL": "select useracct.name from useracct  where  @.@ not in review.* "
  },
  {
    "NatSQL": "select item.title from item  where  review.rating = 10 "
  },
  {
    "NatSQL": "select item.title from item  where  @.@ > avg ( review.rating )  "
  },
  {
    "NatSQL": "select item.title from item  where  review.rating < 5 "
  },
  {
    "NatSQL": "select item.title from item  where  review.rating > 8  and  review.rating < 5 "
  },
  {
    "NatSQL": "select item.title from item  where  review.rank > 3  and  avg ( review.rating )  > 5 "
  },
  {
    "NatSQL": "select item.title from item  group by review.i_id  order by avg ( review.rating )  asc limit 1"
  },
  {
    "NatSQL": "select item.title from item  order by item.title asc"
  },
  {
    "NatSQL": "select useracct.name from useracct  group by review.u_id  order by count ( review.* )  desc limit 1"
  },
  {
    "NatSQL": "select item.title , item.i_id from item  group by review.i_id  order by avg ( review.rating )  desc limit 1"
  },
  {
    "NatSQL": "select item.title , item.i_id from item  group by review.i_id  order by avg ( review.rank )  desc limit 1"
  },
  {
    "NatSQL": "select useracct.name , avg ( review.rating )  from useracct  group by review.u_id "
  },
  {
    "NatSQL": "select useracct.name , count ( review.* )  from useracct  group by review.u_id "
  },
  {
    "NatSQL": "select useracct.name from useracct  order by review.rating desc limit 1"
  },
  {
    "NatSQL": "select useracct.name from useracct  group by trust.source_u_id  order by avg ( trust.trust )  desc limit 1"
  },
  {
    "NatSQL": "select useracct.name , avg ( trust.trust )  from useracct  group by trust.target_u_id "
  },
  {
    "NatSQL": "select useracct.name from useracct  order by trust.trust asc limit 1"
  },
  {
    "NatSQL": "select item.title from item  where  @.@ not in review.* "
  },
  {
    "NatSQL": "select useracct.name from useracct  where  @.@ not in review.* "
  },
  {
    "NatSQL": "select count ( useracct.* )  from useracct  where  @.@ not in review.* "
  },
  {
    "NatSQL": "select count ( item.* )  from item  where  @.@ not in review.* "
  },
  {
    "NatSQL": "select count ( player.* )  from player "
  },
  {
    "NatSQL": "select player.Player_name from player  order by player.Votes asc"
  },
  {
    "NatSQL": "select player.Gender , player.Occupation from player "
  },
  {
    "NatSQL": "select player.Player_name , player.Residence from player  where  player.Occupation != \"研究员\" "
  },
  {
    "NatSQL": "select player.Sponsor_name from player  where  player.Residence = \"池\"  or  player.Residence = \"皓\" "
  },
  {
    "NatSQL": "select player.Player_name from player  order by player.Votes desc limit 1"
  },
  {
    "NatSQL": "select player.Occupation , count ( player.* )  from player  group by player.Occupation "
  },
  {
    "NatSQL": "select player.Occupation from player  group by player.Occupation  order by count ( player.* )  desc limit 1"
  },
  {
    "NatSQL": "select player.Residence from player  where  count ( player.* )  >= 2  group by player.Residence "
  },
  {
    "NatSQL": "select player.Player_name , coach.Coach_name from player_coach "
  },
  {
    "NatSQL": "select player.Player_name from player_coach  where  coach.Rank = 1 "
  },
  {
    "NatSQL": "select player.Player_name , player.Gender from player_coach  where  @.@ join coach.*  and  player_coach.Starting_year > 2011 "
  },
  {
    "NatSQL": "select player.Player_name , coach.Coach_name from player_coach  order by player.Votes desc"
  },
  {
    "NatSQL": "select player.Player_name from player  where  @.@ not in player_coach.* "
  },
  {
    "NatSQL": "select player.Residence from player  where  player.Gender = \"男\"  and  player.Gender = \"女\" "
  },
  {
    "NatSQL": "select club.Club_ID , club.Club_name , count ( coach.* )  from club  group by club.Club_ID "
  },
  {
    "NatSQL": "select match_result.Club_ID , match_result.Gold from match_result  group by match_result.Club_ID  order by count ( coach.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( gymnast.* )  from gymnast "
  },
  {
    "NatSQL": "select count ( gymnast.* )  from gymnast "
  },
  {
    "NatSQL": "select gymnast.Total_Points from gymnast  order by gymnast.Total_Points desc"
  },
  {
    "NatSQL": "select gymnast.Total_Points from gymnast  order by gymnast.Total_Points desc"
  },
  {
    "NatSQL": "select gymnast.Total_Points from gymnast  order by gymnast.Floor_Exercise_Points desc"
  },
  {
    "NatSQL": "select gymnast.Total_Points from gymnast  order by gymnast.Floor_Exercise_Points desc"
  },
  {
    "NatSQL": "select avg ( gymnast.Horizontal_Bar_Points )  from gymnast "
  },
  {
    "NatSQL": "select avg ( gymnast.Horizontal_Bar_Points )  from gymnast "
  },
  {
    "NatSQL": "select people.Name from people  order by people.Name asc"
  },
  {
    "NatSQL": "select people.Name from people  order by people.Name asc"
  },
  {
    "NatSQL": "select people.Name from gymnast  where  @.@ join gymnast.* "
  },
  {
    "NatSQL": "select people.Name from gymnast  where  @.@ join gymnast.* "
  },
  {
    "NatSQL": "select people.Name from gymnast  where  @.@ join gymnast.*  and  people.Hometown != \"洛阳\" "
  },
  {
    "NatSQL": "select people.Name from gymnast  where  @.@ join gymnast.*  and  people.Hometown != \"洛阳\" "
  },
  {
    "NatSQL": "select people.Age from people  order by people.Height desc limit 1"
  },
  {
    "NatSQL": "select people.Age from people  order by people.Height desc limit 1"
  },
  {
    "NatSQL": "select people.Name from people  order by people.Age desc limit 5"
  },
  {
    "NatSQL": "select people.Name from people  order by people.Age desc limit 5"
  },
  {
    "NatSQL": "select gymnast.Total_Points from gymnast  order by people.Age asc limit 1"
  },
  {
    "NatSQL": "select gymnast.Total_Points from gymnast  order by people.Age asc limit 1"
  },
  {
    "NatSQL": "select avg ( people.Age )  from gymnast  where  @.@ join gymnast.* "
  },
  {
    "NatSQL": "select avg ( people.Age )  from gymnast  where  @.@ join gymnast.* "
  },
  {
    "NatSQL": "select  distinct people.Hometown from gymnast  where  gymnast.Total_Points > 57.5 "
  },
  {
    "NatSQL": "select  distinct people.Hometown from gymnast  where  gymnast.Total_Points > 57.5 "
  },
  {
    "NatSQL": "select people.Hometown , count ( gymnast.* )  from gymnast  group by people.Hometown "
  },
  {
    "NatSQL": "select people.Hometown , count ( gymnast.* )  from gymnast  group by people.Hometown "
  },
  {
    "NatSQL": "select people.Hometown from gymnast  where  @.@ join gymnast.*  group by people.Hometown  order by count ( people.* )  desc limit 1"
  },
  {
    "NatSQL": "select people.Hometown from gymnast  where  @.@ join gymnast.*  group by people.Hometown  order by count ( people.* )  desc limit 1"
  },
  {
    "NatSQL": "select people.Hometown from gymnast  where  count ( gymnast.* )  >= 2  group by people.Hometown "
  },
  {
    "NatSQL": "select people.Hometown from gymnast  where  count ( gymnast.* )  >= 2  group by people.Hometown "
  },
  {
    "NatSQL": "select people.Name from gymnast  where  @.@ join gymnast.*  order by people.Height asc"
  },
  {
    "NatSQL": "select people.Name from gymnast  where  @.@ join gymnast.*  order by people.Height asc"
  },
  {
    "NatSQL": "select  distinct people.Hometown from people  where  except_  @.@ is gymnast.* "
  },
  {
    "NatSQL": "select  distinct people.Hometown from people  where  except_  @.@ is gymnast.* "
  },
  {
    "NatSQL": "select people.Hometown from people  where  people.Age > 23  and  people.Age < 20 "
  },
  {
    "NatSQL": "select people.Hometown from people  where  people.Age > 23  and  people.Age < 20 "
  },
  {
    "NatSQL": "select count (  distinct people.Hometown )  from people "
  },
  {
    "NatSQL": "select count (  distinct people.Hometown )  from people "
  },
  {
    "NatSQL": "select people.Age from gymnast  order by gymnast.Total_Points desc"
  },
  {
    "NatSQL": "select people.Age from gymnast  order by gymnast.Total_Points desc"
  },
  {
    "NatSQL": "select sum ( savings.balance )  from accounts  where  accounts.name != \"小智\" "
  },
  {
    "NatSQL": "select sum ( savings.balance )  from accounts  where  accounts.name != \"小智\" "
  },
  {
    "NatSQL": "select count ( accounts.* )  from accounts "
  },
  {
    "NatSQL": "select count ( accounts.* )  from accounts "
  },
  {
    "NatSQL": "select sum ( checking.balance )  from checking "
  },
  {
    "NatSQL": "select sum ( checking.balance )  from checking "
  },
  {
    "NatSQL": "select avg ( checking.balance )  from checking "
  },
  {
    "NatSQL": "select avg ( checking.balance )  from checking "
  },
  {
    "NatSQL": "select count ( savings.* )  from savings  where  @.@ > avg ( savings.balance )  "
  },
  {
    "NatSQL": "select count ( savings.* )  from savings  where  @.@ > avg ( savings.balance )  "
  },
  {
    "NatSQL": "select accounts.custid , accounts.name from accounts  where  @.@ < max ( checking.balance )  "
  },
  {
    "NatSQL": "select accounts.custid , accounts.name from accounts  where  @.@ < max ( checking.balance )  "
  },
  {
    "NatSQL": "select checking.balance from accounts  where  accounts.name like \"怡\" "
  },
  {
    "NatSQL": "select checking.balance from accounts  where  accounts.name like \"怡\" "
  },
  {
    "NatSQL": "select checking.balance , savings.balance from accounts  where  accounts.name = \"小智\" "
  },
  {
    "NatSQL": "select checking.balance , savings.balance from accounts  where  accounts.name = \"小智\" "
  },
  {
    "NatSQL": "select accounts.name from accounts  where  @.@ join checking.*  and  @.@ > avg ( checking.balance )   and  @.@ < avg ( savings.balance )  "
  },
  {
    "NatSQL": "select accounts.name from accounts  where  @.@ join checking.*  and  @.@ > avg ( checking.balance )   and  @.@ < avg ( savings.balance )  "
  },
  {
    "NatSQL": "select checking.balance from accounts  where  @.@ in accounts.name  sub  @.@ > avg ( savings.balance )  "
  },
  {
    "NatSQL": "select checking.balance from accounts  where  @.@ in accounts.name  sub  @.@ > avg ( savings.balance )  "
  },
  {
    "NatSQL": "select accounts.name from accounts  order by accounts.name asc"
  },
  {
    "NatSQL": "select accounts.name from accounts  order by accounts.name asc"
  },
  {
    "NatSQL": "select accounts.name from accounts  order by checking.balance + savings.balance asc limit 1"
  },
  {
    "NatSQL": "select accounts.name from accounts  order by checking.balance + savings.balance asc limit 1"
  },
  {
    "NatSQL": "select accounts.name , checking.balance + savings.balance from accounts  where  @.@ > avg ( savings.balance )  "
  },
  {
    "NatSQL": "select accounts.name , checking.balance + savings.balance from accounts  where  @.@ > avg ( savings.balance )  "
  },
  {
    "NatSQL": "select accounts.name , checking.balance from accounts  order by savings.balance asc limit 1"
  },
  {
    "NatSQL": "select accounts.name , checking.balance from accounts  order by savings.balance asc limit 1"
  },
  {
    "NatSQL": "select count ( checking.* )  , accounts.name from accounts  group by accounts.name "
  },
  {
    "NatSQL": "select count ( checking.* )  , accounts.name from accounts  group by accounts.name "
  },
  {
    "NatSQL": "select sum ( savings.balance )  , accounts.name from accounts  group by accounts.name "
  },
  {
    "NatSQL": "select sum ( savings.balance )  , accounts.name from accounts  group by accounts.name "
  },
  {
    "NatSQL": "select accounts.name from accounts  where  @.@ < avg ( checking.balance )  "
  },
  {
    "NatSQL": "select accounts.name from accounts  where  @.@ < avg ( checking.balance )  "
  },
  {
    "NatSQL": "select savings.balance from accounts  order by checking.balance desc limit 1"
  },
  {
    "NatSQL": "select savings.balance from accounts  order by checking.balance desc limit 1"
  },
  {
    "NatSQL": "select checking.balance + savings.balance from checking  order by checking.balance + savings.balance asc"
  },
  {
    "NatSQL": "select checking.balance + savings.balance from checking  order by checking.balance + savings.balance asc"
  },
  {
    "NatSQL": "select checking.balance , accounts.name from accounts  order by savings.balance asc limit 1"
  },
  {
    "NatSQL": "select checking.balance , accounts.name from accounts  order by savings.balance asc limit 1"
  },
  {
    "NatSQL": "select checking.balance , savings.balance , accounts.name from accounts "
  },
  {
    "NatSQL": "select checking.balance , savings.balance , accounts.name from accounts "
  },
  {
    "NatSQL": "select checking.balance , savings.balance , accounts.name from accounts  order by checking.balance + savings.balance desc"
  },
  {
    "NatSQL": "select checking.balance , savings.balance , accounts.name from accounts  order by checking.balance + savings.balance desc"
  },
  {
    "NatSQL": "select accounts.name from accounts  where  checking.balance > savings.balance "
  },
  {
    "NatSQL": "select accounts.name from accounts  where  checking.balance > savings.balance "
  },
  {
    "NatSQL": "select accounts.name , savings.balance + checking.balance from accounts  where  savings.balance < checking.balance "
  },
  {
    "NatSQL": "select accounts.name , savings.balance + checking.balance from accounts  where  savings.balance < checking.balance "
  },
  {
    "NatSQL": "select accounts.name , savings.balance from accounts  order by savings.balance desc limit 3"
  },
  {
    "NatSQL": "select accounts.name , savings.balance from accounts  order by savings.balance desc limit 3"
  },
  {
    "NatSQL": "select count ( browser.* )  from browser  where  browser.market_share >= 5 "
  },
  {
    "NatSQL": "select browser.name from browser  order by browser.market_share desc"
  },
  {
    "NatSQL": "select browser.id , browser.name , browser.market_share from browser "
  },
  {
    "NatSQL": "select max ( browser.market_share )  , min ( browser.market_share )  , avg ( browser.market_share )  from browser "
  },
  {
    "NatSQL": "select browser.id , browser.market_share from browser  where  browser.name = \"Safari\" "
  },
  {
    "NatSQL": "select web_client_accelerator.name , web_client_accelerator.Operating_system from web_client_accelerator  where  web_client_accelerator.Connection != \"广播\" "
  },
  {
    "NatSQL": "select browser.name from browser  where  web_client_accelerator.name = \"代理服务器\"  and  accelerator_compatible_browser.compatible_since_year > 1998 "
  },
  {
    "NatSQL": "select web_client_accelerator.id , web_client_accelerator.name from web_client_accelerator  where  count ( accelerator_compatible_browser.* )  >= 2  group by web_client_accelerator.id "
  },
  {
    "NatSQL": "select browser.id , browser.name from browser  group by browser.id  order by count ( accelerator_compatible_browser.* )  desc limit 1"
  },
  {
    "NatSQL": "select accelerator_compatible_browser.compatible_since_year from accelerator_compatible_browser  where  web_client_accelerator.name = \"CACHEbox\"  and  browser.name = \"IE浏览器\" "
  },
  {
    "NatSQL": "select count (  distinct web_client_accelerator.Client )  from web_client_accelerator "
  },
  {
    "NatSQL": "select count ( web_client_accelerator.* )  from web_client_accelerator  where  @.@ not in accelerator_compatible_browser.* "
  },
  {
    "NatSQL": "select  distinct web_client_accelerator.name from web_client_accelerator  where  browser.market_share > 15 "
  },
  {
    "NatSQL": "select browser.name from web_client_accelerator  where  web_client_accelerator.name = \"CACHEbox\"  and  web_client_accelerator.name = \"Fasterfox\" "
  },
  {
    "NatSQL": "select web_client_accelerator.name , web_client_accelerator.Operating_system from web_client_accelerator  where  except_  @.@ is accelerator_compatible_browser.*  and  browser.name = \"Opera\" "
  },
  {
    "NatSQL": "select web_client_accelerator.name from web_client_accelerator  where  web_client_accelerator.name like \"Opera\" "
  },
  {
    "NatSQL": "select web_client_accelerator.Operating_system , count ( web_client_accelerator.* )  from web_client_accelerator  group by web_client_accelerator.Operating_system "
  },
  {
    "NatSQL": "select browser.name , web_client_accelerator.name from accelerator_compatible_browser  order by accelerator_compatible_browser.compatible_since_year desc"
  },
  {
    "NatSQL": "select count ( wrestler.* )  from wrestler "
  },
  {
    "NatSQL": "select count ( wrestler.* )  from wrestler "
  },
  {
    "NatSQL": "select wrestler.Name from wrestler  order by wrestler.Days_held desc"
  },
  {
    "NatSQL": "select wrestler.Name from wrestler  order by wrestler.Days_held desc"
  },
  {
    "NatSQL": "select wrestler.Name from wrestler  order by wrestler.Days_held asc limit 1"
  },
  {
    "NatSQL": "select wrestler.Name from wrestler  order by wrestler.Days_held asc limit 1"
  },
  {
    "NatSQL": "select  distinct wrestler.Reign from wrestler  where  wrestler.Location != \"广州，中国\" "
  },
  {
    "NatSQL": "select  distinct wrestler.Reign from wrestler  where  wrestler.Location != \"广州，中国\" "
  },
  {
    "NatSQL": "select wrestler.Name , wrestler.Location from wrestler "
  },
  {
    "NatSQL": "select wrestler.Name , wrestler.Location from wrestler "
  },
  {
    "NatSQL": "select elimination.Elimination_Move from elimination  where  elimination.Team = \"奥神队\" "
  },
  {
    "NatSQL": "select elimination.Elimination_Move from elimination  where  elimination.Team = \"奥神队\" "
  },
  {
    "NatSQL": "select wrestler.Name , elimination.Elimination_Move from elimination "
  },
  {
    "NatSQL": "select wrestler.Name , elimination.Elimination_Move from elimination "
  },
  {
    "NatSQL": "select wrestler.Name , elimination.Team from elimination  order by wrestler.Days_held desc"
  },
  {
    "NatSQL": "select wrestler.Name , elimination.Team from elimination  order by wrestler.Days_held desc"
  },
  {
    "NatSQL": "select elimination.Time from elimination  order by wrestler.Days_held desc limit 1"
  },
  {
    "NatSQL": "select elimination.Time from elimination  order by wrestler.Days_held desc limit 1"
  },
  {
    "NatSQL": "select elimination.Time from elimination  where  wrestler.Days_held > 50 "
  },
  {
    "NatSQL": "select elimination.Time from elimination  where  wrestler.Days_held > 50 "
  },
  {
    "NatSQL": "select elimination.Team , count ( elimination.* )  from elimination  group by elimination.Team "
  },
  {
    "NatSQL": "select elimination.Team , count ( elimination.* )  from elimination  group by elimination.Team "
  },
  {
    "NatSQL": "select elimination.Team from elimination  where  count ( elimination.* )  > 3  group by elimination.Team "
  },
  {
    "NatSQL": "select elimination.Team from elimination  where  count ( elimination.* )  > 3  group by elimination.Team "
  },
  {
    "NatSQL": "select wrestler.Reign , wrestler.Days_held from wrestler "
  },
  {
    "NatSQL": "select wrestler.Reign , wrestler.Days_held from wrestler "
  },
  {
    "NatSQL": "select wrestler.Name from wrestler  where  wrestler.Days_held < 100 "
  },
  {
    "NatSQL": "select wrestler.Name from wrestler  where  wrestler.Days_held < 100 "
  },
  {
    "NatSQL": "select wrestler.Reign from wrestler  group by wrestler.Reign  order by count ( wrestler.* )  desc limit 1"
  },
  {
    "NatSQL": "select wrestler.Reign from wrestler  group by wrestler.Reign  order by count ( wrestler.* )  desc limit 1"
  },
  {
    "NatSQL": "select wrestler.Location from wrestler  where  count ( wrestler.* )  > 2  group by wrestler.Location "
  },
  {
    "NatSQL": "select wrestler.Location from wrestler  where  count ( wrestler.* )  > 2  group by wrestler.Location "
  },
  {
    "NatSQL": "select wrestler.Name from wrestler  where  @.@ not in elimination.* "
  },
  {
    "NatSQL": "select wrestler.Name from wrestler  where  @.@ not in elimination.* "
  },
  {
    "NatSQL": "select elimination.Team from elimination  where  elimination.Eliminated_By = \"大志\"  and  elimination.Eliminated_By = \"一龙\" "
  },
  {
    "NatSQL": "select elimination.Team from elimination  where  elimination.Eliminated_By = \"大志\"  and  elimination.Eliminated_By = \"一龙\" "
  },
  {
    "NatSQL": "select count (  distinct elimination.Team )  from elimination "
  },
  {
    "NatSQL": "select count (  distinct elimination.Team )  from elimination "
  },
  {
    "NatSQL": "select elimination.Time from elimination  where  elimination.Eliminated_By = \"市明\"  or  elimination.Eliminated_By = \"大志\" "
  },
  {
    "NatSQL": "select elimination.Time from elimination  where  elimination.Eliminated_By = \"市明\"  or  elimination.Eliminated_By = \"大志\" "
  },
  {
    "NatSQL": "select count ( school.* )  from school "
  },
  {
    "NatSQL": "select count ( school.* )  from school "
  },
  {
    "NatSQL": "select school.School_name from school  order by school.School_name asc"
  },
  {
    "NatSQL": "select school.School_name , school.Location , school.Mascot from school "
  },
  {
    "NatSQL": "select sum ( school.Enrollment )  , avg ( school.Enrollment )  from school "
  },
  {
    "NatSQL": "select school.Mascot from school  where  @.@ > avg ( school.Enrollment )  "
  },
  {
    "NatSQL": "select school.School_name from school  order by school.Enrollment asc limit 1"
  },
  {
    "NatSQL": "select avg ( school.Enrollment )  , max ( school.Enrollment )  , min ( school.Enrollment )  from school "
  },
  {
    "NatSQL": "select school.County , count ( school.* )  , sum ( school.Enrollment )  from school  group by school.County "
  },
  {
    "NatSQL": "select count (  distinct endowment.donator_name )  from endowment  where  school.School_name = \"理工大学\" "
  },
  {
    "NatSQL": "select endowment.donator_name , sum ( endowment.amount )  from endowment  group by endowment.donator_name  order by sum ( endowment.amount )  desc"
  },
  {
    "NatSQL": "select school.School_name from school  where  @.@ not in endowment.School_id "
  },
  {
    "NatSQL": "select school.School_name from endowment  where  sum ( endowment.amount )  <= 10  group by endowment.School_id "
  },
  {
    "NatSQL": "select endowment.donator_name from endowment  where  school.School_name = \"理工大学\"  and  school.School_name = \"财经大学\" "
  },
  {
    "NatSQL": "select endowment.donator_name from endowment  where  except_  @.@ is endowment.*  and  endowment.amount < 9 "
  },
  {
    "NatSQL": "select endowment.amount , endowment.donator_name from endowment  order by endowment.amount desc limit 1"
  },
  {
    "NatSQL": "select count ( budget.* )  from budget  where  budget.Budgeted > 3000  and  budget.Year <= 2001 "
  },
  {
    "NatSQL": "select count ( budget.* )  from budget  where  budget.Budgeted > 3000  and  budget.Year <= 2001 "
  },
  {
    "NatSQL": "select school.School_name , budget.Budgeted , budget.Invested from budget  where  budget.Year >= 2002 "
  },
  {
    "NatSQL": "select  distinct endowment.donator_name from endowment "
  },
  {
    "NatSQL": "select count ( budget.* )  from budget  where  budget.Budgeted < budget.Invested "
  },
  {
    "NatSQL": "select sum ( budget.Budgeted )  from budget  where  school.School_name = \"理工大学\" "
  },
  {
    "NatSQL": "select school.School_name from budget  where  sum ( budget.Budgeted )  > 100  or  sum ( endowment.amount )  > 10  group by school.School_name "
  },
  {
    "NatSQL": "select school.School_name from endowment  where  endowment.amount > 8.5  and  count ( endowment.* )  > 1  group by endowment.School_id "
  },
  {
    "NatSQL": "select count ( endowment.* )  from endowment  where  endowment.amount > 8.5  and  count ( endowment.* )  > 1 "
  },
  {
    "NatSQL": "select school.School_name , school.Mascot , school.IHSAA_Football_Class from school  where  budget.Budgeted > 6000  or  budget.Year < 2003  order by budget.total_budget_percent_invested , budget.total_budget_percent_budgeted asc"
  },
  {
    "NatSQL": "select count ( building.* )  from building "
  },
  {
    "NatSQL": "select building.Name , building.Street_address , building.Floors from building  order by building.Floors asc"
  },
  {
    "NatSQL": "select building.Name from building  order by building.Height_feet desc limit 1"
  },
  {
    "NatSQL": "select avg ( building.Floors )  , max ( building.Floors )  , min ( building.Floors )  from building "
  },
  {
    "NatSQL": "select count ( building.* )  from building  where  @.@ > avg ( building.Height_feet )   or  @.@ > avg ( building.Floors )  "
  },
  {
    "NatSQL": "select building.Name from building  where  building.Height_feet >= 200  and  building.Floors >= 20 "
  },
  {
    "NatSQL": "select institution.Institution , institution.Location from institution  where  institution.Founded > 1990  and  institution.Type = \"私立\" "
  },
  {
    "NatSQL": "select institution.Type , count ( institution.* )  , sum ( institution.Enrollment )  from institution  group by institution.Type "
  },
  {
    "NatSQL": "select institution.Type from institution  group by institution.Type  order by count ( institution.* )  desc limit 1"
  },
  {
    "NatSQL": "select institution.Type from institution  where  institution.Founded > 1990  and  institution.Enrollment >= 1000 "
  },
  {
    "NatSQL": "select building.Name from building  where  @.@ not in institution.* "
  },
  {
    "NatSQL": "select building.Name from building  where  except_  @.@ is institution.*  and  institution.Founded = 2003 "
  },
  {
    "NatSQL": "select building.Name , count ( institution.* )  from building  group by building.building_id "
  },
  {
    "NatSQL": "select building.Name , building.Height_feet from building  where  institution.Founded > 1880  and  count ( building.* )  >= 2  group by building.building_id "
  },
  {
    "NatSQL": "select  distinct institution.Type from institution "
  },
  {
    "NatSQL": "select institution.Institution , count ( protein.* )  from institution  group by institution.Institution_id "
  },
  {
    "NatSQL": "select count ( protein.* )  from institution  where  institution.Founded > 1880  or  institution.Type = \"私立\" "
  },
  {
    "NatSQL": "select protein.protein_name , institution.Institution from institution "
  },
  {
    "NatSQL": "select count ( protein.* )  from institution  where  building.Floors >= 20 "
  },
  {
    "NatSQL": "select count ( institution.* )  from institution  where  @.@ not in protein.* "
  },
  {
    "NatSQL": "select cinema.Location from cinema  where  except_  @.@ is cinema.*  and  cinema.Capacity > 800 "
  },
  {
    "NatSQL": "select cinema.Location from cinema  where  cinema.Openning_year = 2010  and  cinema.Openning_year = 2011 "
  },
  {
    "NatSQL": "select count ( cinema.* )  from cinema "
  },
  {
    "NatSQL": "select count ( cinema.* )  from cinema "
  },
  {
    "NatSQL": "select cinema.Name , cinema.Openning_year , cinema.Capacity from cinema "
  },
  {
    "NatSQL": "select cinema.Name , cinema.Location from cinema  where  @.@ > avg ( cinema.Capacity )  "
  },
  {
    "NatSQL": "select  distinct cinema.Location from cinema "
  },
  {
    "NatSQL": "select  distinct cinema.Location from cinema "
  },
  {
    "NatSQL": "select cinema.Name , cinema.Openning_year from cinema  order by cinema.Openning_year desc"
  },
  {
    "NatSQL": "select cinema.Name , cinema.Location from cinema  order by cinema.Capacity desc limit 1"
  },
  {
    "NatSQL": "select avg ( cinema.Capacity )  , min ( cinema.Capacity )  , max ( cinema.Capacity )  from cinema  where  cinema.Openning_year >= 2011 "
  },
  {
    "NatSQL": "select cinema.Location , count ( cinema.* )  from cinema  group by cinema.Location "
  },
  {
    "NatSQL": "select cinema.Location from cinema  where  cinema.Openning_year >= 2010  group by cinema.Location  order by count ( cinema.* )  desc limit 1"
  },
  {
    "NatSQL": "select cinema.Location from cinema  where  cinema.Capacity > 300  and  count ( cinema.* )  >= 2  group by cinema.Location "
  },
  {
    "NatSQL": "select cinema.Location from cinema  where  cinema.Capacity > 300  and  count ( cinema.* )  >= 2  group by cinema.Location "
  },
  {
    "NatSQL": "select film.Title , film.Directed_by from film "
  },
  {
    "NatSQL": "select film.Title , film.Directed_by from film "
  },
  {
    "NatSQL": "select  distinct film.Directed_by from film "
  },
  {
    "NatSQL": "select  distinct film.Directed_by from film "
  },
  {
    "NatSQL": "select film.Directed_by , count ( film.* )  from film  group by film.Directed_by "
  },
  {
    "NatSQL": "select cinema.Name , sum ( schedule.Show_times_per_day )  from schedule  group by schedule.Cinema_ID "
  },
  {
    "NatSQL": "select film.Title , max ( schedule.Price )  from schedule  group by schedule.Film_ID "
  },
  {
    "NatSQL": "select film.Title , max ( schedule.Price )  from schedule  group by schedule.Film_ID "
  },
  {
    "NatSQL": "select cinema.Name , film.Title , schedule.Date , schedule.Price from schedule "
  },
  {
    "NatSQL": "select film.Title , film.Directed_by from film  where  @.@ not in schedule.* "
  },
  {
    "NatSQL": "select film.Directed_by from schedule  group by film.Directed_by  order by sum ( schedule.Show_times_per_day )  desc limit 1"
  },
  {
    "NatSQL": "select cinema.Location from cinema  where  cinema.Capacity > 300  and  count ( cinema.* )  > 1  group by cinema.Location "
  },
  {
    "NatSQL": "select cinema.Location from cinema  where  cinema.Capacity > 300  and  count ( cinema.* )  > 1  group by cinema.Location "
  },
  {
    "NatSQL": "select count ( film.* )  from film  where  film.Title like \"故事\" "
  },
  {
    "NatSQL": "select count ( film.* )  from film  where  film.Title like \"故事\" "
  },
  {
    "NatSQL": "select customers.good_or_bad_customer from customers  where  discount_coupons.coupon_amount = 500 "
  },
  {
    "NatSQL": "select customers.customer_id , customers.first_name , count ( bookings.* )  from customers  group by customers.customer_id "
  },
  {
    "NatSQL": "select payments.customer_id , sum ( payments.amount_paid )  from payments  group by payments.customer_id  order by sum ( payments.amount_paid )  desc limit 1"
  },
  {
    "NatSQL": "select bookings.booking_id , bookings.amount_of_refund from bookings  group by bookings.booking_id  order by count ( payments.* )  desc limit 1"
  },
  {
    "NatSQL": "select products_booked.product_id from products_booked  where  count ( products_booked.* )  = 3  group by products_booked.product_id "
  },
  {
    "NatSQL": "select products_for_hire.product_description from products_booked  where  products_booked.booked_amount = 102.76 "
  },
  {
    "NatSQL": "select bookings.booking_start_date , bookings.booking_end_date from products_for_hire  where  products_for_hire.product_name = \"书集\" "
  },
  {
    "NatSQL": "select products_for_hire.product_name from view_product_availability  where  view_product_availability.available_yn = 1 "
  },
  {
    "NatSQL": "select count (  distinct products_for_hire.product_type_code )  from products_for_hire "
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name , customers.gender_mf from customers  where  customers.good_or_bad_customer = \"良好\"  order by customers.last_name asc"
  },
  {
    "NatSQL": "select avg ( payments.amount_due )  from payments "
  },
  {
    "NatSQL": "select max ( products_booked.booked_count )  , min ( products_booked.booked_count )  , avg ( products_booked.booked_count )  from products_booked "
  },
  {
    "NatSQL": "select  distinct payments.payment_type_code from payments "
  },
  {
    "NatSQL": "select products_for_hire.daily_hire_cost from products_for_hire  where  products_for_hire.product_name like \"书\" "
  },
  {
    "NatSQL": "select count ( products_for_hire.* )  from products_for_hire  where  @.@ not in products_booked.*  and  products_booked.booked_amount > 200 "
  },
  {
    "NatSQL": "select discount_coupons.coupon_amount from discount_coupons  where  customers.good_or_bad_customer = \"良好\"  and  customers.good_or_bad_customer = \"差\" "
  },
  {
    "NatSQL": "select payments.payment_date from payments  where  payments.amount_paid > 300  or  payments.payment_type_code = \"现金\" "
  },
  {
    "NatSQL": "select products_for_hire.product_name , products_for_hire.product_description from products_for_hire  where  products_for_hire.product_type_code = \"餐具\"  and  products_for_hire.daily_hire_cost < 20 "
  },
  {
    "NatSQL": "select count ( phone.* )  from phone "
  },
  {
    "NatSQL": "select phone.Name from phone  order by phone.Price asc"
  },
  {
    "NatSQL": "select phone.Memory_in_G , phone.Carrier from phone "
  },
  {
    "NatSQL": "select  distinct phone.Carrier from phone  where  phone.Memory_in_G > 32 "
  },
  {
    "NatSQL": "select phone.Name from phone  where  phone.Carrier = \"中国联通\"  or  phone.Carrier = \"中国移动\" "
  },
  {
    "NatSQL": "select phone.Carrier from phone  order by phone.Price desc limit 1"
  },
  {
    "NatSQL": "select phone.Carrier , count ( phone.* )  from phone  group by phone.Carrier "
  },
  {
    "NatSQL": "select phone.Carrier from phone  group by phone.Carrier  order by count ( phone.* )  desc limit 1"
  },
  {
    "NatSQL": "select phone.Carrier from phone  where  phone.Memory_in_G < 32  and  phone.Memory_in_G > 64 "
  },
  {
    "NatSQL": "select phone.Name , market.District from phone_market "
  },
  {
    "NatSQL": "select phone.Name , market.District from phone_market  order by market.Ranking asc"
  },
  {
    "NatSQL": "select phone.Name from phone_market  where  market.Num_of_shops > 50 "
  },
  {
    "NatSQL": "select phone.Name , sum ( phone_market.Num_of_stock )  from phone_market  group by phone.Name "
  },
  {
    "NatSQL": "select phone.Name from phone_market  where  sum ( phone_market.Num_of_stock )  >= 2000  group by phone.Name  order by sum ( phone_market.Num_of_stock )  desc"
  },
  {
    "NatSQL": "select phone.Name from phone  where  @.@ not in phone_market.* "
  },
  {
    "NatSQL": "select count ( company.* )  from company "
  },
  {
    "NatSQL": "select count ( company.* )  from company "
  },
  {
    "NatSQL": "select company.Company , company.Rank from company  order by company.Sales_billion desc"
  },
  {
    "NatSQL": "select company.Company , company.Rank from company  order by company.Sales_billion desc"
  },
  {
    "NatSQL": "select company.Company , company.Main_Industry from company  where  company.Headquarters != \"美国\" "
  },
  {
    "NatSQL": "select company.Company , company.Main_Industry from company  where  company.Headquarters != \"美国\" "
  },
  {
    "NatSQL": "select company.Company , company.Headquarters from company  order by company.Market_Value desc"
  },
  {
    "NatSQL": "select company.Company , company.Headquarters from company  order by company.Market_Value desc"
  },
  {
    "NatSQL": "select min ( company.Market_Value )  , max ( company.Market_Value )  , avg ( company.Market_Value )  from company "
  },
  {
    "NatSQL": "select min ( company.Market_Value )  , max ( company.Market_Value )  , avg ( company.Market_Value )  from company "
  },
  {
    "NatSQL": "select  distinct company.Main_Industry from company "
  },
  {
    "NatSQL": "select  distinct company.Main_Industry from company "
  },
  {
    "NatSQL": "select company.Headquarters , count ( company.* )  from company  group by company.Headquarters "
  },
  {
    "NatSQL": "select company.Headquarters , count ( company.* )  from company  group by company.Headquarters "
  },
  {
    "NatSQL": "select company.Main_Industry , sum ( company.Market_Value )  from company  group by company.Main_Industry "
  },
  {
    "NatSQL": "select company.Main_Industry , sum ( company.Market_Value )  from company  group by company.Main_Industry "
  },
  {
    "NatSQL": "select company.Main_Industry , count ( company.* )  from company  group by company.Main_Industry  order by sum ( company.Market_Value )  desc limit 1"
  },
  {
    "NatSQL": "select company.Main_Industry , count ( company.* )  from company  group by company.Main_Industry  order by sum ( company.Market_Value )  desc limit 1"
  },
  {
    "NatSQL": "select company.Headquarters from company  where  company.Main_Industry = \"银行业\"  and  count ( company.* )  >= 2  group by company.Headquarters "
  },
  {
    "NatSQL": "select company.Headquarters from company  where  company.Main_Industry = \"银行业\"  and  count ( company.* )  >= 2  group by company.Headquarters "
  },
  {
    "NatSQL": "select gas_station.Station_ID , gas_station.Location , gas_station.Manager_Name from gas_station  order by gas_station.Open_Year asc"
  },
  {
    "NatSQL": "select gas_station.Station_ID , gas_station.Location , gas_station.Manager_Name from gas_station  order by gas_station.Open_Year asc"
  },
  {
    "NatSQL": "select count ( gas_station.* )  from gas_station  where  gas_station.Open_Year between 2000 and 2005 "
  },
  {
    "NatSQL": "select count ( gas_station.* )  from gas_station  where  gas_station.Open_Year between 2000 and 2005 "
  },
  {
    "NatSQL": "select gas_station.Location , count ( gas_station.* )  from gas_station  group by gas_station.Location  order by count ( gas_station.* )  asc"
  },
  {
    "NatSQL": "select gas_station.Location , count ( gas_station.* )  from gas_station  group by gas_station.Location  order by count ( gas_station.* )  asc"
  },
  {
    "NatSQL": "select company.Headquarters from company  where  company.Main_Industry = \"银行业\"  and  company.Main_Industry = \"天然气\" "
  },
  {
    "NatSQL": "select company.Headquarters from company  where  company.Main_Industry = \"银行业\"  and  company.Main_Industry = \"天然气\" "
  },
  {
    "NatSQL": "select company.Headquarters from company  where  except_  @.@ is company.*  and  company.Main_Industry = \"银行业\" "
  },
  {
    "NatSQL": "select company.Headquarters from company  where  except_  @.@ is company.*  and  company.Main_Industry = \"银行业\" "
  },
  {
    "NatSQL": "select company.Company , count ( station_company.* )  from station_company  group by station_company.Company_ID "
  },
  {
    "NatSQL": "select company.Company , count ( station_company.* )  from station_company  group by station_company.Company_ID "
  },
  {
    "NatSQL": "select company.Company , company.Main_Industry from company  where  @.@ not in station_company.* "
  },
  {
    "NatSQL": "select company.Company , company.Main_Industry from company  where  @.@ not in station_company.* "
  },
  {
    "NatSQL": "select gas_station.Manager_Name from station_company  where  company.Company = \"石化\" "
  },
  {
    "NatSQL": "select gas_station.Manager_Name from station_company  where  company.Company = \"石化\" "
  },
  {
    "NatSQL": "select gas_station.Location from station_company  where  company.Market_Value > 100 "
  },
  {
    "NatSQL": "select gas_station.Location from station_company  where  company.Market_Value > 100 "
  },
  {
    "NatSQL": "select gas_station.Manager_Name from gas_station  where  gas_station.Open_Year > 2000  group by gas_station.Manager_Name  order by count ( gas_station.* )  desc limit 1"
  },
  {
    "NatSQL": "select gas_station.Manager_Name from gas_station  where  gas_station.Open_Year > 2000  group by gas_station.Manager_Name  order by count ( gas_station.* )  desc limit 1"
  },
  {
    "NatSQL": "select gas_station.Location from gas_station  order by gas_station.Open_Year asc"
  },
  {
    "NatSQL": "select gas_station.Location from gas_station  order by gas_station.Open_Year asc"
  },
  {
    "NatSQL": "select company.Rank , company.Company , company.Market_Value from company  where  company.Main_Industry = \"银行业\"  order by company.Sales_billion , company.Profits_billion asc"
  },
  {
    "NatSQL": "select company.Rank , company.Company , company.Market_Value from company  where  company.Main_Industry = \"银行业\"  order by company.Sales_billion , company.Profits_billion asc"
  },
  {
    "NatSQL": "select gas_station.Location , gas_station.Representative_Name from station_company  order by company.Assets_billion desc limit 3"
  },
  {
    "NatSQL": "select gas_station.Location , gas_station.Representative_Name from station_company  order by company.Assets_billion desc limit 3"
  },
  {
    "NatSQL": "select count ( region.* )  from region "
  },
  {
    "NatSQL": "select count ( region.* )  from region "
  },
  {
    "NatSQL": "select  distinct region.Region_name from region  order by region.Label asc"
  },
  {
    "NatSQL": "select  distinct region.Region_name from region  order by region.Label asc"
  },
  {
    "NatSQL": "select count (  distinct party.Party_name )  from party "
  },
  {
    "NatSQL": "select count (  distinct party.Party_name )  from party "
  },
  {
    "NatSQL": "select party.Minister , party.Took_office , party.Left_office from party  order by party.Left_office asc"
  },
  {
    "NatSQL": "select party.Minister , party.Took_office , party.Left_office from party  order by party.Left_office asc"
  },
  {
    "NatSQL": "select party.Minister from party  where  party.Took_office > 1961  or  party.Took_office < 1959 "
  },
  {
    "NatSQL": "select party.Minister from party  where  party.Took_office > 1961  or  party.Took_office < 1959 "
  },
  {
    "NatSQL": "select party.Minister from party  where  party.Party_name != \"进步党\" "
  },
  {
    "NatSQL": "select party.Minister from party  where  party.Party_name != \"进步党\" "
  },
  {
    "NatSQL": "select party.Minister , party.Party_name from party  order by party.Took_office desc"
  },
  {
    "NatSQL": "select party.Minister , party.Party_name from party  order by party.Took_office desc"
  },
  {
    "NatSQL": "select party.Minister from party  order by party.Left_office desc limit 1"
  },
  {
    "NatSQL": "select party.Minister from party  order by party.Left_office desc limit 1"
  },
  {
    "NatSQL": "select member.Member_Name , party.Party_name from member "
  },
  {
    "NatSQL": "select member.Member_Name , party.Party_name from member "
  },
  {
    "NatSQL": "select party.Party_name , count ( member.* )  from member  group by member.Party_ID "
  },
  {
    "NatSQL": "select party.Party_name , count ( member.* )  from member  group by member.Party_ID "
  },
  {
    "NatSQL": "select party.Party_name from member  group by member.Party_ID  order by count ( member.* )  desc limit 1"
  },
  {
    "NatSQL": "select party.Party_name from member  group by member.Party_ID  order by count ( member.* )  desc limit 1"
  },
  {
    "NatSQL": "select party.Party_name , region.Region_name from party "
  },
  {
    "NatSQL": "select party.Party_name , region.Region_name from party "
  },
  {
    "NatSQL": "select party.Party_name from party  where  @.@ not in member.* "
  },
  {
    "NatSQL": "select party.Party_name from party  where  @.@ not in member.* "
  },
  {
    "NatSQL": "select member.Member_Name from member  where  member.Party_ID = 3  and  member.Party_ID = 1 "
  },
  {
    "NatSQL": "select member.Member_Name from member  where  member.Party_ID = 3  and  member.Party_ID = 1 "
  },
  {
    "NatSQL": "select member.Member_Name from member  where  party.Party_name != \"进步党\" "
  },
  {
    "NatSQL": "select member.Member_Name from member  where  party.Party_name != \"进步党\" "
  },
  {
    "NatSQL": "select count ( party_events.* )  from party_events "
  },
  {
    "NatSQL": "select count ( party_events.* )  from party_events "
  },
  {
    "NatSQL": "select party.Party_name , count ( party_events.* )  from party_events  group by party_events.Party_ID "
  },
  {
    "NatSQL": "select party.Party_name , count ( party_events.* )  from party_events  group by party_events.Party_ID "
  },
  {
    "NatSQL": "select member.Member_Name from member  where  except_  @.@ is party_events.* "
  },
  {
    "NatSQL": "select member.Member_Name from member  where  except_  @.@ is party_events.* "
  },
  {
    "NatSQL": "select party.Party_name from party_events  where  count ( party_events.* )  >= 2  group by party_events.Party_ID "
  },
  {
    "NatSQL": "select party.Party_name from party_events  where  count ( party_events.* )  >= 2  group by party_events.Party_ID "
  },
  {
    "NatSQL": "select member.Member_Name from member  group by party_events.Member_in_charge_ID  order by count ( party_events.* )  desc limit 1"
  },
  {
    "NatSQL": "select member.Member_Name from member  group by party_events.Member_in_charge_ID  order by count ( party_events.* )  desc limit 1"
  },
  {
    "NatSQL": "select party_events.Event_Name from party_events  where  count ( party_events.* )  > 2  group by party_events.Event_Name "
  },
  {
    "NatSQL": "select party_events.Event_Name from party_events  where  count ( party_events.* )  > 2  group by party_events.Event_Name "
  },
  {
    "NatSQL": "select count ( region.* )  from region  where  region.Region_name = \"英国\"  and  party_events.Event_Name = \"年会\" "
  },
  {
    "NatSQL": "select count ( region.* )  from region  where  region.Region_name = \"英国\"  and  party_events.Event_Name = \"年会\" "
  },
  {
    "NatSQL": "select count ( pilot.* )  from pilot "
  },
  {
    "NatSQL": "select pilot.Pilot_name from pilot  order by pilot.Rank asc"
  },
  {
    "NatSQL": "select pilot.Position , pilot.Team from pilot "
  },
  {
    "NatSQL": "select  distinct pilot.Position from pilot  where  pilot.Age > 30 "
  },
  {
    "NatSQL": "select pilot.Pilot_name from pilot  where  pilot.Team = \"小强\"  or  pilot.Team = \"小利\" "
  },
  {
    "NatSQL": "select pilot.Join_Year from pilot  order by pilot.Rank asc limit 1"
  },
  {
    "NatSQL": "select pilot.Nationality , count ( pilot.* )  from pilot  group by pilot.Nationality "
  },
  {
    "NatSQL": "select pilot.Nationality from pilot  group by pilot.Nationality  order by count ( pilot.* )  desc limit 1"
  },
  {
    "NatSQL": "select pilot.Position from pilot  where  pilot.Join_Year < 2000  and  pilot.Join_Year > 2005 "
  },
  {
    "NatSQL": "select pilot.Pilot_name , aircraft.Model from pilot_record "
  },
  {
    "NatSQL": "select pilot.Pilot_name , aircraft.Fleet_Series from pilot_record  order by pilot.Rank asc"
  },
  {
    "NatSQL": "select aircraft.Fleet_Series from pilot_record  where  pilot.Age < 34 "
  },
  {
    "NatSQL": "select pilot.Pilot_name , count ( pilot_record.* )  from pilot_record  group by pilot.Pilot_name "
  },
  {
    "NatSQL": "select pilot.Pilot_name , count ( pilot_record.* )  from pilot_record  where  count ( pilot_record.* )  > 1  group by pilot.Pilot_name "
  },
  {
    "NatSQL": "select pilot.Pilot_name from pilot  where  @.@ not in pilot_record.* "
  },
  {
    "NatSQL": "select ref_document_status.document_status_code from ref_document_status "
  },
  {
    "NatSQL": "select ref_document_status.document_status_description from ref_document_status  where  ref_document_status.document_status_code = \"工作\" "
  },
  {
    "NatSQL": "select ref_document_types.document_type_code from ref_document_types "
  },
  {
    "NatSQL": "select ref_document_types.document_type_description from ref_document_types  where  ref_document_types.document_type_code = \"论文\" "
  },
  {
    "NatSQL": "select ref_shipping_agents.shipping_agent_name from ref_shipping_agents "
  },
  {
    "NatSQL": "select ref_shipping_agents.shipping_agent_code from ref_shipping_agents  where  ref_shipping_agents.shipping_agent_name = \"中国邮政\" "
  },
  {
    "NatSQL": "select roles.role_code from roles "
  },
  {
    "NatSQL": "select roles.role_description from roles  where  roles.role_code = \"ED\" "
  },
  {
    "NatSQL": "select count ( employees.* )  from employees "
  },
  {
    "NatSQL": "select roles.role_description from roles  where  employees.employee_name = \"可可\" "
  },
  {
    "NatSQL": "select documents.document_id , documents.receipt_date from documents "
  },
  {
    "NatSQL": "select roles.role_description , employees.role_code , count ( roles.* )  from roles  group by employees.role_code "
  },
  {
    "NatSQL": "select roles.role_description , count (  distinct employees.employee_id )  from roles  where  count (  distinct employees.employee_id )  > 1  group by employees.role_code "
  },
  {
    "NatSQL": "select ref_document_status.document_status_description from ref_document_status  where  documents.document_id = 1 "
  },
  {
    "NatSQL": "select count ( documents.* )  from documents  where  documents.document_status_code = \"完结\" "
  },
  {
    "NatSQL": "select documents.document_type_code from documents  where  documents.document_id = 2 "
  },
  {
    "NatSQL": "select documents.document_id from documents  where  documents.document_status_code = \"完结\"  and  documents.document_type_code = \"论文\" "
  },
  {
    "NatSQL": "select ref_shipping_agents.shipping_agent_name from ref_shipping_agents  where  documents.document_id = 2 "
  },
  {
    "NatSQL": "select count ( documents.* )  from documents  where  ref_shipping_agents.shipping_agent_name = \"中国邮政\" "
  },
  {
    "NatSQL": "select ref_shipping_agents.shipping_agent_name , count (  distinct documents.document_id )  from ref_shipping_agents  group by ref_shipping_agents.shipping_agent_code  order by count (  distinct documents.document_id )  desc limit 1"
  },
  {
    "NatSQL": "select documents.receipt_date from documents  where  documents.document_id = 3 "
  },
  {
    "NatSQL": "select addresses.address_details from addresses  where  documents_mailed.document_id = 4 "
  },
  {
    "NatSQL": "select documents_mailed.mailing_date from documents_mailed  where  documents_mailed.document_id = 7 "
  },
  {
    "NatSQL": "select documents.document_id from documents  where  documents.document_status_code = \"完结\"  and  documents.document_type_code = \"论文\"  and  ref_shipping_agents.shipping_agent_name != \"中国邮政\" "
  },
  {
    "NatSQL": "select documents.document_id from documents  where  documents.document_status_code = \"完结\"  and  documents.document_type_code = \"论文\"  and  ref_shipping_agents.shipping_agent_name = \"中国邮政\" "
  },
  {
    "NatSQL": "select document_drafts.draft_details from document_drafts  where  document_drafts.document_id = 7 "
  },
  {
    "NatSQL": "select count ( draft_copies.* )  from draft_copies  where  draft_copies.document_id = 2 "
  },
  {
    "NatSQL": "select draft_copies.document_id , count (  distinct draft_copies.copy_number )  from draft_copies  group by draft_copies.document_id  order by count (  distinct draft_copies.copy_number )  desc limit 1"
  },
  {
    "NatSQL": "select draft_copies.document_id , count ( draft_copies.* )  from draft_copies  where  count ( draft_copies.* )  > 1  group by draft_copies.document_id "
  },
  {
    "NatSQL": "select employees.employee_name from employees  where  circulation_history.document_id = 1 "
  },
  {
    "NatSQL": "select employees.employee_name from employees  where  except_  @.@ is circulation_history.* "
  },
  {
    "NatSQL": "select employees.employee_name , count ( employees.* )  from employees  group by circulation_history.document_id , circulation_history.draft_number , circulation_history.copy_number  order by count ( circulation_history.* )  desc limit 1"
  },
  {
    "NatSQL": "select circulation_history.document_id , count (  distinct circulation_history.employee_id )  from circulation_history  group by circulation_history.document_id "
  },
  {
    "NatSQL": "select department.Dname from department  order by department.Mgr_start_date asc"
  },
  {
    "NatSQL": "select dependent.Dependent_name from dependent  where  dependent.Relationship = \"配偶\" "
  },
  {
    "NatSQL": "select count ( dependent.* )  from dependent  where  dependent.Sex = \"女\" "
  },
  {
    "NatSQL": "select department.Dname from department  where  dept_locations.Dlocation = \"武汉\" "
  },
  {
    "NatSQL": "select employee.Fname , employee.Lname from employee  where  employee.Salary > 30000 "
  },
  {
    "NatSQL": "select count ( employee.* )  , employee.Sex from employee  where  employee.Salary < 50000  group by employee.Sex "
  },
  {
    "NatSQL": "select employee.Fname , employee.Lname , employee.Address from employee  order by employee.Bdate asc"
  },
  {
    "NatSQL": "select events.Event_Details from events  where  services.Service_Type_Code = \"结婚\" "
  },
  {
    "NatSQL": "select events.Event_ID , events.Event_Details from events  where  count ( participants_in_events.* )  > 1  group by events.Event_ID "
  },
  {
    "NatSQL": "select participants.Participant_ID , participants.Participant_Type_Code , count ( participants_in_events.* )  from participants  group by participants.Participant_ID "
  },
  {
    "NatSQL": "select participants.Participant_ID , participants.Participant_Type_Code , participants.Participant_Details from participants "
  },
  {
    "NatSQL": "select count ( participants.* )  from participants  where  participants.Participant_Type_Code = \"组织者\" "
  },
  {
    "NatSQL": "select services.Service_Type_Code from services  order by services.Service_Type_Code asc"
  },
  {
    "NatSQL": "select events.Service_ID , events.Event_Details from events "
  },
  {
    "NatSQL": "select count ( participants_in_events.* )  from participants  where  participants.Participant_Details like \"博士\" "
  },
  {
    "NatSQL": "select participants.Participant_Type_Code from participants  group by participants.Participant_Type_Code  order by count ( participants.* )  desc limit 1"
  },
  {
    "NatSQL": "select services.Service_ID , services.Service_Type_Code from participants  group by events.Service_ID  order by count ( participants.* )  asc limit 1"
  },
  {
    "NatSQL": "select participants_in_events.Event_ID from participants_in_events  group by participants_in_events.Event_ID  order by count ( participants_in_events.* )  desc limit 1"
  },
  {
    "NatSQL": "select events.Event_ID from events  where  except_  @.@ is participants_in_events.*  and  participants.Participant_Details = \"李强\" "
  },
  {
    "NatSQL": "select services.Service_Type_Code from services  where  events.Event_Details = \"成功\"  and  events.Event_Details = \"失败\" "
  },
  {
    "NatSQL": "select count ( events.* )  from events  where  @.@ not in participants_in_events.* "
  },
  {
    "NatSQL": "select count (  distinct participants_in_events.Participant_ID )  from participants_in_events "
  },
  {
    "NatSQL": "select races.name from races  order by races.date desc limit 1"
  },
  {
    "NatSQL": "select races.name from races  order by races.date desc limit 1"
  },
  {
    "NatSQL": "select races.name , races.date from races  order by races.date desc limit 1"
  },
  {
    "NatSQL": "select races.name , races.date from races  order by races.date desc limit 1"
  },
  {
    "NatSQL": "select races.name from races  where  races.year = 2017 "
  },
  {
    "NatSQL": "select races.name from races  where  races.year = 2017 "
  },
  {
    "NatSQL": "select  distinct races.name from races  where  races.year between 2014 and 2017 "
  },
  {
    "NatSQL": "select  distinct races.name from races  where  races.year between 2014 and 2017 "
  },
  {
    "NatSQL": "select  distinct drivers.forename , drivers.surname from drivers  where  laptimes.milliseconds < 93000 "
  },
  {
    "NatSQL": "select  distinct drivers.forename , drivers.surname from drivers  where  laptimes.milliseconds < 93000 "
  },
  {
    "NatSQL": "select  distinct drivers.driverId , drivers.nationality from drivers  where  laptimes.milliseconds > 100000 "
  },
  {
    "NatSQL": "select  distinct drivers.driverId , drivers.nationality from drivers  where  laptimes.milliseconds > 100000 "
  },
  {
    "NatSQL": "select drivers.forename , drivers.surname from drivers  order by laptimes.milliseconds asc limit 1"
  },
  {
    "NatSQL": "select drivers.forename , drivers.surname from drivers  order by laptimes.milliseconds asc limit 1"
  },
  {
    "NatSQL": "select drivers.driverId , drivers.surname from drivers  order by laptimes.milliseconds desc limit 1"
  },
  {
    "NatSQL": "select drivers.driverId , drivers.surname from drivers  order by laptimes.milliseconds desc limit 1"
  },
  {
    "NatSQL": "select drivers.driverId , drivers.forename , drivers.surname from drivers  where  laptimes.position = \"1\"  and  count ( drivers.* )  >= 2  group by drivers.driverId "
  },
  {
    "NatSQL": "select drivers.driverId , drivers.forename , drivers.surname from drivers  where  laptimes.position = \"1\"  and  count ( drivers.* )  >= 2  group by drivers.driverId "
  },
  {
    "NatSQL": "select count ( results.* )  from results  where  races.name = \"澳大利亚大奖赛\"  and  races.year = 2009 "
  },
  {
    "NatSQL": "select count ( results.* )  from results  where  races.name = \"澳大利亚大奖赛\"  and  races.year = 2009 "
  },
  {
    "NatSQL": "select count (  distinct results.driverId )  from results  where  @.@ not in races.*  and  races.year = 2009 "
  },
  {
    "NatSQL": "select count (  distinct results.driverId )  from results  where  @.@ not in races.*  and  races.year != 2009 "
  },
  {
    "NatSQL": "select races.name , races.year from results  where  drivers.forename = \"姚\" "
  },
  {
    "NatSQL": "select races.name , races.year from results  where  drivers.forename = \"姚\" "
  },
  {
    "NatSQL": "select drivers.forename , drivers.surname from drivers  where  drivers.nationality = \"德国\" "
  },
  {
    "NatSQL": "select drivers.forename , drivers.surname from drivers  where  drivers.nationality = \"德国\" "
  },
  {
    "NatSQL": "select drivers.driverId , drivers.forename from races  where  races.name = \"澳大利亚大奖赛\"  and  races.name = \"中国大奖赛\" "
  },
  {
    "NatSQL": "select drivers.driverId , drivers.forename from races  where  races.name = \"澳大利亚大奖赛\"  and  races.name = \"中国大奖赛\" "
  },
  {
    "NatSQL": "select drivers.forename , drivers.surname from races  where  races.name = \"澳大利亚大奖赛\"  and  races.name != \"中国大奖赛\" "
  },
  {
    "NatSQL": "select drivers.forename , drivers.surname from races  where  races.name = \"澳大利亚大奖赛\"  and  races.name != \"中国大奖赛\" "
  },
  {
    "NatSQL": "select  distinct drivers.forename from drivers  where  driverstandings.position = 1  and  driverstandings.wins = 1 "
  },
  {
    "NatSQL": "select  distinct drivers.forename from drivers  where  driverstandings.position = 1  and  driverstandings.wins = 1 "
  },
  {
    "NatSQL": "select  distinct drivers.forename from drivers  where  driverstandings.position = 1  and  driverstandings.wins = 1  and  driverstandings.points > 20 "
  },
  {
    "NatSQL": "select  distinct drivers.forename from drivers  where  driverstandings.position = 1  and  driverstandings.wins = 1  and  driverstandings.points > 20 "
  },
  {
    "NatSQL": "select count ( constructors.* )  , constructors.nationality from constructors  group by constructors.nationality "
  },
  {
    "NatSQL": "select count ( constructors.* )  , constructors.nationality from constructors  group by constructors.nationality "
  },
  {
    "NatSQL": "select count ( constructorstandings.* )  , constructorstandings.constructorId from constructorstandings  group by constructorstandings.constructorId "
  },
  {
    "NatSQL": "select count ( constructorstandings.* )  , constructorstandings.constructorId from constructorstandings  group by constructorstandings.constructorId "
  },
  {
    "NatSQL": "select races.name from races  where  circuits.country = \"西班牙\"  and  races.year > 2017 "
  },
  {
    "NatSQL": "select races.name from races  where  circuits.country = \"西班牙\"  and  races.year > 2017 "
  },
  {
    "NatSQL": "select  distinct races.name from races  where  circuits.country = \"西班牙\"  and  races.year > 2000 "
  },
  {
    "NatSQL": "select  distinct races.name from races  where  circuits.country = \"西班牙\"  and  races.year > 2000 "
  },
  {
    "NatSQL": "select  distinct pitstops.driverId , pitstops.stop from pitstops  where  @.@ < max ( pitstops.duration )   and  pitstops.raceId = 841 "
  },
  {
    "NatSQL": "select  distinct pitstops.driverId , pitstops.stop from pitstops  where  @.@ < max ( pitstops.duration )   and  pitstops.raceId = 841 "
  },
  {
    "NatSQL": "select  distinct pitstops.driverId , pitstops.stop from pitstops  where  @.@ > min ( pitstops.duration )   and  pitstops.raceId = 841 "
  },
  {
    "NatSQL": "select  distinct pitstops.driverId , pitstops.stop from pitstops  where  @.@ > min ( pitstops.duration )   and  pitstops.raceId = 841 "
  },
  {
    "NatSQL": "select  distinct drivers.forename from drivers  order by drivers.forename asc"
  },
  {
    "NatSQL": "select  distinct drivers.forename from drivers  order by drivers.forename asc"
  },
  {
    "NatSQL": "select  distinct races.name from races  order by races.name desc"
  },
  {
    "NatSQL": "select  distinct races.name from races  order by races.name desc"
  },
  {
    "NatSQL": "select races.name from races  where  races.year between 2009 and 2011 "
  },
  {
    "NatSQL": "select races.name from races  where  races.year between 2009 and 2011 "
  },
  {
    "NatSQL": "select races.name from races  where  races.time > \"12:00:00\"  or  races.time < \"09:00:00\" "
  },
  {
    "NatSQL": "select races.name from races  where  races.time > \"12:00:00\"  or  races.time < \"09:00:00\" "
  },
  {
    "NatSQL": "select drivers.forename , drivers.surname , drivers.driverId from drivers  where  count ( pitstops.* )  > 8  or  count ( results.* )  > 5  group by drivers.driverId "
  },
  {
    "NatSQL": "select drivers.forename , drivers.surname , drivers.driverId from drivers  where  count ( pitstops.* )  > 8  or  count ( results.* )  > 5  group by drivers.driverId "
  },
  {
    "NatSQL": "select drivers.surname , drivers.driverId from drivers  where  count ( pitstops.* )  = 11  and  count ( results.* )  > 5  group by drivers.driverId "
  },
  {
    "NatSQL": "select drivers.surname , drivers.driverId from drivers  where  count ( pitstops.* )  = 11  and  count ( results.* )  > 5  group by drivers.driverId "
  },
  {
    "NatSQL": "select drivers.driverId , drivers.surname from drivers  where  races.year > 2010  group by drivers.driverId  order by count ( drivers.* )  desc limit 1"
  },
  {
    "NatSQL": "select drivers.driverId , drivers.surname from drivers  where  races.year > 2010  group by drivers.driverId  order by count ( drivers.* )  desc limit 1"
  },
  {
    "NatSQL": "select circuits.name from circuits  where  circuits.country = \"英国\"  or  circuits.country = \"马来西亚\" "
  },
  {
    "NatSQL": "select circuits.name from circuits  where  circuits.country = \"英国\"  or  circuits.country = \"马来西亚\" "
  },
  {
    "NatSQL": "select circuits.circuitId , circuits.location from circuits  where  circuits.country = \"法国\"  or  circuits.country = \"比利时\" "
  },
  {
    "NatSQL": "select circuits.circuitId , circuits.location from circuits  where  circuits.country = \"法国\"  or  circuits.country = \"比利时\" "
  },
  {
    "NatSQL": "select constructors.name from constructors  where  constructors.nationality = \"日本\"  and  constructorstandings.points > 5 "
  },
  {
    "NatSQL": "select constructors.name from constructors  where  constructors.nationality = \"日本\"  and  constructorstandings.points > 5 "
  },
  {
    "NatSQL": "select avg ( results.fastestLapSpeed )  from races  where  races.year = 2008  and  races.name = \"摩纳哥大奖赛\" "
  },
  {
    "NatSQL": "select avg ( results.fastestLapSpeed )  from races  where  races.year = 2008  and  races.name = \"摩纳哥大奖赛\" "
  },
  {
    "NatSQL": "select max ( results.fastestLapSpeed )  from races  where  races.year = 2008  and  races.name = \"摩纳哥大奖赛\" "
  },
  {
    "NatSQL": "select max ( results.fastestLapSpeed )  from races  where  races.year = 2008  and  races.name = \"摩纳哥大奖赛\" "
  },
  {
    "NatSQL": "select max ( results.fastestLapSpeed )  , races.name , races.year from races  where  races.year > 2014  group by races.name  order by races.year asc"
  },
  {
    "NatSQL": "select max ( results.fastestLapSpeed )  , races.name , races.year from races  where  races.year > 2014  group by races.name  order by races.year asc"
  },
  {
    "NatSQL": "select max ( results.fastestLapSpeed )  , races.name , races.year from races  where  races.year > 2014  group by races.name  order by races.year asc"
  },
  {
    "NatSQL": "select max ( results.fastestLapSpeed )  , races.name , races.year from races  where  races.year > 2014  group by races.name  order by races.year asc"
  },
  {
    "NatSQL": "select drivers.driverId , drivers.forename , count ( races.* )  from drivers  where  count ( races.* )  >= 2  group by drivers.driverId "
  },
  {
    "NatSQL": "select drivers.driverId , drivers.forename , count ( races.* )  from drivers  where  count ( races.* )  >= 2  group by drivers.driverId "
  },
  {
    "NatSQL": "select drivers.driverId , count ( races.* )  from drivers  where  count ( races.* )  <= 30  group by drivers.driverId "
  },
  {
    "NatSQL": "select drivers.driverId , count ( races.* )  from drivers  where  count ( races.* )  <= 30  group by drivers.driverId "
  },
  {
    "NatSQL": "select drivers.driverId , drivers.surname from drivers  group by drivers.driverId  order by count ( races.* )  desc limit 1"
  },
  {
    "NatSQL": "select drivers.driverId , drivers.surname from drivers  group by drivers.driverId  order by count ( races.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( technician.* )  from technician "
  },
  {
    "NatSQL": "select count ( technician.* )  from technician "
  },
  {
    "NatSQL": "select technician.Name from technician  order by technician.Age asc"
  },
  {
    "NatSQL": "select technician.Name from technician  order by technician.Age asc"
  },
  {
    "NatSQL": "select technician.Team , technician.Starting_Year from technician "
  },
  {
    "NatSQL": "select technician.Team , technician.Starting_Year from technician "
  },
  {
    "NatSQL": "select technician.Name from technician  where  technician.Team != \"上海上港\" "
  },
  {
    "NatSQL": "select technician.Name from technician  where  technician.Team != \"上海上港\" "
  },
  {
    "NatSQL": "select technician.Name from technician  where  technician.Age = 36  or  technician.Age = 37 "
  },
  {
    "NatSQL": "select technician.Name from technician  where  technician.Age = 36  or  technician.Age = 37 "
  },
  {
    "NatSQL": "select technician.Starting_Year from technician  order by technician.Age desc limit 1"
  },
  {
    "NatSQL": "select technician.Starting_Year from technician  order by technician.Age desc limit 1"
  },
  {
    "NatSQL": "select technician.Team , count ( technician.* )  from technician  group by technician.Team "
  },
  {
    "NatSQL": "select technician.Team , count ( technician.* )  from technician  group by technician.Team "
  },
  {
    "NatSQL": "select technician.Team from technician  group by technician.Team  order by count ( technician.* )  desc limit 1"
  },
  {
    "NatSQL": "select technician.Team from technician  group by technician.Team  order by count ( technician.* )  desc limit 1"
  },
  {
    "NatSQL": "select technician.Team from technician  where  count ( technician.* )  >= 2  group by technician.Team "
  },
  {
    "NatSQL": "select technician.Team from technician  where  count ( technician.* )  >= 2  group by technician.Team "
  },
  {
    "NatSQL": "select technician.Name , machine.Machine_series from repair_assignment "
  },
  {
    "NatSQL": "select technician.Name , machine.Machine_series from repair_assignment "
  },
  {
    "NatSQL": "select technician.Name from repair_assignment  order by machine.quality_rank asc"
  },
  {
    "NatSQL": "select technician.Name from repair_assignment  order by machine.quality_rank asc"
  },
  {
    "NatSQL": "select technician.Name from repair_assignment  where  machine.value_points > 70 "
  },
  {
    "NatSQL": "select technician.Name from repair_assignment  where  machine.value_points > 70 "
  },
  {
    "NatSQL": "select technician.Name , count ( repair_assignment.* )  from repair_assignment  group by technician.Name "
  },
  {
    "NatSQL": "select technician.Name , count ( repair_assignment.* )  from repair_assignment  group by technician.Name "
  },
  {
    "NatSQL": "select technician.Name from technician  where  @.@ not in repair_assignment.* "
  },
  {
    "NatSQL": "select technician.Name from technician  where  @.@ not in repair_assignment.* "
  },
  {
    "NatSQL": "select technician.Starting_Year from technician  where  technician.Team = \"山东鲁能\"  and  technician.Team = \"天津泰达\" "
  },
  {
    "NatSQL": "select technician.Starting_Year from technician  where  technician.Team = \"山东鲁能\"  and  technician.Team = \"天津泰达\" "
  },
  {
    "NatSQL": "select count ( entrepreneur.* )  from entrepreneur "
  },
  {
    "NatSQL": "select count ( entrepreneur.* )  from entrepreneur "
  },
  {
    "NatSQL": "select entrepreneur.Company from entrepreneur  order by entrepreneur.Money_Requested desc"
  },
  {
    "NatSQL": "select entrepreneur.Company from entrepreneur  order by entrepreneur.Money_Requested desc"
  },
  {
    "NatSQL": "select entrepreneur.Company , entrepreneur.Investor from entrepreneur "
  },
  {
    "NatSQL": "select entrepreneur.Company , entrepreneur.Investor from entrepreneur "
  },
  {
    "NatSQL": "select avg ( entrepreneur.Money_Requested )  from entrepreneur "
  },
  {
    "NatSQL": "select avg ( entrepreneur.Money_Requested )  from entrepreneur "
  },
  {
    "NatSQL": "select people.Name from people  order by people.Weight asc"
  },
  {
    "NatSQL": "select people.Name from people  order by people.Weight asc"
  },
  {
    "NatSQL": "select people.Name from entrepreneur  where  @.@ join entrepreneur.* "
  },
  {
    "NatSQL": "select people.Name from entrepreneur  where  @.@ join entrepreneur.* "
  },
  {
    "NatSQL": "select people.Name from entrepreneur  where  entrepreneur.Investor != \"马云\" "
  },
  {
    "NatSQL": "select people.Name from entrepreneur  where  entrepreneur.Investor != \"马云\" "
  },
  {
    "NatSQL": "select people.Weight from people  order by people.Height asc limit 1"
  },
  {
    "NatSQL": "select people.Weight from people  order by people.Height asc limit 1"
  },
  {
    "NatSQL": "select people.Name from entrepreneur  where  @.@ join entrepreneur.*  order by people.Weight desc limit 1"
  },
  {
    "NatSQL": "select people.Name from entrepreneur  where  @.@ join entrepreneur.*  order by people.Weight desc limit 1"
  },
  {
    "NatSQL": "select sum ( entrepreneur.Money_Requested )  from entrepreneur  where  people.Height > 1.85 "
  },
  {
    "NatSQL": "select sum ( entrepreneur.Money_Requested )  from entrepreneur  where  people.Height > 1.85 "
  },
  {
    "NatSQL": "select people.Date_of_Birth from entrepreneur  where  entrepreneur.Investor = \"马化腾\"  or  entrepreneur.Investor = \"李彦宏\" "
  },
  {
    "NatSQL": "select people.Date_of_Birth from entrepreneur  where  entrepreneur.Investor = \"马化腾\"  or  entrepreneur.Investor = \"李彦宏\" "
  },
  {
    "NatSQL": "select people.Weight from entrepreneur  order by entrepreneur.Money_Requested desc"
  },
  {
    "NatSQL": "select people.Weight from entrepreneur  order by entrepreneur.Money_Requested desc"
  },
  {
    "NatSQL": "select entrepreneur.Investor , count ( entrepreneur.* )  from entrepreneur  group by entrepreneur.Investor "
  },
  {
    "NatSQL": "select entrepreneur.Investor , count ( entrepreneur.* )  from entrepreneur  group by entrepreneur.Investor "
  },
  {
    "NatSQL": "select entrepreneur.Investor from entrepreneur  group by entrepreneur.Investor  order by count ( entrepreneur.* )  desc limit 1"
  },
  {
    "NatSQL": "select entrepreneur.Investor from entrepreneur  group by entrepreneur.Investor  order by count ( entrepreneur.* )  desc limit 1"
  },
  {
    "NatSQL": "select entrepreneur.Investor from entrepreneur  where  count ( entrepreneur.* )  >= 2  group by entrepreneur.Investor "
  },
  {
    "NatSQL": "select entrepreneur.Investor from entrepreneur  where  count ( entrepreneur.* )  >= 2  group by entrepreneur.Investor "
  },
  {
    "NatSQL": "select people.Name , entrepreneur.Company from entrepreneur  order by entrepreneur.Money_Requested asc"
  },
  {
    "NatSQL": "select people.Name , entrepreneur.Company from entrepreneur  order by entrepreneur.Money_Requested asc"
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ not in entrepreneur.* "
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ not in entrepreneur.* "
  },
  {
    "NatSQL": "select entrepreneur.Investor from entrepreneur  where  entrepreneur.Money_Requested > 140000  and  entrepreneur.Money_Requested < 120000 "
  },
  {
    "NatSQL": "select entrepreneur.Investor from entrepreneur  where  entrepreneur.Money_Requested > 140000  and  entrepreneur.Money_Requested < 120000 "
  },
  {
    "NatSQL": "select count (  distinct entrepreneur.Company )  from entrepreneur "
  },
  {
    "NatSQL": "select count (  distinct entrepreneur.Company )  from entrepreneur "
  },
  {
    "NatSQL": "select entrepreneur.Company from entrepreneur  order by people.Height desc limit 1"
  },
  {
    "NatSQL": "select entrepreneur.Company from entrepreneur  order by people.Height desc limit 1"
  },
  {
    "NatSQL": "select count ( perpetrator.* )  from perpetrator "
  },
  {
    "NatSQL": "select perpetrator.Date from perpetrator  order by perpetrator.Killed desc"
  },
  {
    "NatSQL": "select perpetrator.Injured from perpetrator  order by perpetrator.Injured asc"
  },
  {
    "NatSQL": "select avg ( perpetrator.Injured )  from perpetrator "
  },
  {
    "NatSQL": "select perpetrator.Location from perpetrator  order by perpetrator.Killed desc limit 1"
  },
  {
    "NatSQL": "select people.Name from people  order by people.Height asc"
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ join perpetrator.* "
  },
  {
    "NatSQL": "select people.Name from people  where  perpetrator.Country != \"中国\" "
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ join perpetrator.*  order by people.Weight desc limit 1"
  },
  {
    "NatSQL": "select sum ( perpetrator.Killed )  from people  where  people.Height > 1.84 "
  },
  {
    "NatSQL": "select people.Name from people  where  perpetrator.Country = \"中国\"  or  perpetrator.Country = \"日本\" "
  },
  {
    "NatSQL": "select people.Height from people  order by perpetrator.Injured desc"
  },
  {
    "NatSQL": "select perpetrator.Country , count ( perpetrator.* )  from perpetrator  group by perpetrator.Country "
  },
  {
    "NatSQL": "select perpetrator.Country , count ( perpetrator.* )  from perpetrator  group by perpetrator.Country  order by count ( perpetrator.* )  desc limit 1"
  },
  {
    "NatSQL": "select perpetrator.Country , count ( perpetrator.* )  from perpetrator  where  count ( perpetrator.* )  >= 2  group by perpetrator.Country "
  },
  {
    "NatSQL": "select people.Name from people  order by perpetrator.Year desc"
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ not in perpetrator.* "
  },
  {
    "NatSQL": "select perpetrator.Country from perpetrator  where  perpetrator.Injured > 50  and  perpetrator.Injured < 20 "
  },
  {
    "NatSQL": "select count (  distinct perpetrator.Location )  from perpetrator "
  },
  {
    "NatSQL": "select perpetrator.Date from people  order by people.Height desc limit 1"
  },
  {
    "NatSQL": "select max ( perpetrator.Year )  from perpetrator "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.County = \"上海\" "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.County = \"上海\" "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.Location = \"武汉\" "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.Location = \"武汉\" "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.Year = 1958 "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.Year = 1958 "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.Year < 1800 "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.Year < 1800 "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.Year >= 1935  and  campuses.Year <= 1939 "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.Year >= 1935  and  campuses.Year <= 1939 "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.Location = \"徐汇\"  and  campuses.County = \"上海\"  or  campuses.Location = \"厦门\"  and  campuses.County = \"厦门\" "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.Location = \"徐汇\"  and  campuses.County = \"上海\"  or  campuses.Location = \"厦门\"  and  campuses.County = \"厦门\" "
  },
  {
    "NatSQL": "select csu_fees.CampusFee from campuses  where  campuses.Campus = \"湖南大学\"  and  csu_fees.Year = 1996 "
  },
  {
    "NatSQL": "select csu_fees.CampusFee from campuses  where  campuses.Campus = \"湖南大学\"  and  csu_fees.Year = 1996 "
  },
  {
    "NatSQL": "select csu_fees.CampusFee from campuses  where  campuses.Campus = \"厦门大学\"  and  csu_fees.Year = 1996 "
  },
  {
    "NatSQL": "select csu_fees.CampusFee from campuses  where  campuses.Campus = \"厦门大学\"  and  csu_fees.Year = 1996 "
  },
  {
    "NatSQL": "select count ( csu_fees.* )  from csu_fees  where  @.@ > avg ( csu_fees.CampusFee )  "
  },
  {
    "NatSQL": "select count ( csu_fees.* )  from csu_fees  where  @.@ > avg ( csu_fees.CampusFee )  "
  },
  {
    "NatSQL": "select count ( csu_fees.* )  from csu_fees  where  @.@ > avg ( csu_fees.CampusFee )  "
  },
  {
    "NatSQL": "select count ( csu_fees.* )  from csu_fees  where  @.@ > avg ( csu_fees.CampusFee )  "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.County = \"上海\"  and  campuses.Year > 1950 "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.County = \"上海\"  and  campuses.Year > 1950 "
  },
  {
    "NatSQL": "select degrees.Year from degrees  group by degrees.Year  order by sum ( degrees.Degrees )  desc limit 1"
  },
  {
    "NatSQL": "select degrees.Year from degrees  group by degrees.Year  order by sum ( degrees.Degrees )  desc limit 1"
  },
  {
    "NatSQL": "select degrees.Campus from degrees  group by degrees.Campus  order by sum ( degrees.Degrees )  desc limit 1"
  },
  {
    "NatSQL": "select degrees.Campus from degrees  group by degrees.Campus  order by sum ( degrees.Degrees )  desc limit 1"
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  faculty.Year = 2003  order by faculty.Faculty desc limit 1"
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  faculty.Year = 2003  order by faculty.Faculty desc limit 1"
  },
  {
    "NatSQL": "select avg ( csu_fees.CampusFee )  from csu_fees  where  csu_fees.Year = 1996 "
  },
  {
    "NatSQL": "select avg ( csu_fees.CampusFee )  from csu_fees  where  csu_fees.Year = 1996 "
  },
  {
    "NatSQL": "select avg ( csu_fees.CampusFee )  from csu_fees  where  csu_fees.Year = 2005 "
  },
  {
    "NatSQL": "select avg ( csu_fees.CampusFee )  from csu_fees  where  csu_fees.Year = 2005 "
  },
  {
    "NatSQL": "select campuses.Campus , sum ( degrees.Degrees )  from campuses  where  degrees.Year >= 1998  and  degrees.Year <= 2002  group by campuses.Campus "
  },
  {
    "NatSQL": "select campuses.Campus , sum ( degrees.Degrees )  from campuses  where  degrees.Year >= 1998  and  degrees.Year <= 2002  group by campuses.Campus "
  },
  {
    "NatSQL": "select campuses.Campus , sum ( degrees.Degrees )  from campuses  where  campuses.County = \"湖北\"  and  degrees.Year >= 2000  group by campuses.Campus "
  },
  {
    "NatSQL": "select campuses.Campus , sum ( degrees.Degrees )  from campuses  where  campuses.County = \"湖北\"  and  degrees.Year >= 2000  group by campuses.Campus "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  faculty.Year = 2002  and  @.@ > max ( faculty.Faculty )   and  faculty.Year = 2002  and  campuses.County = \"湖北\" "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  faculty.Year = 2002  and  @.@ > max ( faculty.Faculty )   and  faculty.Year = 2002  and  campuses.County = \"湖北\" "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  enrollments.Year = 1956  and  enrollments.TotalEnrollment_AY > 400  and  enrollments.FTE_AY > 200 "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  enrollments.Year = 1956  and  enrollments.TotalEnrollment_AY > 400  and  enrollments.FTE_AY > 200 "
  },
  {
    "NatSQL": "select count ( campuses.* )  from campuses  where  campuses.County = \"上海\" "
  },
  {
    "NatSQL": "select count ( campuses.* )  from campuses  where  campuses.County = \"上海\" "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.County = \"上海\" "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  campuses.County = \"上海\" "
  },
  {
    "NatSQL": "select degrees.Degrees from campuses  where  campuses.Campus = \"湖南大学\"  and  degrees.Year = 2000 "
  },
  {
    "NatSQL": "select degrees.Degrees from campuses  where  campuses.Campus = \"湖南大学\"  and  degrees.Year = 2000 "
  },
  {
    "NatSQL": "select degrees.Degrees from campuses  where  campuses.Campus = \"厦门大学\"  and  degrees.Year = 2001 "
  },
  {
    "NatSQL": "select degrees.Degrees from campuses  where  campuses.Campus = \"厦门大学\"  and  degrees.Year = 2001 "
  },
  {
    "NatSQL": "select sum ( faculty.Faculty )  from faculty  where  faculty.Year = 2002 "
  },
  {
    "NatSQL": "select sum ( faculty.Faculty )  from faculty  where  faculty.Year = 2002 "
  },
  {
    "NatSQL": "select faculty.Faculty from faculty  where  faculty.Year = 2002  and  campuses.Campus = \"山东大学\" "
  },
  {
    "NatSQL": "select faculty.Faculty from faculty  where  faculty.Year = 2002  and  campuses.Campus = \"山东大学\" "
  },
  {
    "NatSQL": "select faculty.Faculty from faculty  where  faculty.Year = 2004  and  campuses.Campus = \"厦门大学\" "
  },
  {
    "NatSQL": "select faculty.Faculty from faculty  where  faculty.Year = 2004  and  campuses.Campus = \"厦门大学\" "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  faculty.Faculty >= 600  and  faculty.Faculty <= 1000  and  campuses.Year = 2004 "
  },
  {
    "NatSQL": "select campuses.Campus from campuses  where  faculty.Faculty >= 600  and  faculty.Faculty <= 1000  and  campuses.Year = 2004 "
  },
  {
    "NatSQL": "select faculty.Faculty from campuses  where  faculty.Year = 2002  order by degrees.Degrees desc limit 1"
  },
  {
    "NatSQL": "select faculty.Faculty from campuses  where  faculty.Year = 2002  order by degrees.Degrees desc limit 1"
  },
  {
    "NatSQL": "select faculty.Faculty from campuses  where  faculty.Year = 2001  order by degrees.Degrees asc limit 1"
  },
  {
    "NatSQL": "select faculty.Faculty from campuses  where  faculty.Year = 2001  order by degrees.Degrees asc limit 1"
  },
  {
    "NatSQL": "select sum ( discipline_enrollments.Undergraduate )  from discipline_enrollments  where  discipline_enrollments.Year = 2004  and  campuses.Campus = \"湖南大学\" "
  },
  {
    "NatSQL": "select sum ( discipline_enrollments.Undergraduate )  from discipline_enrollments  where  discipline_enrollments.Year = 2004  and  campuses.Campus = \"湖南大学\" "
  },
  {
    "NatSQL": "select sum ( discipline_enrollments.Graduate )  from discipline_enrollments  where  discipline_enrollments.Year = 2004  and  campuses.Campus = \"厦门大学\" "
  },
  {
    "NatSQL": "select sum ( discipline_enrollments.Graduate )  from discipline_enrollments  where  discipline_enrollments.Year = 2004  and  campuses.Campus = \"厦门大学\" "
  },
  {
    "NatSQL": "select csu_fees.CampusFee from csu_fees  where  campuses.Campus = \"厦门大学\"  and  csu_fees.Year = 2000 "
  },
  {
    "NatSQL": "select csu_fees.CampusFee from csu_fees  where  campuses.Campus = \"厦门大学\"  and  csu_fees.Year = 2000 "
  },
  {
    "NatSQL": "select csu_fees.CampusFee from csu_fees  where  campuses.Campus = \"湖南大学\"  and  csu_fees.Year = 2000 "
  },
  {
    "NatSQL": "select csu_fees.CampusFee from csu_fees  where  campuses.Campus = \"湖南大学\"  and  csu_fees.Year = 2000 "
  },
  {
    "NatSQL": "select count ( campuses.* )  from campuses "
  },
  {
    "NatSQL": "select count ( campuses.* )  from campuses "
  },
  {
    "NatSQL": "select count ( candidate.* )  from candidate "
  },
  {
    "NatSQL": "select count ( candidate.* )  from candidate "
  },
  {
    "NatSQL": "select candidate.Poll_Source from candidate  group by candidate.Poll_Source  order by count ( candidate.* )  desc limit 1"
  },
  {
    "NatSQL": "select candidate.Poll_Source from candidate  group by candidate.Poll_Source  order by count ( candidate.* )  desc limit 1"
  },
  {
    "NatSQL": "select candidate.Support_rate from candidate  order by candidate.Support_rate desc limit 3"
  },
  {
    "NatSQL": "select candidate.Support_rate from candidate  order by candidate.Support_rate desc limit 3"
  },
  {
    "NatSQL": "select candidate.Candidate_ID from candidate  order by candidate.Oppose_rate asc limit 1"
  },
  {
    "NatSQL": "select candidate.Candidate_ID from candidate  order by candidate.Oppose_rate asc limit 1"
  },
  {
    "NatSQL": "select candidate.Support_rate , candidate.Consider_rate , candidate.Oppose_rate from candidate  order by candidate.Unsure_rate asc"
  },
  {
    "NatSQL": "select candidate.Support_rate , candidate.Consider_rate , candidate.Oppose_rate from candidate  order by candidate.Unsure_rate asc"
  },
  {
    "NatSQL": "select candidate.Poll_Source from candidate  order by candidate.Oppose_rate desc limit 1"
  },
  {
    "NatSQL": "select candidate.Poll_Source from candidate  order by candidate.Oppose_rate desc limit 1"
  },
  {
    "NatSQL": "select people.Name from people  order by people.Date_of_Birth asc"
  },
  {
    "NatSQL": "select people.Name from people  order by people.Date_of_Birth asc"
  },
  {
    "NatSQL": "select avg ( people.Height )  , avg ( people.Weight )  from people  where  people.Sex = \"男\" "
  },
  {
    "NatSQL": "select avg ( people.Height )  , avg ( people.Weight )  from people  where  people.Sex = \"男\" "
  },
  {
    "NatSQL": "select people.Name from people  where  people.Height > 200  or  people.Height < 190 "
  },
  {
    "NatSQL": "select people.Name from people  where  people.Height > 200  or  people.Height < 190 "
  },
  {
    "NatSQL": "select avg ( people.Weight )  , min ( people.Weight )  , people.Sex from people  group by people.Sex "
  },
  {
    "NatSQL": "select avg ( people.Weight )  , min ( people.Weight )  , people.Sex from people  group by people.Sex "
  },
  {
    "NatSQL": "select people.Name , people.Sex from people  order by candidate.Support_rate desc limit 1"
  },
  {
    "NatSQL": "select people.Name , people.Sex from people  order by candidate.Support_rate desc limit 1"
  },
  {
    "NatSQL": "select people.Name , people.Sex , min ( candidate.Oppose_rate )  from people  group by people.Sex "
  },
  {
    "NatSQL": "select people.Name , people.Sex , min ( candidate.Oppose_rate )  from people  group by people.Sex "
  },
  {
    "NatSQL": "select people.Sex from people  group by people.Sex  order by avg ( candidate.Unsure_rate )  desc limit 1"
  },
  {
    "NatSQL": "select people.Sex from people  group by people.Sex  order by avg ( candidate.Unsure_rate )  desc limit 1"
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ not in candidate.* "
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ not in candidate.* "
  },
  {
    "NatSQL": "select people.Name from people  where  candidate.Support_rate < candidate.Oppose_rate "
  },
  {
    "NatSQL": "select people.Name from people  where  candidate.Support_rate < candidate.Oppose_rate "
  },
  {
    "NatSQL": "select count ( people.* )  , people.Sex from people  where  people.Weight > 85  group by people.Sex "
  },
  {
    "NatSQL": "select count ( people.* )  , people.Sex from people  where  people.Weight > 85  group by people.Sex "
  },
  {
    "NatSQL": "select max ( candidate.Support_rate )  , min ( candidate.Consider_rate )  , min ( candidate.Oppose_rate )  from candidate "
  },
  {
    "NatSQL": "select max ( candidate.Support_rate )  , min ( candidate.Consider_rate )  , min ( candidate.Oppose_rate )  from candidate "
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ join candidate.*  and  people.Sex = \"女\"  order by people.Name asc"
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ join candidate.*  and  people.Sex = \"女\"  order by people.Name asc"
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ < avg ( people.Height )  "
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ < avg ( people.Height )  "
  },
  {
    "NatSQL": "select people.* from people "
  },
  {
    "NatSQL": "select people.* from people "
  },
  {
    "NatSQL": "select movie.title from movie  where  movie.director = \"李安\" "
  },
  {
    "NatSQL": "select movie.title from movie  where  movie.director = \"李安\" "
  },
  {
    "NatSQL": "select movie.title from movie  where  movie.director = \"姜文\"  and  movie.year > 2000 "
  },
  {
    "NatSQL": "select movie.title from movie  where  movie.director = \"姜文\"  and  movie.year > 2000 "
  },
  {
    "NatSQL": "select count ( movie.* )  from movie  where  movie.year < 2000 "
  },
  {
    "NatSQL": "select count ( movie.* )  from movie  where  movie.year < 2000 "
  },
  {
    "NatSQL": "select movie.director from movie  where  movie.title = \"让子弹飞\" "
  },
  {
    "NatSQL": "select movie.director from movie  where  movie.title = \"让子弹飞\" "
  },
  {
    "NatSQL": "select count ( reviewer.* )  from reviewer "
  },
  {
    "NatSQL": "select count ( reviewer.* )  from reviewer "
  },
  {
    "NatSQL": "select reviewer.rID from reviewer  where  reviewer.name like \"佳佳\" "
  },
  {
    "NatSQL": "select reviewer.rID from reviewer  where  reviewer.name like \"佳佳\" "
  },
  {
    "NatSQL": "select reviewer.rID from reviewer  where  reviewer.name = \"苏铭\" "
  },
  {
    "NatSQL": "select reviewer.rID from reviewer  where  reviewer.name = \"苏铭\" "
  },
  {
    "NatSQL": "select count ( rating.* )  from rating  where  rating.stars > 3 "
  },
  {
    "NatSQL": "select count ( rating.* )  from rating  where  rating.stars > 3 "
  },
  {
    "NatSQL": "select max ( rating.stars )  , min ( rating.stars )  from rating "
  },
  {
    "NatSQL": "select max ( rating.stars )  , min ( rating.stars )  from rating "
  },
  {
    "NatSQL": "select  distinct movie.year from movie  where  rating.stars >= 4  order by movie.year asc"
  },
  {
    "NatSQL": "select  distinct movie.year from movie  where  rating.stars >= 4  order by movie.year asc"
  },
  {
    "NatSQL": "select movie.director , movie.title from movie  where  rating.stars = 5 "
  },
  {
    "NatSQL": "select movie.director , movie.title from movie  where  rating.stars = 5 "
  },
  {
    "NatSQL": "select reviewer.name , avg ( rating.stars )  from rating  group by reviewer.name "
  },
  {
    "NatSQL": "select reviewer.name , avg ( rating.stars )  from rating  group by reviewer.name "
  },
  {
    "NatSQL": "select movie.title from movie  where  @.@ not in rating.* "
  },
  {
    "NatSQL": "select movie.title from movie  where  @.@ not in rating.* "
  },
  {
    "NatSQL": "select  distinct reviewer.name from reviewer  where  rating.ratingDate = \"null\" "
  },
  {
    "NatSQL": "select  distinct reviewer.name from reviewer  where  rating.ratingDate = \"null\" "
  },
  {
    "NatSQL": "select avg ( rating.stars )  , movie.title from rating  where  @.@ = min ( movie.year )  "
  },
  {
    "NatSQL": "select avg ( rating.stars )  , movie.title from rating  where  @.@ = min ( movie.year )  "
  },
  {
    "NatSQL": "select movie.title from movie  where  @.@ = max ( movie.year )  "
  },
  {
    "NatSQL": "select movie.title from movie  where  @.@ = max ( movie.year )  "
  },
  {
    "NatSQL": "select max ( rating.stars )  , movie.year from rating  where  @.@ = max ( movie.year )  "
  },
  {
    "NatSQL": "select max ( rating.stars )  , movie.year from rating  where  @.@ = max ( movie.year )  "
  },
  {
    "NatSQL": "select movie.title from movie  where  @.@ > max ( movie.year )   and  movie.director = \"李安\" "
  },
  {
    "NatSQL": "select movie.title from movie  where  @.@ > max ( movie.year )   and  movie.director = \"李安\" "
  },
  {
    "NatSQL": "select movie.title , movie.director from rating  where  @.@ > avg ( rating.stars )   and  movie.director = \"姜文\" "
  },
  {
    "NatSQL": "select movie.title , movie.director from rating  where  @.@ > avg ( rating.stars )   and  movie.director = \"姜文\" "
  },
  {
    "NatSQL": "select reviewer.name , movie.title , rating.stars , rating.ratingDate from rating  order by reviewer.name , movie.title , rating.stars asc"
  },
  {
    "NatSQL": "select reviewer.name , movie.title , rating.stars , rating.ratingDate from rating  order by reviewer.name , movie.title , rating.stars asc"
  },
  {
    "NatSQL": "select reviewer.name from rating  where  count ( rating.* )  >= 3  group by rating.rID "
  },
  {
    "NatSQL": "select reviewer.name from rating  where  count ( rating.* )  >= 3  group by rating.rID "
  },
  {
    "NatSQL": "select  distinct reviewer.name from rating  where  movie.title = \"飘\" "
  },
  {
    "NatSQL": "select  distinct reviewer.name from rating  where  movie.title = \"飘\" "
  },
  {
    "NatSQL": "select  distinct movie.director from rating  where  reviewer.name = \"沈荣\" "
  },
  {
    "NatSQL": "select  distinct movie.director from rating  where  reviewer.name = \"沈荣\" "
  },
  {
    "NatSQL": "select  distinct reviewer.name , movie.title , rating.stars from rating  where  movie.director = reviewer.name "
  },
  {
    "NatSQL": "select  distinct reviewer.name , movie.title , rating.stars from rating  where  movie.director = reviewer.name "
  },
  {
    "NatSQL": "select reviewer.name from reviewer  where  union_  @.@ is movie.* "
  },
  {
    "NatSQL": "select reviewer.name from reviewer  where  union_  @.@ is movie.* "
  },
  {
    "NatSQL": "select  distinct movie.title from movie  where  except_  @.@ is reviewer.*  and  reviewer.name = \"谢晨\" "
  },
  {
    "NatSQL": "select  distinct movie.title from movie  where  except_  @.@ is reviewer.*  and  reviewer.name = \"谢晨\" "
  },
  {
    "NatSQL": "select movie.title , movie.director from movie  where  movie.title != movie.title  order by movie.director , movie.title asc"
  },
  {
    "NatSQL": "select movie.title , movie.director from movie  where  movie.title != movie.title  order by movie.director , movie.title asc"
  },
  {
    "NatSQL": "select movie.title , movie.year from movie  where  movie.director = movie.director  and  movie.title != movie.title "
  },
  {
    "NatSQL": "select movie.title , movie.year from movie  where  movie.director = movie.director  and  movie.title != movie.title "
  },
  {
    "NatSQL": "select movie.director from movie  where  count ( movie.* )  = 1  group by movie.director "
  },
  {
    "NatSQL": "select movie.director from movie  where  count ( movie.* )  = 1  group by movie.director "
  },
  {
    "NatSQL": "select movie.director from movie  where  movie.director != \"null\"  and  count ( movie.* )  = 1  group by movie.director "
  },
  {
    "NatSQL": "select movie.director from movie  where  movie.director != \"null\"  and  count ( movie.* )  = 1  group by movie.director "
  },
  {
    "NatSQL": "select count ( rating.* )  , movie.director from movie  group by movie.director "
  },
  {
    "NatSQL": "select count ( rating.* )  , movie.director from movie  group by movie.director "
  },
  {
    "NatSQL": "select movie.title , avg ( rating.stars )  from rating  group by rating.mID  order by avg ( rating.stars )  desc limit 1"
  },
  {
    "NatSQL": "select movie.title , avg ( rating.stars )  from rating  group by rating.mID  order by avg ( rating.stars )  desc limit 1"
  },
  {
    "NatSQL": "select movie.title , avg ( rating.stars )  from rating  group by rating.mID  order by avg ( rating.stars )  asc limit 1"
  },
  {
    "NatSQL": "select movie.title , avg ( rating.stars )  from rating  group by rating.mID  order by avg ( rating.stars )  asc limit 1"
  },
  {
    "NatSQL": "select movie.title , movie.year from rating  order by rating.stars desc limit 3"
  },
  {
    "NatSQL": "select movie.title , movie.year from rating  order by rating.stars desc limit 3"
  },
  {
    "NatSQL": "select movie.title , rating.stars , movie.director , max ( rating.stars )  from rating  where  movie.director != \"null\"  group by movie.director "
  },
  {
    "NatSQL": "select movie.title , rating.stars , movie.director , max ( rating.stars )  from rating  where  movie.director != \"null\"  group by movie.director "
  },
  {
    "NatSQL": "select movie.title , rating.rID , rating.stars , min ( rating.stars )  from rating  group by rating.rID "
  },
  {
    "NatSQL": "select movie.title , rating.rID , rating.stars , min ( rating.stars )  from rating  group by rating.rID "
  },
  {
    "NatSQL": "select movie.title , rating.stars , movie.director , min ( rating.stars )  from rating  group by movie.director "
  },
  {
    "NatSQL": "select movie.title , rating.stars , movie.director , min ( rating.stars )  from rating  group by movie.director "
  },
  {
    "NatSQL": "select movie.title , movie.mID from rating  group by rating.mID  order by count ( rating.* )  desc limit 1"
  },
  {
    "NatSQL": "select movie.title , movie.mID from rating  group by rating.mID  order by count ( rating.* )  desc limit 1"
  },
  {
    "NatSQL": "select movie.title from rating  where  rating.stars between 3 and 5 "
  },
  {
    "NatSQL": "select movie.title from rating  where  rating.stars between 3 and 5 "
  },
  {
    "NatSQL": "select reviewer.name from rating  where  rating.stars > 3 "
  },
  {
    "NatSQL": "select reviewer.name from rating  where  rating.stars > 3 "
  },
  {
    "NatSQL": "select rating.mID , avg ( rating.stars )  from rating  where  @.@ not in rating.mID  and  reviewer.name = \"韦浩\"  group by rating.mID "
  },
  {
    "NatSQL": "select rating.mID , avg ( rating.stars )  from rating  where  @.@ not in rating.mID  and  reviewer.name = \"韦浩\"  group by rating.mID "
  },
  {
    "NatSQL": "select rating.mID from rating  where  except_  @.@ is reviewer.*  and  reviewer.name = \"韦浩\" "
  },
  {
    "NatSQL": "select rating.mID from rating  where  except_  @.@ is reviewer.*  and  reviewer.name = \"韦浩\" "
  },
  {
    "NatSQL": "select rating.mID , avg ( rating.stars )  from rating  where  count ( rating.* )  >= 2  group by rating.mID "
  },
  {
    "NatSQL": "select rating.mID , avg ( rating.stars )  from rating  where  count ( rating.* )  >= 2  group by rating.mID "
  },
  {
    "NatSQL": "select rating.rID from rating  where  except_  @.@ is rating.*  and  rating.stars = 4 "
  },
  {
    "NatSQL": "select rating.rID from rating  where  except_  @.@ is rating.*  and  rating.stars = 4 "
  },
  {
    "NatSQL": "select rating.rID from rating  where  rating.stars != 4 "
  },
  {
    "NatSQL": "select rating.rID from rating  where  rating.stars != 4 "
  },
  {
    "NatSQL": "select  distinct movie.title from rating  where  reviewer.name = \"韦浩\"  or  movie.year > 2000 "
  },
  {
    "NatSQL": "select  distinct movie.title from rating  where  reviewer.name = \"韦浩\"  or  movie.year > 2000 "
  },
  {
    "NatSQL": "select movie.title from movie  where  movie.director = \"姜文\"  or  movie.year < 1980 "
  },
  {
    "NatSQL": "select movie.title from movie  where  movie.director = \"姜文\"  or  movie.year < 1980 "
  },
  {
    "NatSQL": "select reviewer.name from rating  where  rating.stars = 3  and  rating.stars = 4 "
  },
  {
    "NatSQL": "select reviewer.name from rating  where  rating.stars = 3  and  rating.stars = 4 "
  },
  {
    "NatSQL": "select movie.title from rating  where  rating.stars = 3  and  rating.stars = 4 "
  },
  {
    "NatSQL": "select movie.title from rating  where  rating.stars = 3  and  rating.stars = 4 "
  },
  {
    "NatSQL": "select count ( county_public_safety.* )  from county_public_safety "
  },
  {
    "NatSQL": "select count ( county_public_safety.* )  from county_public_safety "
  },
  {
    "NatSQL": "select county_public_safety.Name from county_public_safety  order by county_public_safety.Population desc"
  },
  {
    "NatSQL": "select county_public_safety.Name from county_public_safety  order by county_public_safety.Population desc"
  },
  {
    "NatSQL": "select  distinct county_public_safety.Police_force from county_public_safety  where  county_public_safety.Location != \"冬\" "
  },
  {
    "NatSQL": "select  distinct county_public_safety.Police_force from county_public_safety  where  county_public_safety.Location != \"冬\" "
  },
  {
    "NatSQL": "select min ( county_public_safety.Crime_rate )  , max ( county_public_safety.Crime_rate )  from county_public_safety "
  },
  {
    "NatSQL": "select min ( county_public_safety.Crime_rate )  , max ( county_public_safety.Crime_rate )  from county_public_safety "
  },
  {
    "NatSQL": "select county_public_safety.Crime_rate from county_public_safety  order by county_public_safety.Police_officers asc"
  },
  {
    "NatSQL": "select county_public_safety.Crime_rate from county_public_safety  order by county_public_safety.Police_officers asc"
  },
  {
    "NatSQL": "select city.Name from city  order by city.Name asc"
  },
  {
    "NatSQL": "select city.Name from city  order by city.Name asc"
  },
  {
    "NatSQL": "select city.Hispanic from city  where  city.Black > 10 "
  },
  {
    "NatSQL": "select city.Hispanic from city  where  city.Black > 10 "
  },
  {
    "NatSQL": "select county_public_safety.Name from county_public_safety  order by county_public_safety.Population desc limit 1"
  },
  {
    "NatSQL": "select county_public_safety.Name from county_public_safety  order by county_public_safety.Population desc limit 1"
  },
  {
    "NatSQL": "select city.Name from city  order by city.White desc limit 5"
  },
  {
    "NatSQL": "select city.Name from city  order by city.White desc limit 5"
  },
  {
    "NatSQL": "select city.Name , county_public_safety.Name from city "
  },
  {
    "NatSQL": "select city.Name , county_public_safety.Name from city "
  },
  {
    "NatSQL": "select city.White , county_public_safety.Crime_rate from city "
  },
  {
    "NatSQL": "select city.White , county_public_safety.Crime_rate from city "
  },
  {
    "NatSQL": "select city.Name from city  where  @.@ in county_public_safety.County_ID  order by county_public_safety.Police_officers desc limit 1"
  },
  {
    "NatSQL": "select city.Name from city  where  @.@ in county_public_safety.*  order by county_public_safety.Police_officers desc limit 1"
  },
  {
    "NatSQL": "select count ( city.* )  from city  where  @.@ in county_public_safety.*  and  county_public_safety.Population > 20000 "
  },
  {
    "NatSQL": "select count ( city.* )  from city  where  @.@ in county_public_safety.*  and  county_public_safety.Population > 20000 "
  },
  {
    "NatSQL": "select county_public_safety.Crime_rate from city  where  city.White > 90 "
  },
  {
    "NatSQL": "select county_public_safety.Crime_rate from city  where  city.White > 90 "
  },
  {
    "NatSQL": "select county_public_safety.Police_force , count ( county_public_safety.* )  from county_public_safety  group by county_public_safety.Police_force "
  },
  {
    "NatSQL": "select county_public_safety.Police_force , count ( county_public_safety.* )  from county_public_safety  group by county_public_safety.Police_force "
  },
  {
    "NatSQL": "select county_public_safety.Location from county_public_safety  group by county_public_safety.Location  order by count ( county_public_safety.* )  desc limit 1"
  },
  {
    "NatSQL": "select county_public_safety.Location from county_public_safety  group by county_public_safety.Location  order by count ( county_public_safety.* )  desc limit 1"
  },
  {
    "NatSQL": "select county_public_safety.Name from county_public_safety  where  @.@ not in city.* "
  },
  {
    "NatSQL": "select county_public_safety.Name from county_public_safety  where  @.@ not in city.* "
  },
  {
    "NatSQL": "select county_public_safety.Police_force from county_public_safety  where  county_public_safety.Location = \"冬\"  and  county_public_safety.Location = \"西\" "
  },
  {
    "NatSQL": "select county_public_safety.Police_force from county_public_safety  where  county_public_safety.Location = \"冬\"  and  county_public_safety.Location = \"西\" "
  },
  {
    "NatSQL": "select city.Name from city  where  @.@ in county_public_safety.*  and  county_public_safety.Crime_rate < 100 "
  },
  {
    "NatSQL": "select city.Name from city  where  @.@ in county_public_safety.*  and  county_public_safety.Crime_rate < 100 "
  },
  {
    "NatSQL": "select county_public_safety.Case_burden from county_public_safety  order by county_public_safety.Population desc"
  },
  {
    "NatSQL": "select county_public_safety.Case_burden from county_public_safety  order by county_public_safety.Population desc"
  },
  {
    "NatSQL": "select rooms.roomName from rooms  where  rooms.basePrice < 160  and  rooms.beds = 2  and  rooms.decor = \"现代化\" "
  },
  {
    "NatSQL": "select rooms.roomName from rooms  where  rooms.basePrice < 160  and  rooms.beds = 2  and  rooms.decor = \"现代化\" "
  },
  {
    "NatSQL": "select rooms.roomName , rooms.RoomId from rooms  where  rooms.basePrice > 160  and  rooms.maxOccupancy > 2 "
  },
  {
    "NatSQL": "select rooms.roomName , rooms.RoomId from rooms  where  rooms.basePrice > 160  and  rooms.maxOccupancy > 2 "
  },
  {
    "NatSQL": "select rooms.roomName from reservations  group by reservations.Room  order by count ( reservations.* )  desc limit 1"
  },
  {
    "NatSQL": "select rooms.roomName from reservations  group by reservations.Room  order by count ( reservations.* )  desc limit 1"
  },
  {
    "NatSQL": "select reservations.Kids from reservations  where  reservations.FirstName = \"罗\"  and  reservations.LastName = \"锋\" "
  },
  {
    "NatSQL": "select reservations.Kids from reservations  where  reservations.FirstName = \"罗\"  and  reservations.LastName = \"锋\" "
  },
  {
    "NatSQL": "select count ( reservations.* )  from reservations  where  reservations.FirstName = \"罗\"  and  reservations.LastName = \"锋\" "
  },
  {
    "NatSQL": "select count ( reservations.* )  from reservations  where  reservations.FirstName = \"罗\"  and  reservations.LastName = \"锋\" "
  },
  {
    "NatSQL": "select rooms.roomName , reservations.Rate , reservations.CheckIn , reservations.CheckOut from reservations  group by reservations.Room  order by reservations.Rate desc limit 1"
  },
  {
    "NatSQL": "select rooms.roomName , reservations.Rate , reservations.CheckIn , reservations.CheckOut from reservations  group by reservations.Room  order by reservations.Rate desc limit 1"
  },
  {
    "NatSQL": "select reservations.Adults from reservations  where  reservations.CheckIn = \"2010-10-23\"  and  reservations.FirstName = \"康\"  and  reservations.LastName = \"运杰\" "
  },
  {
    "NatSQL": "select reservations.Adults from reservations  where  reservations.CheckIn = \"2010-10-23\"  and  reservations.FirstName = \"康\"  and  reservations.LastName = \"运杰\" "
  },
  {
    "NatSQL": "select reservations.Kids from reservations  where  reservations.CheckIn = \"2010-09-21\"  and  reservations.FirstName = \"田\"  and  reservations.LastName = \"智\" "
  },
  {
    "NatSQL": "select reservations.Kids from reservations  where  reservations.CheckIn = \"2010-09-21\"  and  reservations.FirstName = \"田\"  and  reservations.LastName = \"智\" "
  },
  {
    "NatSQL": "select sum ( rooms.beds )  from rooms  where  rooms.bedType = \"大床\" "
  },
  {
    "NatSQL": "select sum ( rooms.beds )  from rooms  where  rooms.bedType = \"大床\" "
  },
  {
    "NatSQL": "select rooms.roomName , rooms.decor from rooms  where  rooms.bedType = \"大床\"  order by rooms.basePrice asc"
  },
  {
    "NatSQL": "select rooms.roomName , rooms.decor from rooms  where  rooms.bedType = \"大床\"  order by rooms.basePrice asc"
  },
  {
    "NatSQL": "select rooms.roomName , rooms.basePrice from rooms  order by rooms.basePrice asc limit 1"
  },
  {
    "NatSQL": "select rooms.roomName , rooms.basePrice from rooms  order by rooms.basePrice asc limit 1"
  },
  {
    "NatSQL": "select rooms.decor from rooms  where  rooms.roomName = \"北欧风格\" "
  },
  {
    "NatSQL": "select rooms.decor from rooms  where  rooms.roomName = \"北欧风格\" "
  },
  {
    "NatSQL": "select rooms.bedType , avg ( rooms.basePrice )  from rooms  group by rooms.bedType "
  },
  {
    "NatSQL": "select rooms.bedType , avg ( rooms.basePrice )  from rooms  group by rooms.bedType "
  },
  {
    "NatSQL": "select sum ( rooms.maxOccupancy )  from rooms  where  rooms.decor = \"现代化\" "
  },
  {
    "NatSQL": "select sum ( rooms.maxOccupancy )  from rooms  where  rooms.decor = \"现代化\" "
  },
  {
    "NatSQL": "select rooms.decor from rooms  where  @.@ join reservations.*  group by rooms.decor  order by count ( rooms.decor )  asc limit 1"
  },
  {
    "NatSQL": "select rooms.decor from reservations  where  @.@ join reservations.*  group by rooms.decor  order by count ( rooms.decor )  asc limit 1"
  },
  {
    "NatSQL": "select count ( reservations.* )  from reservations  where  rooms.maxOccupancy = reservations.Adults "
  },
  {
    "NatSQL": "select count ( reservations.* )  from reservations  where  rooms.maxOccupancy = reservations.Adults "
  },
  {
    "NatSQL": "select reservations.FirstName , reservations.LastName from reservations  where  reservations.Rate - rooms.basePrice > 0 "
  },
  {
    "NatSQL": "select reservations.FirstName , reservations.LastName from reservations  where  reservations.Rate - rooms.basePrice > 0 "
  },
  {
    "NatSQL": "select count ( rooms.* )  from rooms "
  },
  {
    "NatSQL": "select count ( rooms.* )  from rooms "
  },
  {
    "NatSQL": "select count ( rooms.* )  from rooms  where  rooms.bedType = \"大床\" "
  },
  {
    "NatSQL": "select count ( rooms.* )  from rooms  where  rooms.bedType = \"大床\" "
  },
  {
    "NatSQL": "select rooms.bedType , count ( rooms.* )  from rooms  group by rooms.bedType "
  },
  {
    "NatSQL": "select rooms.bedType , count ( rooms.* )  from rooms  group by rooms.bedType "
  },
  {
    "NatSQL": "select rooms.roomName from rooms  order by rooms.maxOccupancy desc limit 1"
  },
  {
    "NatSQL": "select rooms.roomName from rooms  order by rooms.maxOccupancy desc limit 1"
  },
  {
    "NatSQL": "select rooms.RoomId , rooms.roomName from rooms  order by rooms.basePrice desc limit 1"
  },
  {
    "NatSQL": "select rooms.RoomId , rooms.roomName from rooms  order by rooms.basePrice desc limit 1"
  },
  {
    "NatSQL": "select rooms.roomName , rooms.bedType from rooms  where  rooms.decor = \"传统\" "
  },
  {
    "NatSQL": "select rooms.roomName , rooms.bedType from rooms  where  rooms.decor = \"传统\" "
  },
  {
    "NatSQL": "select rooms.decor , count ( rooms.* )  from rooms  where  rooms.bedType = \"大床\"  group by rooms.decor "
  },
  {
    "NatSQL": "select rooms.decor , count ( rooms.* )  from rooms  where  rooms.bedType = \"大床\"  group by rooms.decor "
  },
  {
    "NatSQL": "select rooms.decor , avg ( rooms.basePrice )  , min ( rooms.basePrice )  from rooms  group by rooms.decor "
  },
  {
    "NatSQL": "select rooms.decor , avg ( rooms.basePrice )  , min ( rooms.basePrice )  from rooms  group by rooms.decor "
  },
  {
    "NatSQL": "select rooms.roomName from rooms  order by rooms.basePrice asc"
  },
  {
    "NatSQL": "select rooms.roomName from rooms  order by rooms.basePrice asc"
  },
  {
    "NatSQL": "select rooms.decor , count ( rooms.* )  from rooms  where  rooms.basePrice > 120  group by rooms.decor "
  },
  {
    "NatSQL": "select rooms.decor , count ( rooms.* )  from rooms  where  rooms.basePrice > 120  group by rooms.decor "
  },
  {
    "NatSQL": "select rooms.bedType , avg ( rooms.basePrice )  from rooms  group by rooms.bedType "
  },
  {
    "NatSQL": "select rooms.bedType , avg ( rooms.basePrice )  from rooms  group by rooms.bedType "
  },
  {
    "NatSQL": "select rooms.roomName from rooms  where  rooms.bedType = \"大床\"  or  rooms.bedType = \"双人\" "
  },
  {
    "NatSQL": "select rooms.roomName from rooms  where  rooms.bedType = \"大床\"  or  rooms.bedType = \"双人\" "
  },
  {
    "NatSQL": "select count (  distinct rooms.bedType )  from rooms "
  },
  {
    "NatSQL": "select count (  distinct rooms.bedType )  from rooms "
  },
  {
    "NatSQL": "select rooms.RoomId , rooms.roomName from rooms  order by rooms.basePrice desc limit 3"
  },
  {
    "NatSQL": "select rooms.RoomId , rooms.roomName from rooms  order by rooms.basePrice desc limit 3"
  },
  {
    "NatSQL": "select rooms.roomName from rooms  where  @.@ > avg ( rooms.basePrice )  "
  },
  {
    "NatSQL": "select rooms.roomName from rooms  where  @.@ > avg ( rooms.basePrice )  "
  },
  {
    "NatSQL": "select count ( rooms.* )  from rooms  where  @.@ not in reservations.* "
  },
  {
    "NatSQL": "select count ( rooms.* )  from rooms  where  @.@ not in reservations.* "
  },
  {
    "NatSQL": "select rooms.roomName , count ( reservations.* )  , reservations.Room from reservations  group by reservations.Room "
  },
  {
    "NatSQL": "select rooms.roomName , count ( reservations.* )  , reservations.Room from reservations  group by reservations.Room "
  },
  {
    "NatSQL": "select rooms.roomName from reservations  where  count ( reservations.* )  > 60  group by reservations.Room "
  },
  {
    "NatSQL": "select rooms.roomName from reservations  where  count ( reservations.* )  > 60  group by reservations.Room "
  },
  {
    "NatSQL": "select rooms.roomName from rooms  where  rooms.basePrice between 120 and 150 "
  },
  {
    "NatSQL": "select rooms.roomName from rooms  where  rooms.basePrice between 120 and 150 "
  },
  {
    "NatSQL": "select rooms.roomName from reservations  where  reservations.FirstName like \"浩\" "
  },
  {
    "NatSQL": "select rooms.roomName from reservations  where  reservations.FirstName like \"浩\" "
  },
  {
    "NatSQL": "select customer_master_index.cmi_details from customer_master_index  where  cmi_cross_references.source_system_code = \"税收\" "
  },
  {
    "NatSQL": "select cmi_cross_references.cmi_cross_ref_id , cmi_cross_references.source_system_code from cmi_cross_references  where  count ( council_tax.* )  >= 1  group by cmi_cross_references.cmi_cross_ref_id "
  },
  {
    "NatSQL": "select cmi_cross_references.cmi_cross_ref_id , cmi_cross_references.master_customer_id , count ( business_rates.* )  from business_rates  group by cmi_cross_references.cmi_cross_ref_id "
  },
  {
    "NatSQL": "select cmi_cross_references.source_system_code , benefits_overpayments.council_tax_id from cmi_cross_references  order by benefits_overpayments.council_tax_id asc"
  },
  {
    "NatSQL": "select cmi_cross_references.source_system_code , cmi_cross_references.master_customer_id , parking_fines.council_tax_id from cmi_cross_references "
  },
  {
    "NatSQL": "select rent_arrears.council_tax_id from rent_arrears  where  customer_master_index.cmi_details != \"高端\" "
  },
  {
    "NatSQL": "select electoral_register.electoral_register_id from electoral_register  where  cmi_cross_references.source_system_code = \"选举\"  or  cmi_cross_references.source_system_code = \"税收\" "
  },
  {
    "NatSQL": "select count (  distinct cmi_cross_references.source_system_code )  from cmi_cross_references "
  },
  {
    "NatSQL": "select customer_master_index.* from customer_master_index  order by customer_master_index.cmi_details desc"
  },
  {
    "NatSQL": "select parking_fines.council_tax_id , parking_fines.cmi_cross_ref_id from parking_fines "
  },
  {
    "NatSQL": "select count ( rent_arrears.* )  from rent_arrears "
  },
  {
    "NatSQL": "select  distinct cmi_cross_references.source_system_code from customer_master_index  where  customer_master_index.cmi_details = \"普通\" "
  },
  {
    "NatSQL": "select cmi_cross_references.cmi_cross_ref_id from cmi_cross_references  where  except_  @.@ is parking_fines.* "
  },
  {
    "NatSQL": "select  distinct cmi_cross_references.source_system_code from cmi_cross_references  where  cmi_cross_references.source_system_code like \"en\" "
  },
  {
    "NatSQL": "select count ( party.* )  from party "
  },
  {
    "NatSQL": "select count ( party.* )  from party "
  },
  {
    "NatSQL": "select party.Party_Theme from party  order by party.Number_of_hosts asc"
  },
  {
    "NatSQL": "select party.Party_Theme from party  order by party.Number_of_hosts asc"
  },
  {
    "NatSQL": "select party.Party_Theme , party.Location from party "
  },
  {
    "NatSQL": "select party.Party_Theme , party.Location from party "
  },
  {
    "NatSQL": "select party.First_year , party.Last_year from party  where  party.Party_Theme = \"春季\"  or  party.Party_Theme = \"科技\" "
  },
  {
    "NatSQL": "select party.First_year , party.Last_year from party  where  party.Party_Theme = \"春季\"  or  party.Party_Theme = \"科技\" "
  },
  {
    "NatSQL": "select avg ( party.Number_of_hosts )  from party "
  },
  {
    "NatSQL": "select avg ( party.Number_of_hosts )  from party "
  },
  {
    "NatSQL": "select party.Location from party  order by party.Number_of_hosts desc limit 1"
  },
  {
    "NatSQL": "select party.Location from party  order by party.Number_of_hosts desc limit 1"
  },
  {
    "NatSQL": "select host.Nationality , count ( host.* )  from host  group by host.Nationality "
  },
  {
    "NatSQL": "select host.Nationality , count ( host.* )  from host  group by host.Nationality "
  },
  {
    "NatSQL": "select host.Nationality from host  group by host.Nationality  order by count ( host.* )  desc limit 1"
  },
  {
    "NatSQL": "select host.Nationality from host  group by host.Nationality  order by count ( host.* )  desc limit 1"
  },
  {
    "NatSQL": "select host.Nationality from host  where  host.Age > 45  and  host.Age < 35 "
  },
  {
    "NatSQL": "select host.Nationality from host  where  host.Age > 45  and  host.Age < 35 "
  },
  {
    "NatSQL": "select party.Party_Theme , host.Name from party_host "
  },
  {
    "NatSQL": "select party.Party_Theme , host.Name from party_host "
  },
  {
    "NatSQL": "select party.Location , host.Name from party_host  order by host.Age asc"
  },
  {
    "NatSQL": "select party.Location , host.Name from party_host  order by host.Age asc"
  },
  {
    "NatSQL": "select party.Location from party_host  where  host.Age > 50 "
  },
  {
    "NatSQL": "select party.Location from party_host  where  host.Age > 50 "
  },
  {
    "NatSQL": "select host.Name from party_host  where  party.Number_of_hosts > 20 "
  },
  {
    "NatSQL": "select host.Name from party_host  where  party.Number_of_hosts > 20 "
  },
  {
    "NatSQL": "select host.Name , host.Nationality from host  order by host.Age desc limit 1"
  },
  {
    "NatSQL": "select host.Name , host.Nationality from host  order by host.Age desc limit 1"
  },
  {
    "NatSQL": "select host.Name from host  where  @.@ not in party_host.* "
  },
  {
    "NatSQL": "select host.Name from host  where  @.@ not in party_host.* "
  },
  {
    "NatSQL": "select count ( region.* )  from region "
  },
  {
    "NatSQL": "select count ( region.* )  from region "
  },
  {
    "NatSQL": "select region.Region_code , region.Region_name from region  order by region.Region_code asc"
  },
  {
    "NatSQL": "select region.Region_code , region.Region_name from region  order by region.Region_code asc"
  },
  {
    "NatSQL": "select region.Region_name from region  order by region.Region_name asc"
  },
  {
    "NatSQL": "select region.Region_name from region  order by region.Region_name asc"
  },
  {
    "NatSQL": "select region.Region_name from region  where  region.Region_name != \"丹麦\" "
  },
  {
    "NatSQL": "select region.Region_name from region  where  region.Region_name != \"丹麦\" "
  },
  {
    "NatSQL": "select count ( storm.* )  from storm  where  storm.Number_Deaths > 0 "
  },
  {
    "NatSQL": "select count ( storm.* )  from storm  where  storm.Number_Deaths > 0 "
  },
  {
    "NatSQL": "select storm.Name , storm.Dates_active , storm.Number_Deaths from storm  where  storm.Number_Deaths >= 1 "
  },
  {
    "NatSQL": "select storm.Name , storm.Dates_active , storm.Number_Deaths from storm  where  storm.Number_Deaths >= 1 "
  },
  {
    "NatSQL": "select avg ( storm.Damage_millions_USD )  , max ( storm.Damage_millions_USD )  from storm  where  storm.Max_speed > 1000 "
  },
  {
    "NatSQL": "select avg ( storm.Damage_millions_USD )  , max ( storm.Damage_millions_USD )  from storm  where  storm.Max_speed > 1000 "
  },
  {
    "NatSQL": "select sum ( storm.Number_Deaths )  , sum ( storm.Damage_millions_USD )  from storm  where  @.@ > avg ( storm.Max_speed )  "
  },
  {
    "NatSQL": "select sum ( storm.Number_Deaths )  , sum ( storm.Damage_millions_USD )  from storm  where  @.@ > avg ( storm.Max_speed )  "
  },
  {
    "NatSQL": "select storm.Name , storm.Damage_millions_USD from storm  order by storm.Max_speed desc"
  },
  {
    "NatSQL": "select storm.Name , storm.Damage_millions_USD from storm  order by storm.Max_speed desc"
  },
  {
    "NatSQL": "select count (  distinct affected_region.Region_id )  from affected_region "
  },
  {
    "NatSQL": "select count (  distinct affected_region.Region_id )  from affected_region "
  },
  {
    "NatSQL": "select region.Region_name from region  where  @.@ not in affected_region.* "
  },
  {
    "NatSQL": "select region.Region_name from region  where  @.@ not in affected_region.* "
  },
  {
    "NatSQL": "select region.Region_name , count ( affected_region.* )  from region  group by region.Region_id "
  },
  {
    "NatSQL": "select region.Region_name , count ( affected_region.* )  from region  group by region.Region_id "
  },
  {
    "NatSQL": "select storm.Name , count ( affected_region.* )  from storm  group by storm.Storm_ID "
  },
  {
    "NatSQL": "select storm.Name , count ( affected_region.* )  from storm  group by storm.Storm_ID "
  },
  {
    "NatSQL": "select storm.Name , storm.Max_speed from storm  group by storm.Storm_ID  order by count ( affected_region.* )  desc limit 1"
  },
  {
    "NatSQL": "select storm.Name , storm.Max_speed from storm  group by storm.Storm_ID  order by count ( affected_region.* )  desc limit 1"
  },
  {
    "NatSQL": "select storm.Name from storm  where  @.@ not in affected_region.* "
  },
  {
    "NatSQL": "select storm.Name from storm  where  @.@ not in affected_region.* "
  },
  {
    "NatSQL": "select storm.Name from storm  where  count ( affected_region.* )  >= 2  and  sum ( affected_region.Number_city_affected )  >= 10  group by storm.Storm_ID "
  },
  {
    "NatSQL": "select storm.Name from storm  where  count ( affected_region.* )  >= 2  and  sum ( affected_region.Number_city_affected )  >= 10  group by storm.Storm_ID "
  },
  {
    "NatSQL": "select storm.Name from storm  where  except_  @.@ is storm.*  and  count ( affected_region.* )  >= 2 "
  },
  {
    "NatSQL": "select storm.Name from storm  where  except_  @.@ is storm.*  and  count ( affected_region.* )  >= 2 "
  },
  {
    "NatSQL": "select region.Region_name from affected_region  where  storm.Number_Deaths >= 10 "
  },
  {
    "NatSQL": "select region.Region_name from affected_region  where  storm.Number_Deaths >= 10 "
  },
  {
    "NatSQL": "select storm.Name from affected_region  where  region.Region_name = \"丹麦\" "
  },
  {
    "NatSQL": "select storm.Name from affected_region  where  region.Region_name = \"丹麦\" "
  },
  {
    "NatSQL": "select region.Region_name from region  where  count ( affected_region.* )  >= 2  group by region.Region_id "
  },
  {
    "NatSQL": "select region.Region_name from region  where  count ( affected_region.* )  >= 2  group by region.Region_id "
  },
  {
    "NatSQL": "select region.Region_name from affected_region  order by storm.Number_Deaths desc limit 1"
  },
  {
    "NatSQL": "select region.Region_name from affected_region  order by storm.Number_Deaths desc limit 1"
  },
  {
    "NatSQL": "select storm.Name from affected_region  where  region.Region_name = \"阿富汗\"  and  region.Region_name = \"阿尔巴尼亚\" "
  },
  {
    "NatSQL": "select storm.Name from affected_region  where  region.Region_name = \"阿富汗\"  and  region.Region_name = \"阿尔巴尼亚\" "
  },
  {
    "NatSQL": "select count ( county.* )  from county "
  },
  {
    "NatSQL": "select count ( county.* )  from county "
  },
  {
    "NatSQL": "select county.County_name , county.Population from county "
  },
  {
    "NatSQL": "select county.County_name , county.Population from county "
  },
  {
    "NatSQL": "select avg ( county.Population )  from county "
  },
  {
    "NatSQL": "select avg ( county.Population )  from county "
  },
  {
    "NatSQL": "select max ( county.Population )  , min ( county.Population )  from county "
  },
  {
    "NatSQL": "select max ( county.Population )  , min ( county.Population )  from county "
  },
  {
    "NatSQL": "select  distinct election.District from election "
  },
  {
    "NatSQL": "select  distinct election.District from election "
  },
  {
    "NatSQL": "select county.Zip_code from county  where  county.County_name = \"转塘\" "
  },
  {
    "NatSQL": "select county.Zip_code from county  where  county.County_name = \"转塘\" "
  },
  {
    "NatSQL": "select election.Delegate from election  where  election.District = 1 "
  },
  {
    "NatSQL": "select election.Delegate from election  where  election.District = 1 "
  },
  {
    "NatSQL": "select election.Delegate , election.Committee from election "
  },
  {
    "NatSQL": "select election.Delegate , election.Committee from election "
  },
  {
    "NatSQL": "select count (  distinct party.Governor )  from party "
  },
  {
    "NatSQL": "select count (  distinct party.Governor )  from party "
  },
  {
    "NatSQL": "select party.Lieutenant_Governor , party.Comptroller from party  where  party.Party = \"民主\" "
  },
  {
    "NatSQL": "select party.Lieutenant_Governor , party.Comptroller from party  where  party.Party = \"民主\" "
  },
  {
    "NatSQL": "select  distinct party.Year from party  where  party.Governor = \"张梁\" "
  },
  {
    "NatSQL": "select  distinct party.Year from party  where  party.Governor = \"张梁\" "
  },
  {
    "NatSQL": "select election.* from election "
  },
  {
    "NatSQL": "select election.* from election "
  },
  {
    "NatSQL": "select election.Delegate , county.County_name from county "
  },
  {
    "NatSQL": "select election.Delegate , county.County_name from county "
  },
  {
    "NatSQL": "select election.Delegate from county  where  county.Population < 100000 "
  },
  {
    "NatSQL": "select election.Delegate from county  where  county.Population < 100000 "
  },
  {
    "NatSQL": "select count (  distinct election.Delegate )  from county  where  county.Population > 50000 "
  },
  {
    "NatSQL": "select count (  distinct election.Delegate )  from county  where  county.Population > 50000 "
  },
  {
    "NatSQL": "select county.County_name from county  where  election.Committee = \"拨款\" "
  },
  {
    "NatSQL": "select county.County_name from county  where  election.Committee = \"拨款\" "
  },
  {
    "NatSQL": "select election.Delegate , party.Party from election "
  },
  {
    "NatSQL": "select election.Delegate , party.Party from election "
  },
  {
    "NatSQL": "select party.Governor from election  where  election.District = 1 "
  },
  {
    "NatSQL": "select party.Governor from election  where  election.District = 1 "
  },
  {
    "NatSQL": "select party.Comptroller from election  where  election.District = 1  or  election.District = 2 "
  },
  {
    "NatSQL": "select party.Comptroller from election  where  election.District = 1  or  election.District = 2 "
  },
  {
    "NatSQL": "select election.Committee from election  where  party.Party = \"民主\" "
  },
  {
    "NatSQL": "select election.Committee from election  where  party.Party = \"民主\" "
  },
  {
    "NatSQL": "select county.County_name , count ( election.* )  from county  group by county.County_Id "
  },
  {
    "NatSQL": "select county.County_name , count ( election.* )  from county  group by county.County_Id "
  },
  {
    "NatSQL": "select party.Party , count ( election.* )  from election  group by election.Party "
  },
  {
    "NatSQL": "select party.Party , count ( election.* )  from election  group by election.Party "
  },
  {
    "NatSQL": "select county.County_name from county  order by county.Population asc"
  },
  {
    "NatSQL": "select county.County_name from county  order by county.Population asc"
  },
  {
    "NatSQL": "select county.County_name from county  order by county.County_name desc"
  },
  {
    "NatSQL": "select county.County_name from county  order by county.County_name desc"
  },
  {
    "NatSQL": "select county.County_name from county  order by county.Population desc limit 1"
  },
  {
    "NatSQL": "select county.County_name from county  order by county.Population desc limit 1"
  },
  {
    "NatSQL": "select county.County_name from county  order by county.Population asc limit 3"
  },
  {
    "NatSQL": "select county.County_name from county  order by county.Population asc limit 3"
  },
  {
    "NatSQL": "select county.County_name from county  where  count ( election.* )  >= 2  group by county.County_Id "
  },
  {
    "NatSQL": "select county.County_name from county  where  count ( election.* )  >= 2  group by county.County_Id "
  },
  {
    "NatSQL": "select party.Party from party  where  count ( party.* )  >= 2  group by party.Party "
  },
  {
    "NatSQL": "select party.Party from party  where  count ( party.* )  >= 2  group by party.Party "
  },
  {
    "NatSQL": "select party.Party from election  group by election.Party  order by count ( election.* )  desc limit 1"
  },
  {
    "NatSQL": "select party.Party from election  group by election.Party  order by count ( election.* )  desc limit 1"
  },
  {
    "NatSQL": "select party.Governor from party  group by party.Governor  order by count ( party.* )  desc limit 1"
  },
  {
    "NatSQL": "select party.Governor from party  group by party.Governor  order by count ( party.* )  desc limit 1"
  },
  {
    "NatSQL": "select party.Comptroller , count ( party.* )  from party  group by party.Comptroller  order by count ( party.* )  desc limit 1"
  },
  {
    "NatSQL": "select party.Comptroller , count ( party.* )  from party  group by party.Comptroller  order by count ( party.* )  desc limit 1"
  },
  {
    "NatSQL": "select party.Party from party  where  @.@ not in election.* "
  },
  {
    "NatSQL": "select party.Party from party  where  @.@ not in election.* "
  },
  {
    "NatSQL": "select party.Party from election  where  election.Committee = \"拨款\"  and  election.Committee = \"经济问题\" "
  },
  {
    "NatSQL": "select party.Party from election  where  election.Committee = \"拨款\"  and  election.Committee = \"经济问题\" "
  },
  {
    "NatSQL": "select election.Committee from election  where  party.Party = \"民主\"  and  party.Party = \"自由\" "
  },
  {
    "NatSQL": "select election.Committee from election  where  party.Party = \"民主\"  and  party.Party = \"自由\" "
  },
  {
    "NatSQL": "select count ( journalist.* )  from journalist "
  },
  {
    "NatSQL": "select journalist.Name from journalist  order by journalist.Years_working asc"
  },
  {
    "NatSQL": "select journalist.Nationality , journalist.Age from journalist "
  },
  {
    "NatSQL": "select journalist.Name from journalist  where  journalist.Nationality = \"英格兰\"  or  journalist.Nationality = \"威尔士\" "
  },
  {
    "NatSQL": "select avg ( journalist.Years_working )  from journalist "
  },
  {
    "NatSQL": "select journalist.Nationality from journalist  order by journalist.Years_working desc limit 1"
  },
  {
    "NatSQL": "select journalist.Nationality , count ( journalist.* )  from journalist  group by journalist.Nationality "
  },
  {
    "NatSQL": "select journalist.Nationality from journalist  group by journalist.Nationality  order by count ( journalist.* )  desc limit 1"
  },
  {
    "NatSQL": "select journalist.Nationality from journalist  where  journalist.Years_working > 10  and  journalist.Years_working < 3 "
  },
  {
    "NatSQL": "select event.Date , event.Name , event.Venue from event  order by event.Event_Attendance desc"
  },
  {
    "NatSQL": "select journalist.Name , event.Date from news_report "
  },
  {
    "NatSQL": "select journalist.Name , event.Name from news_report  order by event.Event_Attendance asc"
  },
  {
    "NatSQL": "select journalist.Name , count ( news_report.* )  from news_report  where  @.@ join event.*  group by journalist.Name "
  },
  {
    "NatSQL": "select journalist.Name from news_report  where  count ( event.* )  > 1  group by journalist.Name "
  },
  {
    "NatSQL": "select journalist.Name from journalist  where  @.@ not in news_report.* "
  },
  {
    "NatSQL": "select avg ( event.Event_Attendance )  , max ( event.Event_Attendance )  from event "
  },
  {
    "NatSQL": "select avg ( journalist.Age )  , avg ( journalist.Years_working )  , news_report.Work_Type from journalist  group by news_report.Work_Type "
  },
  {
    "NatSQL": "select event.Venue , event.Name from event  order by event.Event_Attendance desc limit 2"
  },
  {
    "NatSQL": "select restaurant.ResName from restaurant "
  },
  {
    "NatSQL": "select restaurant.Address from restaurant  where  restaurant.ResName = \"全聚德\" "
  },
  {
    "NatSQL": "select restaurant.Rating from restaurant  where  restaurant.ResName = \"全聚德\" "
  },
  {
    "NatSQL": "select restaurant_type.ResTypeName from restaurant_type "
  },
  {
    "NatSQL": "select restaurant_type.ResTypeDescription from restaurant_type  where  restaurant_type.ResTypeName = \"烤鸭\" "
  },
  {
    "NatSQL": "select restaurant.ResName , restaurant.Rating from restaurant  order by restaurant.Rating desc limit 1"
  },
  {
    "NatSQL": "select student.Age from student  where  student.Fname = \"李\"  and  student.LName = \"琳\" "
  },
  {
    "NatSQL": "select student.Sex from student  where  student.Fname = \"李\"  and  student.LName = \"琳\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  student.Major = 600 "
  },
  {
    "NatSQL": "select student.city_code from student  where  student.Fname = \"李\"  and  student.LName = \"琳\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Advisor = 1121 "
  },
  {
    "NatSQL": "select student.Advisor , count ( student.* )  from student  group by student.Advisor  order by count ( student.Advisor )  desc limit 1"
  },
  {
    "NatSQL": "select student.Major , count ( student.* )  from student  group by student.Major  order by count ( student.Major )  asc limit 1"
  },
  {
    "NatSQL": "select student.Major , count ( student.* )  from student  where  count ( student.Major )  between 2 and 30  group by student.Major "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  student.Age > 18  and  student.Major = 600 "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  student.Age > 18  and  student.Major != 600  and  student.Sex = \"女\" "
  },
  {
    "NatSQL": "select count ( restaurant.* )  from restaurant  where  restaurant_type.ResTypeName = \"烤鸭\"  group by type_of_restaurant.ResTypeID "
  },
  {
    "NatSQL": "select sum ( visits_restaurant.Spent )  from student  where  student.Fname = \"李\"  and  student.LName = \"琳\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Fname = \"李\"  and  student.LName = \"琳\"  and  restaurant.ResName = \"全聚德\" "
  },
  {
    "NatSQL": "select visits_restaurant.Time from student  where  student.Fname = \"李\"  and  student.LName = \"琳\"  and  restaurant.ResName = \"全聚德\" "
  },
  {
    "NatSQL": "select restaurant.ResName , sum ( visits_restaurant.Spent )  from visits_restaurant  group by restaurant.ResID  order by sum ( visits_restaurant.Spent )  asc limit 1"
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  group by student.StuID  order by count ( visits_restaurant.* )  desc limit 1"
  },
  {
    "NatSQL": "select actual_orders.actual_order_id from actual_orders  where  actual_orders.order_status_code = \"成功\" "
  },
  {
    "NatSQL": "select products.product_name , products.product_price from products  group by regular_order_products.product_id  order by count ( regular_order_products.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select count (  distinct customers.payment_method )  from customers "
  },
  {
    "NatSQL": "select trucks.truck_details from trucks  order by trucks.truck_licence_number asc"
  },
  {
    "NatSQL": "select products.product_name from products  order by products.product_price desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  except_  @.@ is addresses.*  and  addresses.state_province_county = \"浙江\" "
  },
  {
    "NatSQL": "select customers.customer_email , customers.customer_name from customers  where  customers.payment_method = \"信用卡\" "
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_phone from customers  where  addresses.state_province_county = \"浙江\" "
  },
  {
    "NatSQL": "select addresses.state_province_county from addresses  where  @.@ not in employees.* "
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_phone , customers.customer_email from customers  order by customers.date_became_customer asc"
  },
  {
    "NatSQL": "select customers.customer_name from customers  order by customers.date_became_customer asc limit 5"
  },
  {
    "NatSQL": "select customers.payment_method from customers  group by customers.payment_method  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select delivery_routes.route_name from delivery_routes  order by delivery_routes.route_name asc"
  },
  {
    "NatSQL": "select delivery_routes.route_name from delivery_routes  group by delivery_routes.route_id  order by count ( delivery_route_locations.* )  desc limit 1"
  },
  {
    "NatSQL": "select addresses.state_province_county , count ( customer_addresses.* )  from customer_addresses  group by addresses.state_province_county "
  },
  {
    "NatSQL": "select count ( authors.* )  from authors "
  },
  {
    "NatSQL": "select count ( authors.* )  from authors "
  },
  {
    "NatSQL": "select count ( inst.* )  from inst "
  },
  {
    "NatSQL": "select count ( inst.* )  from inst "
  },
  {
    "NatSQL": "select count ( papers.* )  from papers "
  },
  {
    "NatSQL": "select count ( papers.* )  from papers "
  },
  {
    "NatSQL": "select papers.title from authors  where  authors.fname = \"刘\"  and  authors.lname = \"珍\" "
  },
  {
    "NatSQL": "select papers.title from authors  where  authors.fname = \"刘\"  and  authors.lname = \"珍\" "
  },
  {
    "NatSQL": "select papers.title from authors  where  authors.fname = \"周\"  and  authors.lname = \"志华\" "
  },
  {
    "NatSQL": "select papers.title from authors  where  authors.fname = \"周\"  and  authors.lname = \"志华\" "
  },
  {
    "NatSQL": "select count ( papers.* )  from authors  where  authors.fname = \"李\"  and  authors.lname = \"航\" "
  },
  {
    "NatSQL": "select count ( papers.* )  from authors  where  authors.fname = \"李\"  and  authors.lname = \"航\" "
  },
  {
    "NatSQL": "select  distinct inst.name from authors  where  authors.fname = \"李\"  and  authors.lname = \"牧\" "
  },
  {
    "NatSQL": "select  distinct inst.name from authors  where  authors.fname = \"李\"  and  authors.lname = \"牧\" "
  },
  {
    "NatSQL": "select  distinct inst.name from authors  where  authors.fname = \"陈\"  and  authors.lname = \"十一\" "
  },
  {
    "NatSQL": "select  distinct inst.name from authors  where  authors.fname = \"陈\"  and  authors.lname = \"十一\" "
  },
  {
    "NatSQL": "select  distinct authors.fname , authors.lname from authors  where  inst.name = \"清华大学\" "
  },
  {
    "NatSQL": "select  distinct authors.fname , authors.lname from authors  where  inst.name = \"清华大学\" "
  },
  {
    "NatSQL": "select  distinct authors.fname , authors.lname from authors  where  inst.name = \"百度\" "
  },
  {
    "NatSQL": "select  distinct authors.fname , authors.lname from authors  where  inst.name = \"百度\" "
  },
  {
    "NatSQL": "select authors.lname from authors  where  papers.title = \"转基因蛋白酶\" "
  },
  {
    "NatSQL": "select authors.lname from authors  where  papers.title = \"转基因蛋白酶\" "
  },
  {
    "NatSQL": "select authors.fname , authors.lname from authors  where  papers.title = \"注意力模型\" "
  },
  {
    "NatSQL": "select authors.fname , authors.lname from authors  where  papers.title = \"注意力模型\" "
  },
  {
    "NatSQL": "select  distinct papers.title from papers  where  inst.name = \"中南大学\" "
  },
  {
    "NatSQL": "select  distinct papers.title from papers  where  inst.name = \"中南大学\" "
  },
  {
    "NatSQL": "select  distinct papers.title from papers  where  inst.name = \"百度\" "
  },
  {
    "NatSQL": "select  distinct papers.title from papers  where  inst.name = \"百度\" "
  },
  {
    "NatSQL": "select count (  distinct papers.title )  from papers  where  inst.name = \"福州大学\" "
  },
  {
    "NatSQL": "select count (  distinct papers.title )  from papers  where  inst.name = \"福州大学\" "
  },
  {
    "NatSQL": "select count (  distinct papers.title )  from papers  where  inst.name = \"浙江大学\" "
  },
  {
    "NatSQL": "select count (  distinct papers.title )  from papers  where  inst.name = \"浙江大学\" "
  },
  {
    "NatSQL": "select papers.title from authors  where  authors.fname = \"曹\"  and  authors.lname = \"子建\" "
  },
  {
    "NatSQL": "select papers.title from authors  where  authors.fname = \"曹\"  and  authors.lname = \"子建\" "
  },
  {
    "NatSQL": "select papers.title from authors  where  authors.fname = \"史\"  and  authors.lname = \"俊文\" "
  },
  {
    "NatSQL": "select papers.title from authors  where  authors.fname = \"史\"  and  authors.lname = \"俊文\" "
  },
  {
    "NatSQL": "select papers.title from authors  where  inst.country = \"中国\"  and  authorship.authOrder = 2  and  authors.lname = \"旭东\" "
  },
  {
    "NatSQL": "select papers.title from authors  where  inst.country = \"中国\"  and  authorship.authOrder = 2  and  authors.lname = \"旭东\" "
  },
  {
    "NatSQL": "select papers.title from authors  where  inst.country = \"日本\"  and  authorship.authOrder = 1  and  authors.lname = \"村上\" "
  },
  {
    "NatSQL": "select papers.title from authors  where  inst.country = \"日本\"  and  authorship.authOrder = 1  and  authors.lname = \"村上\" "
  },
  {
    "NatSQL": "select authors.lname from authors  group by authors.fname , authors.lname  order by count ( papers.* )  desc limit 1"
  },
  {
    "NatSQL": "select authors.lname from authors  group by authors.fname , authors.lname  order by count ( papers.* )  desc limit 1"
  },
  {
    "NatSQL": "select inst.country from inst  group by inst.country  order by count ( papers.* )  desc limit 1"
  },
  {
    "NatSQL": "select inst.country from inst  group by inst.country  order by count ( papers.* )  desc limit 1"
  },
  {
    "NatSQL": "select inst.name from inst  group by inst.name  order by count ( papers.* )  desc limit 1"
  },
  {
    "NatSQL": "select inst.name from inst  group by inst.name  order by count ( papers.* )  desc limit 1"
  },
  {
    "NatSQL": "select papers.title from papers  where  papers.title like \"机械\" "
  },
  {
    "NatSQL": "select papers.title from papers  where  papers.title like \"机械\" "
  },
  {
    "NatSQL": "select papers.title from papers  where  papers.title like \"数据库\" "
  },
  {
    "NatSQL": "select papers.title from papers  where  papers.title like \"数据库\" "
  },
  {
    "NatSQL": "select authors.fname from authors  where  papers.title like \"功能性\" "
  },
  {
    "NatSQL": "select authors.fname from authors  where  papers.title like \"功能性\" "
  },
  {
    "NatSQL": "select authors.lname from authors  where  papers.title like \"单细胞\" "
  },
  {
    "NatSQL": "select authors.lname from authors  where  papers.title like \"单细胞\" "
  },
  {
    "NatSQL": "select papers.title from authorship  where  @.@ = max ( authorship.authOrder )  "
  },
  {
    "NatSQL": "select papers.title from authorship  where  @.@ = max ( authorship.authOrder )  "
  },
  {
    "NatSQL": "select authors.fname from authors  where  authors.lname = \"丁\" "
  },
  {
    "NatSQL": "select authors.fname from authors  where  authors.lname = \"丁\" "
  },
  {
    "NatSQL": "select authors.lname from authors  where  authors.fname = \"小鹏\" "
  },
  {
    "NatSQL": "select authors.lname from authors  where  authors.fname = \"小鹏\" "
  },
  {
    "NatSQL": "select authors.fname from authors  order by authors.fname asc"
  },
  {
    "NatSQL": "select authors.fname from authors  order by authors.fname asc"
  },
  {
    "NatSQL": "select authors.lname from authors  order by authors.lname asc"
  },
  {
    "NatSQL": "select authors.lname from authors  order by authors.lname asc"
  },
  {
    "NatSQL": "select authors.fname , authors.lname from authors  order by authors.lname asc"
  },
  {
    "NatSQL": "select authors.fname , authors.lname from authors  order by authors.lname asc"
  },
  {
    "NatSQL": "select count (  distinct actor.last_name )  from actor "
  },
  {
    "NatSQL": "select count (  distinct actor.last_name )  from actor "
  },
  {
    "NatSQL": "select actor.first_name from actor  group by actor.first_name  order by count ( actor.* )  desc limit 1"
  },
  {
    "NatSQL": "select actor.first_name from actor  group by actor.first_name  order by count ( actor.* )  desc limit 1"
  },
  {
    "NatSQL": "select actor.first_name , actor.last_name from actor  group by actor.first_name , actor.last_name  order by count ( actor.* )  desc limit 1"
  },
  {
    "NatSQL": "select actor.first_name , actor.last_name from actor  group by actor.first_name , actor.last_name  order by count ( actor.* )  desc limit 1"
  },
  {
    "NatSQL": "select address.district from address  where  count ( address.* )  >= 2  group by address.district "
  },
  {
    "NatSQL": "select address.district from address  where  count ( address.* )  >= 2  group by address.district "
  },
  {
    "NatSQL": "select address.phone , address.postal_code from address  where  address.address = \"中山东路15号\" "
  },
  {
    "NatSQL": "select address.phone , address.postal_code from address  where  address.address = \"中山东路15号\" "
  },
  {
    "NatSQL": "select city.city , count ( address.* )  , address.city_id from address  group by address.city_id  order by count ( address.* )  desc limit 1"
  },
  {
    "NatSQL": "select city.city , count ( address.* )  , address.city_id from address  group by address.city_id  order by count ( address.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( address.* )  from address  where  address.district = \"四川\" "
  },
  {
    "NatSQL": "select count ( address.* )  from address  where  address.district = \"四川\" "
  },
  {
    "NatSQL": "select film.title , film.film_id from film  where  film.rental_rate = 0.99  and  count ( inventory.* )  < 3 "
  },
  {
    "NatSQL": "select film.title , film.film_id from film  where  film.rental_rate = 0.99  and  count ( inventory.* )  < 3 "
  },
  {
    "NatSQL": "select count ( city.* )  from city  where  country.country = \"澳大利亚\" "
  },
  {
    "NatSQL": "select count ( city.* )  from city  where  country.country = \"澳大利亚\" "
  },
  {
    "NatSQL": "select country.country from city  where  count ( city.* )  >= 3  group by country.country_id "
  },
  {
    "NatSQL": "select country.country from city  where  count ( city.* )  >= 3  group by country.country_id "
  },
  {
    "NatSQL": "select payment.payment_date from payment  where  payment.amount > 10  or  staff.first_name = \"严\" "
  },
  {
    "NatSQL": "select payment.payment_date from payment  where  payment.amount > 10  or  staff.first_name = \"严\" "
  },
  {
    "NatSQL": "select count ( customer.* )  from customer  where  customer.active = \"1\" "
  },
  {
    "NatSQL": "select count ( customer.* )  from customer  where  customer.active = \"1\" "
  },
  {
    "NatSQL": "select film.title , film.rental_rate from film  order by film.rental_rate desc limit 1"
  },
  {
    "NatSQL": "select film.title , film.rental_rate from film  order by film.rental_rate desc limit 1"
  },
  {
    "NatSQL": "select film.title , film.film_id , film.description from film_actor  group by film.film_id  order by count ( film_actor.* )  desc limit 1"
  },
  {
    "NatSQL": "select film.title , film.film_id , film.description from film_actor  group by film.film_id  order by count ( film_actor.* )  desc limit 1"
  },
  {
    "NatSQL": "select actor.first_name , actor.last_name , actor.actor_id from film_actor  group by actor.actor_id  order by count ( film_actor.* )  desc limit 1"
  },
  {
    "NatSQL": "select actor.first_name , actor.last_name , actor.actor_id from film_actor  group by actor.actor_id  order by count ( film_actor.* )  desc limit 1"
  },
  {
    "NatSQL": "select actor.first_name , actor.last_name from film_actor  where  count ( film_actor.* )  > 30  group by actor.actor_id "
  },
  {
    "NatSQL": "select actor.first_name , actor.last_name from film_actor  where  count ( film_actor.* )  > 30  group by actor.actor_id "
  },
  {
    "NatSQL": "select inventory.store_id from inventory  group by inventory.store_id  order by count ( inventory.* )  desc limit 1"
  },
  {
    "NatSQL": "select inventory.store_id from inventory  group by inventory.store_id  order by count ( inventory.* )  desc limit 1"
  },
  {
    "NatSQL": "select sum ( payment.amount )  from payment "
  },
  {
    "NatSQL": "select sum ( payment.amount )  from payment "
  },
  {
    "NatSQL": "select customer.first_name , customer.last_name , customer.customer_id from customer  group by customer.customer_id  order by sum ( payment.amount )  asc limit 1"
  },
  {
    "NatSQL": "select customer.first_name , customer.last_name , customer.customer_id from customer  group by customer.customer_id  order by sum ( payment.amount )  asc limit 1"
  },
  {
    "NatSQL": "select category.name from category  where  film.title = \"邪不压正\" "
  },
  {
    "NatSQL": "select category.name from category  where  film.title = \"邪不压正\" "
  },
  {
    "NatSQL": "select category.name , film_category.category_id , count ( film_category.* )  from film_category  group by film_category.category_id "
  },
  {
    "NatSQL": "select category.name , film_category.category_id , count ( film_category.* )  from film_category  group by film_category.category_id "
  },
  {
    "NatSQL": "select film.title , film.film_id from film  group by film.film_id  order by count ( inventory.* )  desc limit 1"
  },
  {
    "NatSQL": "select film.title , film.film_id from film  group by film.film_id  order by count ( inventory.* )  desc limit 1"
  },
  {
    "NatSQL": "select film.title , inventory.inventory_id from film  group by inventory.inventory_id  order by count ( rental.* )  desc limit 1"
  },
  {
    "NatSQL": "select film.title , inventory.inventory_id from film  group by inventory.inventory_id  order by count ( rental.* )  desc limit 1"
  },
  {
    "NatSQL": "select count (  distinct film.language_id )  from film "
  },
  {
    "NatSQL": "select count (  distinct film.language_id )  from film "
  },
  {
    "NatSQL": "select film.title from film  where  film.rating = \"R\" "
  },
  {
    "NatSQL": "select film.title from film  where  film.rating = \"R\" "
  },
  {
    "NatSQL": "select address.address from store  where  store.store_id = 1 "
  },
  {
    "NatSQL": "select address.address from store  where  store.store_id = 1 "
  },
  {
    "NatSQL": "select staff.first_name , staff.last_name , staff.staff_id from staff  group by staff.staff_id  order by count ( payment.* )  asc limit 1"
  },
  {
    "NatSQL": "select staff.first_name , staff.last_name , staff.staff_id from staff  group by staff.staff_id  order by count ( payment.* )  asc limit 1"
  },
  {
    "NatSQL": "select language.name from film  where  film.title = \"暗战\" "
  },
  {
    "NatSQL": "select language.name from film  where  film.title = \"暗战\" "
  },
  {
    "NatSQL": "select count ( store.* )  from store "
  },
  {
    "NatSQL": "select count ( store.* )  from store "
  },
  {
    "NatSQL": "select count (  distinct film.rating )  from film "
  },
  {
    "NatSQL": "select count (  distinct film.rating )  from film "
  },
  {
    "NatSQL": "select film.title from film  where  film.special_features like \"删除场景\" "
  },
  {
    "NatSQL": "select film.title from film  where  film.special_features like \"删除场景\" "
  },
  {
    "NatSQL": "select count ( inventory.* )  from inventory  where  inventory.store_id = 1 "
  },
  {
    "NatSQL": "select count ( inventory.* )  from inventory  where  inventory.store_id = 1 "
  },
  {
    "NatSQL": "select payment.payment_date from payment  order by payment.payment_date asc limit 1"
  },
  {
    "NatSQL": "select payment.payment_date from payment  order by payment.payment_date asc limit 1"
  },
  {
    "NatSQL": "select address.address , customer.email from customer  where  customer.first_name = \"天天\" "
  },
  {
    "NatSQL": "select address.address , customer.email from customer  where  customer.first_name = \"天天\" "
  },
  {
    "NatSQL": "select film.title from film  where  film.length > 100  or  film.rating = \"限制\"  except_  film.replacement_cost > 200 "
  },
  {
    "NatSQL": "select film.title from film  where  film.length > 100  or  film.rating = \"限制\"  except_  film.replacement_cost > 200 "
  },
  {
    "NatSQL": "select customer.first_name , customer.last_name from customer  order by rental.rental_date asc limit 1"
  },
  {
    "NatSQL": "select customer.first_name , customer.last_name from customer  order by rental.rental_date asc limit 1"
  },
  {
    "NatSQL": "select  distinct staff.first_name , staff.last_name from staff  where  @.@ join rental.*  and  customer.first_name = \"晓月\"  and  customer.last_name = \"张\" "
  },
  {
    "NatSQL": "select  distinct staff.first_name , staff.last_name from staff  where  @.@ join rental.*  and  customer.first_name = \"晓月\"  and  customer.last_name = \"张\" "
  },
  {
    "NatSQL": "select customer.store_id from customer  group by customer.store_id  order by count ( customer.* )  desc limit 1"
  },
  {
    "NatSQL": "select customer.store_id from customer  group by customer.store_id  order by count ( customer.* )  desc limit 1"
  },
  {
    "NatSQL": "select payment.amount from payment  order by payment.amount desc limit 1"
  },
  {
    "NatSQL": "select payment.amount from payment  order by payment.amount desc limit 1"
  },
  {
    "NatSQL": "select address.address from staff  where  staff.first_name = \"严\" "
  },
  {
    "NatSQL": "select address.address from staff  where  staff.first_name = \"严\" "
  },
  {
    "NatSQL": "select customer.first_name from customer  where  @.@ not in rental.*  and  rental.rental_date > \"2005-08-23 02:06:01\" "
  },
  {
    "NatSQL": "select customer.first_name from customer  where  @.@ not in rental.*  and  rental.rental_date > \"2005-08-23 02:06:01\" "
  },
  {
    "NatSQL": "select count ( bank.* )  from bank "
  },
  {
    "NatSQL": "select count ( bank.* )  from bank "
  },
  {
    "NatSQL": "select sum ( bank.no_of_customers )  from bank "
  },
  {
    "NatSQL": "select sum ( bank.no_of_customers )  from bank "
  },
  {
    "NatSQL": "select sum ( bank.no_of_customers )  from bank  where  bank.city = \"上海\" "
  },
  {
    "NatSQL": "select sum ( bank.no_of_customers )  from bank  where  bank.city = \"上海\" "
  },
  {
    "NatSQL": "select avg ( bank.no_of_customers )  from bank  where  bank.state = \"江西\" "
  },
  {
    "NatSQL": "select avg ( bank.no_of_customers )  from bank  where  bank.state = \"江西\" "
  },
  {
    "NatSQL": "select avg ( bank.no_of_customers )  from bank "
  },
  {
    "NatSQL": "select avg ( bank.no_of_customers )  from bank "
  },
  {
    "NatSQL": "select bank.city , bank.state from bank  where  bank.bname = \"浦发\" "
  },
  {
    "NatSQL": "select bank.city , bank.state from bank  where  bank.bname = \"浦发\" "
  },
  {
    "NatSQL": "select bank.bname from bank  where  bank.state = \"上海\" "
  },
  {
    "NatSQL": "select bank.bname from bank  where  bank.state = \"上海\" "
  },
  {
    "NatSQL": "select customer.cust_name from customer  order by customer.acc_bal asc"
  },
  {
    "NatSQL": "select customer.cust_name from customer  order by customer.acc_bal asc"
  },
  {
    "NatSQL": "select customer.cust_name from customer  group by customer.cust_name  order by sum ( loan.amount )  asc"
  },
  {
    "NatSQL": "select customer.cust_name from customer  group by customer.cust_name  order by sum ( loan.amount )  asc"
  },
  {
    "NatSQL": "select customer.state , customer.acc_type , customer.credit_score from customer  where  customer.no_of_loans = 0 "
  },
  {
    "NatSQL": "select customer.state , customer.acc_type , customer.credit_score from customer  where  customer.no_of_loans = 0 "
  },
  {
    "NatSQL": "select count (  distinct bank.city )  from bank "
  },
  {
    "NatSQL": "select count (  distinct bank.city )  from bank "
  },
  {
    "NatSQL": "select count (  distinct bank.state )  from bank "
  },
  {
    "NatSQL": "select count (  distinct bank.state )  from bank "
  },
  {
    "NatSQL": "select count (  distinct customer.acc_type )  from customer "
  },
  {
    "NatSQL": "select count (  distinct customer.acc_type )  from customer "
  },
  {
    "NatSQL": "select customer.cust_name , customer.acc_bal from customer  where  customer.cust_name like \"a\" "
  },
  {
    "NatSQL": "select customer.cust_name , customer.acc_bal from customer  where  customer.cust_name like \"a\" "
  },
  {
    "NatSQL": "select sum ( customer.acc_bal )  from customer  where  customer.state = \"江西\"  or  customer.state = \"云南\" "
  },
  {
    "NatSQL": "select sum ( customer.acc_bal )  from customer  where  customer.state = \"江西\"  or  customer.state = \"云南\" "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  customer.acc_type = \"存储\"  and  customer.acc_type = \"支票\" "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  customer.acc_type = \"存储\"  and  customer.acc_type = \"支票\" "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  except_  @.@ is customer.*  and  customer.acc_type = \"存储\" "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  except_  @.@ is customer.*  and  customer.acc_type = \"存储\" "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  except_  @.@ is loan.*  and  loan.loan_type = \"抵押\" "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  except_  @.@ is loan.*  and  loan.loan_type = \"抵押\" "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  loan.loan_type = \"抵押\"  and  loan.loan_type = \"汽车\" "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  loan.loan_type = \"抵押\"  and  loan.loan_type = \"汽车\" "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  @.@ < avg ( customer.credit_score )  "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  @.@ < avg ( customer.credit_score )  "
  },
  {
    "NatSQL": "select bank.bname from bank  order by bank.no_of_customers desc limit 1"
  },
  {
    "NatSQL": "select bank.bname from bank  order by bank.no_of_customers desc limit 1"
  },
  {
    "NatSQL": "select customer.cust_name from customer  order by customer.credit_score asc limit 1"
  },
  {
    "NatSQL": "select customer.cust_name from customer  order by customer.credit_score asc limit 1"
  },
  {
    "NatSQL": "select customer.cust_name , customer.acc_type , customer.acc_bal from customer  order by customer.credit_score desc limit 1"
  },
  {
    "NatSQL": "select customer.cust_name , customer.acc_type , customer.acc_bal from customer  order by customer.credit_score desc limit 1"
  },
  {
    "NatSQL": "select customer.cust_name from customer  group by customer.cust_name  order by sum ( loan.amount )  desc limit 1"
  },
  {
    "NatSQL": "select customer.cust_name from customer  group by customer.cust_name  order by sum ( loan.amount )  desc limit 1"
  },
  {
    "NatSQL": "select bank.state from bank  group by bank.state  order by sum ( bank.no_of_customers )  desc limit 1"
  },
  {
    "NatSQL": "select bank.state from bank  group by bank.state  order by sum ( bank.no_of_customers )  desc limit 1"
  },
  {
    "NatSQL": "select avg ( customer.acc_bal )  , customer.acc_type from customer  where  customer.credit_score < 50  group by customer.acc_type "
  },
  {
    "NatSQL": "select avg ( customer.acc_bal )  , customer.acc_type from customer  where  customer.credit_score < 50  group by customer.acc_type "
  },
  {
    "NatSQL": "select sum ( customer.acc_bal )  , customer.state from customer  where  customer.credit_score > 100  group by customer.state "
  },
  {
    "NatSQL": "select sum ( customer.acc_bal )  , customer.state from customer  where  customer.credit_score > 100  group by customer.state "
  },
  {
    "NatSQL": "select sum ( loan.amount )  , bank.bname from bank  group by bank.bname "
  },
  {
    "NatSQL": "select sum ( loan.amount )  , bank.bname from bank  group by bank.bname "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  count ( loan.* )  > 1  group by customer.cust_name "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  count ( loan.* )  > 1  group by customer.cust_name "
  },
  {
    "NatSQL": "select customer.cust_name , customer.acc_type from customer  where  sum ( loan.amount )  > 5000  group by customer.cust_name "
  },
  {
    "NatSQL": "select customer.cust_name , customer.acc_type from customer  where  sum ( loan.amount )  > 5000  group by customer.cust_name "
  },
  {
    "NatSQL": "select bank.bname from bank  group by bank.bname  order by sum ( loan.amount )  desc limit 1"
  },
  {
    "NatSQL": "select bank.bname from bank  group by bank.bname  order by sum ( loan.amount )  desc limit 1"
  },
  {
    "NatSQL": "select bank.bname from loan  where  customer.credit_score < 100  group by bank.bname  order by sum ( loan.amount )  desc limit 1"
  },
  {
    "NatSQL": "select bank.bname from loan  where  customer.credit_score < 100  group by bank.bname  order by sum ( loan.amount )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct bank.bname from bank  where  @.@ join loan.* "
  },
  {
    "NatSQL": "select  distinct bank.bname from bank  where  @.@ join loan.* "
  },
  {
    "NatSQL": "select  distinct customer.cust_name , customer.credit_score from customer  where  @.@ join loan.* "
  },
  {
    "NatSQL": "select  distinct customer.cust_name , customer.credit_score from customer  where  @.@ join loan.* "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  loan.amount > 3000 "
  },
  {
    "NatSQL": "select customer.cust_name from customer  where  loan.amount > 3000 "
  },
  {
    "NatSQL": "select bank.bname , bank.city from bank  where  loan.loan_type = \"商业\" "
  },
  {
    "NatSQL": "select bank.bname , bank.city from bank  where  loan.loan_type = \"商业\" "
  },
  {
    "NatSQL": "select bank.bname from loan  where  @.@ join loan.*  and  customer.credit_score < 100 "
  },
  {
    "NatSQL": "select bank.bname from loan  where  @.@ join loan.*  and  customer.credit_score < 100 "
  },
  {
    "NatSQL": "select sum ( loan.amount )  from bank  where  bank.state = \"上海\" "
  },
  {
    "NatSQL": "select sum ( loan.amount )  from bank  where  bank.state = \"上海\" "
  },
  {
    "NatSQL": "select avg ( customer.credit_score )  from customer  where  @.@ in loan.* "
  },
  {
    "NatSQL": "select avg ( customer.credit_score )  from customer  where  @.@ in loan.* "
  },
  {
    "NatSQL": "select avg ( customer.credit_score )  from customer  where  @.@ not in loan.* "
  },
  {
    "NatSQL": "select avg ( customer.credit_score )  from customer  where  @.@ not in loan.* "
  },
  {
    "NatSQL": "select count ( assessment_notes.* )  from assessment_notes "
  },
  {
    "NatSQL": "select assessment_notes.date_of_notes from assessment_notes "
  },
  {
    "NatSQL": "select count ( addresses.* )  from addresses  where  addresses.zip_postcode = \"197\" "
  },
  {
    "NatSQL": "select count (  distinct behavior_incident.incident_type_code )  from behavior_incident "
  },
  {
    "NatSQL": "select  distinct detention.detention_type_code from detention "
  },
  {
    "NatSQL": "select behavior_incident.date_incident_start , behavior_incident.date_incident_end from behavior_incident  where  behavior_incident.incident_type_code = \"噪音\" "
  },
  {
    "NatSQL": "select detention.detention_summary from detention "
  },
  {
    "NatSQL": "select students.cell_mobile_number , students.email_address from students "
  },
  {
    "NatSQL": "select students.email_address from students  where  students.first_name = \"杨\"  and  students.last_name = \"栋\" "
  },
  {
    "NatSQL": "select count (  distinct students_in_detention.student_id )  from students_in_detention "
  },
  {
    "NatSQL": "select teachers.gender from teachers  where  teachers.last_name = \"军\" "
  },
  {
    "NatSQL": "select ref_incident_type.incident_type_description from ref_incident_type  where  ref_incident_type.incident_type_code = \"暴力\" "
  },
  {
    "NatSQL": "select max ( student_addresses.monthly_rental )  , min ( student_addresses.monthly_rental )  from student_addresses "
  },
  {
    "NatSQL": "select teachers.first_name from teachers  where  teachers.email_address like \"qq\" "
  },
  {
    "NatSQL": "select assessment_notes.* from assessment_notes  order by assessment_notes.date_of_notes asc"
  },
  {
    "NatSQL": "select addresses.city from addresses  order by addresses.city asc"
  },
  {
    "NatSQL": "select teachers.first_name , teachers.last_name from teachers  order by teachers.last_name asc"
  },
  {
    "NatSQL": "select student_addresses.* from student_addresses  order by student_addresses.monthly_rental desc"
  },
  {
    "NatSQL": "select students.student_id , students.first_name from assessment_notes  group by assessment_notes.student_id  order by count ( assessment_notes.* )  desc limit 1"
  },
  {
    "NatSQL": "select teachers.teacher_id , teachers.first_name from assessment_notes  group by assessment_notes.teacher_id  order by count ( assessment_notes.* )  desc limit 3"
  },
  {
    "NatSQL": "select students.student_id , students.last_name from behavior_incident  group by behavior_incident.student_id  order by count ( behavior_incident.* )  desc limit 1"
  },
  {
    "NatSQL": "select teachers.teacher_id , teachers.last_name from detention  where  detention.detention_type_code = \"后置\"  group by detention.teacher_id  order by count ( detention.* )  desc limit 1"
  },
  {
    "NatSQL": "select students.student_id , students.first_name from student_addresses  group by student_addresses.student_id  order by avg ( student_addresses.monthly_rental )  desc limit 1"
  },
  {
    "NatSQL": "select addresses.address_id , addresses.city from addresses  group by student_addresses.address_id  order by avg ( student_addresses.monthly_rental )  desc limit 1"
  },
  {
    "NatSQL": "select behavior_incident.incident_type_code , ref_incident_type.incident_type_description from behavior_incident  group by behavior_incident.incident_type_code  order by count ( behavior_incident.* )  desc limit 1"
  },
  {
    "NatSQL": "select detention.detention_type_code , ref_detention_type.detention_type_description from detention  group by detention.detention_type_code  order by count ( detention.* )  asc limit 1"
  },
  {
    "NatSQL": "select assessment_notes.date_of_notes from assessment_notes  where  students.first_name = \"小夏\" "
  },
  {
    "NatSQL": "select assessment_notes.text_of_notes from assessment_notes  where  teachers.last_name = \"齐\" "
  },
  {
    "NatSQL": "select behavior_incident.date_incident_start , behavior_incident.date_incident_end from behavior_incident  where  students.last_name = \"贺\" "
  },
  {
    "NatSQL": "select detention.datetime_detention_start , detention.datetime_detention_end from detention  where  teachers.last_name = \"范\" "
  },
  {
    "NatSQL": "select student_addresses.address_id , addresses.zip_postcode from addresses  order by student_addresses.monthly_rental desc limit 1"
  },
  {
    "NatSQL": "select students.cell_mobile_number from student_addresses  order by student_addresses.monthly_rental asc limit 1"
  },
  {
    "NatSQL": "select student_addresses.monthly_rental from addresses  where  addresses.state_province_county = \"云南\" "
  },
  {
    "NatSQL": "select students.first_name , students.last_name from addresses  where  addresses.state_province_county = \"陕西\" "
  },
  {
    "NatSQL": "select addresses.line_1 , avg ( student_addresses.monthly_rental )  from addresses  group by student_addresses.address_id "
  },
  {
    "NatSQL": "select addresses.zip_postcode from addresses  where  teachers.first_name = \"小平\" "
  },
  {
    "NatSQL": "select teachers.email_address from addresses  where  addresses.zip_postcode = \"918\" "
  },
  {
    "NatSQL": "select count ( students.* )  from students  where  @.@ not in behavior_incident.* "
  },
  {
    "NatSQL": "select teachers.last_name from teachers  where  except_  @.@ is detention.* "
  },
  {
    "NatSQL": "select addresses.line_1 from addresses  where  @.@ join students.*  and  @.@ join teachers.* "
  },
  {
    "NatSQL": "select assets.asset_id , assets.asset_details from assets  where  count ( asset_parts.* )  = 2  and  count ( fault_log.* )  < 2  group by assets.asset_id "
  },
  {
    "NatSQL": "select count ( assets.* )  , maintenance_contracts.maintenance_contract_id from maintenance_contracts  group by maintenance_contracts.maintenance_contract_id "
  },
  {
    "NatSQL": "select count ( assets.* )  , third_party_companies.company_id from third_party_companies  group by third_party_companies.company_id "
  },
  {
    "NatSQL": "select third_party_companies.company_id , third_party_companies.company_name from third_party_companies  where  count ( maintenance_engineers.* )  >= 2  or  count ( maintenance_contracts.* )  >= 2  group by third_party_companies.company_id "
  },
  {
    "NatSQL": "select staff.staff_name , staff.staff_id from staff  where  @.@ join fault_log.*  except_  @.@ join engineer_visits.* "
  },
  {
    "NatSQL": "select maintenance_engineers.engineer_id , maintenance_engineers.first_name , maintenance_engineers.last_name from maintenance_engineers  group by maintenance_engineers.engineer_id  order by count ( engineer_visits.* )  desc limit 1"
  },
  {
    "NatSQL": "select parts.part_name , parts.part_id from parts  where  count ( part_faults.* )  > 2  group by parts.part_id "
  },
  {
    "NatSQL": "select maintenance_engineers.first_name , maintenance_engineers.last_name , maintenance_engineers.other_details , skills.skill_description from maintenance_engineers "
  },
  {
    "NatSQL": "select part_faults.fault_short_name , skills.skill_description from part_faults "
  },
  {
    "NatSQL": "select parts.part_name , count ( asset_parts.* )  from parts  group by parts.part_name "
  },
  {
    "NatSQL": "select fault_log.fault_description , fault_log_parts.fault_status from fault_log "
  },
  {
    "NatSQL": "select count ( engineer_visits.* )  , fault_log.fault_log_entry_id from fault_log  group by fault_log.fault_log_entry_id  order by count ( engineer_visits.* )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct maintenance_engineers.last_name from maintenance_engineers "
  },
  {
    "NatSQL": "select  distinct fault_log_parts.fault_status from fault_log_parts "
  },
  {
    "NatSQL": "select maintenance_engineers.first_name , maintenance_engineers.last_name from maintenance_engineers  where  @.@ not in engineer_visits.* "
  },
  {
    "NatSQL": "select assets.asset_id , assets.asset_details , assets.asset_make , assets.asset_model from assets "
  },
  {
    "NatSQL": "select assets.asset_acquired_date from assets  order by assets.asset_acquired_date asc limit 1"
  },
  {
    "NatSQL": "select parts.part_id , parts.part_name from parts  group by parts.part_id  order by count ( skills_required_to_fix.* )  desc limit 1"
  },
  {
    "NatSQL": "select parts.part_name from parts  group by parts.part_name  order by count ( part_faults.* )  asc limit 1"
  },
  {
    "NatSQL": "select maintenance_engineers.engineer_id , maintenance_engineers.first_name , maintenance_engineers.last_name from maintenance_engineers  group by maintenance_engineers.engineer_id  order by count ( engineer_visits.* )  asc limit 1"
  },
  {
    "NatSQL": "select staff.staff_name , maintenance_engineers.first_name , maintenance_engineers.last_name from staff "
  },
  {
    "NatSQL": "select fault_log.fault_log_entry_id , fault_log.fault_description , fault_log.fault_log_entry_datetime from fault_log  group by fault_log.fault_log_entry_id  order by count ( fault_log_parts.* )  desc limit 1"
  },
  {
    "NatSQL": "select skills.skill_id , skills.skill_description from skills  group by skills.skill_id  order by count ( skills_required_to_fix.* )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct assets.asset_model from assets "
  },
  {
    "NatSQL": "select assets.asset_make , assets.asset_model , assets.asset_details from assets  order by assets.asset_disposed_date asc"
  },
  {
    "NatSQL": "select parts.part_id , parts.chargeable_amount from parts  order by parts.chargeable_amount asc limit 1"
  },
  {
    "NatSQL": "select third_party_companies.company_name from third_party_companies  order by maintenance_contracts.contract_start_date asc limit 1"
  },
  {
    "NatSQL": "select third_party_companies.company_name from third_party_companies  order by maintenance_contracts.contract_end_date desc limit 1"
  },
  {
    "NatSQL": "select staff.gender from staff  group by staff.gender  order by count ( staff.* )  desc limit 1"
  },
  {
    "NatSQL": "select staff.staff_name , count ( engineer_visits.* )  from staff  group by staff.staff_name "
  },
  {
    "NatSQL": "select assets.asset_model from assets  where  @.@ not in fault_log.* "
  },
  {
    "NatSQL": "select station.local_authority , station.services from station "
  },
  {
    "NatSQL": "select train.train_number , train.name from train  order by train.time asc"
  },
  {
    "NatSQL": "select train.time , train.train_number from train  where  train.destination = \"宿迁\"  order by train.time asc"
  },
  {
    "NatSQL": "select count ( train.* )  from train  where  train.name like \"列车\" "
  },
  {
    "NatSQL": "select train.train_number , train.time from train  where  train.origin = \"宿迁\"  and  train.destination = \"徐州\" "
  },
  {
    "NatSQL": "select train.origin , count ( train.* )  from train  group by train.origin "
  },
  {
    "NatSQL": "select train.name from train  group by route.train_id  order by count ( route.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( route.* )  , station.network_name , station.services from station  group by route.station_id "
  },
  {
    "NatSQL": "select avg ( weekly_weather.high_temperature )  , weekly_weather.day_of_week from weekly_weather  group by weekly_weather.day_of_week "
  },
  {
    "NatSQL": "select max ( weekly_weather.low_temperature )  , avg ( weekly_weather.precipitation )  from weekly_weather  where  station.network_name = \"湖州\" "
  },
  {
    "NatSQL": "select train.name , train.time from station  where  station.local_authority = \"洛阳\" "
  },
  {
    "NatSQL": "select count (  distinct station.services )  from station "
  },
  {
    "NatSQL": "select station.id , station.local_authority from weekly_weather  group by weekly_weather.station_id  order by avg ( weekly_weather.high_temperature )  desc limit 1"
  },
  {
    "NatSQL": "select station.id , station.local_authority from weekly_weather  where  max ( weekly_weather.precipitation )  > 50  group by weekly_weather.station_id "
  },
  {
    "NatSQL": "select min ( weekly_weather.low_temperature )  , max ( weekly_weather.wind_speed_mph )  from weekly_weather "
  },
  {
    "NatSQL": "select train.origin from train  where  count ( train.* )  > 1  group by train.origin "
  },
  {
    "NatSQL": "select count ( professor.* )  from professor  where  department.DEPT_NAME = \"会计学\" "
  },
  {
    "NatSQL": "select count ( professor.* )  from professor  where  department.DEPT_NAME = \"会计学\" "
  },
  {
    "NatSQL": "select count (  distinct class.PROF_NUM )  from class  where  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select count (  distinct class.PROF_NUM )  from class  where  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , employee.EMP_LNAME from professor  where  @.@ join professor.*  and  department.DEPT_NAME = \"生物学\" "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , employee.EMP_LNAME from professor  where  @.@ join professor.*  and  department.DEPT_NAME = \"生物学\" "
  },
  {
    "NatSQL": "select  distinct employee.EMP_FNAME , employee.EMP_DOB from employee  where  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select  distinct employee.EMP_FNAME , employee.EMP_DOB from employee  where  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select count ( class.* )  from employee  where  employee.EMP_LNAME = \"孙\" "
  },
  {
    "NatSQL": "select count ( class.* )  from employee  where  employee.EMP_LNAME = \"孙\" "
  },
  {
    "NatSQL": "select department.SCHOOL_CODE from department  where  department.DEPT_NAME = \"会计学\" "
  },
  {
    "NatSQL": "select department.SCHOOL_CODE from department  where  department.DEPT_NAME = \"会计学\" "
  },
  {
    "NatSQL": "select course.CRS_CREDIT , course.CRS_DESCRIPTION from course  where  course.CRS_CODE = \"哲学\" "
  },
  {
    "NatSQL": "select course.CRS_CREDIT , course.CRS_DESCRIPTION from course  where  course.CRS_CODE = \"哲学\" "
  },
  {
    "NatSQL": "select department.DEPT_ADDRESS from department  where  department.DEPT_NAME = \"旧\" "
  },
  {
    "NatSQL": "select department.DEPT_ADDRESS from department  where  department.DEPT_NAME = \"旧\" "
  },
  {
    "NatSQL": "select count (  distinct department.DEPT_ADDRESS )  from department  where  department.SCHOOL_CODE = \"师范\" "
  },
  {
    "NatSQL": "select count (  distinct department.DEPT_ADDRESS )  from department  where  department.SCHOOL_CODE = \"师范\" "
  },
  {
    "NatSQL": "select count (  distinct department.DEPT_ADDRESS )  , department.SCHOOL_CODE from department  group by department.SCHOOL_CODE "
  },
  {
    "NatSQL": "select count (  distinct department.DEPT_ADDRESS )  , department.SCHOOL_CODE from department  group by department.SCHOOL_CODE "
  },
  {
    "NatSQL": "select course.CRS_CREDIT , course.CRS_DESCRIPTION from course  where  course.CRS_CODE = \"文学\" "
  },
  {
    "NatSQL": "select course.CRS_CREDIT , course.CRS_DESCRIPTION from course  where  course.CRS_CODE = \"文学\" "
  },
  {
    "NatSQL": "select count (  distinct department.DEPT_NAME )  , department.SCHOOL_CODE from department  group by department.SCHOOL_CODE "
  },
  {
    "NatSQL": "select count (  distinct department.DEPT_NAME )  , department.SCHOOL_CODE from department  group by department.SCHOOL_CODE "
  },
  {
    "NatSQL": "select count (  distinct department.DEPT_NAME )  , department.SCHOOL_CODE from department  where  count (  distinct department.DEPT_NAME )  < 5  group by department.SCHOOL_CODE "
  },
  {
    "NatSQL": "select count (  distinct department.DEPT_NAME )  , department.SCHOOL_CODE from department  where  count (  distinct department.DEPT_NAME )  < 5  group by department.SCHOOL_CODE "
  },
  {
    "NatSQL": "select count ( class.* )  , class.CRS_CODE from class  group by class.CRS_CODE "
  },
  {
    "NatSQL": "select count ( class.* )  , class.CRS_CODE from class  group by class.CRS_CODE "
  },
  {
    "NatSQL": "select sum ( course.CRS_CREDIT )  , course.DEPT_CODE from course  group by course.DEPT_CODE "
  },
  {
    "NatSQL": "select sum ( course.CRS_CREDIT )  , course.DEPT_CODE from course  group by course.DEPT_CODE "
  },
  {
    "NatSQL": "select count ( class.* )  , class.CLASS_ROOM from class  where  count ( class.* )  >= 2  group by class.CLASS_ROOM "
  },
  {
    "NatSQL": "select count ( class.* )  , class.CLASS_ROOM from class  where  count ( class.* )  >= 2  group by class.CLASS_ROOM "
  },
  {
    "NatSQL": "select count ( class.* )  , course.DEPT_CODE from class  group by course.DEPT_CODE "
  },
  {
    "NatSQL": "select count ( class.* )  , course.DEPT_CODE from class  group by course.DEPT_CODE "
  },
  {
    "NatSQL": "select count ( class.* )  , department.SCHOOL_CODE from class  group by department.SCHOOL_CODE "
  },
  {
    "NatSQL": "select count ( class.* )  , department.SCHOOL_CODE from class  group by department.SCHOOL_CODE "
  },
  {
    "NatSQL": "select count ( professor.* )  , department.SCHOOL_CODE from department  group by department.SCHOOL_CODE "
  },
  {
    "NatSQL": "select count ( professor.* )  , department.SCHOOL_CODE from department  group by department.SCHOOL_CODE "
  },
  {
    "NatSQL": "select employee.EMP_JOBCODE , count ( employee.* )  from employee  group by employee.EMP_JOBCODE  order by count ( employee.* )  desc limit 1"
  },
  {
    "NatSQL": "select employee.EMP_JOBCODE , count ( employee.* )  from employee  group by employee.EMP_JOBCODE  order by count ( employee.* )  desc limit 1"
  },
  {
    "NatSQL": "select department.SCHOOL_CODE from department  group by department.SCHOOL_CODE  order by count ( professor.* )  asc limit 1"
  },
  {
    "NatSQL": "select department.SCHOOL_CODE from department  group by department.SCHOOL_CODE  order by count ( professor.* )  asc limit 1"
  },
  {
    "NatSQL": "select count ( professor.* )  , professor.DEPT_CODE from professor  where  professor.PROF_HIGH_DEGREE = \"博士\"  group by professor.DEPT_CODE "
  },
  {
    "NatSQL": "select count ( professor.* )  , professor.DEPT_CODE from professor  where  professor.PROF_HIGH_DEGREE = \"博士\"  group by professor.DEPT_CODE "
  },
  {
    "NatSQL": "select count ( student.* )  , student.DEPT_CODE from student  group by student.DEPT_CODE "
  },
  {
    "NatSQL": "select count ( student.* )  , student.DEPT_CODE from student  group by student.DEPT_CODE "
  },
  {
    "NatSQL": "select sum ( student.STU_HRS )  , student.DEPT_CODE from student  group by student.DEPT_CODE "
  },
  {
    "NatSQL": "select sum ( student.STU_HRS )  , student.DEPT_CODE from student  group by student.DEPT_CODE "
  },
  {
    "NatSQL": "select max ( student.STU_GPA )  , avg ( student.STU_GPA )  , min ( student.STU_GPA )  , student.DEPT_CODE from student  group by student.DEPT_CODE "
  },
  {
    "NatSQL": "select max ( student.STU_GPA )  , avg ( student.STU_GPA )  , min ( student.STU_GPA )  , student.DEPT_CODE from student  group by student.DEPT_CODE "
  },
  {
    "NatSQL": "select department.DEPT_NAME , avg ( student.STU_GPA )  from student  group by student.DEPT_CODE  order by avg ( student.STU_GPA )  desc limit 1"
  },
  {
    "NatSQL": "select department.DEPT_NAME , avg ( student.STU_GPA )  from student  group by student.DEPT_CODE  order by avg ( student.STU_GPA )  desc limit 1"
  },
  {
    "NatSQL": "select count (  distinct department.SCHOOL_CODE )  from department "
  },
  {
    "NatSQL": "select count (  distinct department.SCHOOL_CODE )  from department "
  },
  {
    "NatSQL": "select count (  distinct class.CLASS_CODE )  from class "
  },
  {
    "NatSQL": "select count (  distinct class.CLASS_CODE )  from class "
  },
  {
    "NatSQL": "select count (  distinct class.CRS_CODE )  from class "
  },
  {
    "NatSQL": "select count (  distinct class.CRS_CODE )  from class "
  },
  {
    "NatSQL": "select count (  distinct department.DEPT_NAME )  from department "
  },
  {
    "NatSQL": "select count (  distinct department.DEPT_NAME )  from department "
  },
  {
    "NatSQL": "select count ( course.* )  from department  where  department.DEPT_NAME = \"信息系统\" "
  },
  {
    "NatSQL": "select count ( course.* )  from department  where  department.DEPT_NAME = \"信息系统\" "
  },
  {
    "NatSQL": "select count (  distinct class.CLASS_SECTION )  from class  where  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select count (  distinct class.CLASS_SECTION )  from class  where  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select sum ( course.CRS_CREDIT )  , course.DEPT_CODE from course  where  @.@ join class.*  group by course.DEPT_CODE "
  },
  {
    "NatSQL": "select sum ( course.CRS_CREDIT )  , course.DEPT_CODE from course  where  @.@ join class.*  group by course.DEPT_CODE "
  },
  {
    "NatSQL": "select department.DEPT_NAME from course  where  @.@ join class.*  group by course.DEPT_CODE  order by sum ( course.CRS_CREDIT )  desc limit 1"
  },
  {
    "NatSQL": "select department.DEPT_NAME from course  where  @.@ join class.*  group by course.DEPT_CODE  order by sum ( course.CRS_CREDIT )  desc limit 1"
  },
  {
    "NatSQL": "select count ( enroll.* )  from class  where  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select count ( enroll.* )  from class  where  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select student.STU_FNAME from class  where  @.@ join enroll.*  and  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select student.STU_FNAME from class  where  @.@ join enroll.*  and  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select student.STU_FNAME from class  where  class.CRS_CODE = \"美术\"  and  enroll.ENROLL_GRADE = \"C\" "
  },
  {
    "NatSQL": "select student.STU_FNAME from class  where  class.CRS_CODE = \"美术\"  and  enroll.ENROLL_GRADE = \"C\" "
  },
  {
    "NatSQL": "select count ( employee.* )  from employee "
  },
  {
    "NatSQL": "select count ( employee.* )  from employee "
  },
  {
    "NatSQL": "select count ( professor.* )  from professor  where  professor.PROF_HIGH_DEGREE = \"博士\" "
  },
  {
    "NatSQL": "select count ( professor.* )  from professor  where  professor.PROF_HIGH_DEGREE = \"博士\" "
  },
  {
    "NatSQL": "select count ( enroll.* )  from class  where  @.@ join class.*  and  department.DEPT_NAME = \"会计学\" "
  },
  {
    "NatSQL": "select count ( enroll.* )  from class  where  @.@ join class.*  and  department.DEPT_NAME = \"会计学\" "
  },
  {
    "NatSQL": "select department.DEPT_NAME from class  group by course.DEPT_CODE  order by count ( enroll.* )  desc limit 1"
  },
  {
    "NatSQL": "select department.DEPT_NAME from class  group by course.DEPT_CODE  order by count ( enroll.* )  desc limit 1"
  },
  {
    "NatSQL": "select department.DEPT_NAME from department  order by department.DEPT_NAME asc"
  },
  {
    "NatSQL": "select department.DEPT_NAME from department  order by department.DEPT_NAME asc"
  },
  {
    "NatSQL": "select class.CLASS_CODE from class  where  class.CLASS_ROOM = \"KLR209\" "
  },
  {
    "NatSQL": "select class.CLASS_CODE from class  where  class.CLASS_ROOM = \"KLR209\" "
  },
  {
    "NatSQL": "select employee.EMP_FNAME from employee  where  employee.EMP_JOBCODE = \"教授\"  order by employee.EMP_DOB asc"
  },
  {
    "NatSQL": "select employee.EMP_FNAME from employee  where  employee.EMP_JOBCODE = \"教授\"  order by employee.EMP_DOB asc"
  },
  {
    "NatSQL": "select employee.EMP_FNAME , professor.PROF_OFFICE from professor  order by employee.EMP_FNAME asc"
  },
  {
    "NatSQL": "select employee.EMP_FNAME , professor.PROF_OFFICE from professor  order by employee.EMP_FNAME asc"
  },
  {
    "NatSQL": "select employee.EMP_FNAME , employee.EMP_LNAME from employee  order by employee.EMP_DOB asc limit 1"
  },
  {
    "NatSQL": "select employee.EMP_FNAME , employee.EMP_LNAME from employee  order by employee.EMP_DOB asc limit 1"
  },
  {
    "NatSQL": "select student.STU_FNAME , student.STU_LNAME , student.STU_GPA from student  where  student.STU_GPA > 3  order by student.STU_DOB desc limit 1"
  },
  {
    "NatSQL": "select student.STU_FNAME , student.STU_LNAME , student.STU_GPA from student  where  student.STU_GPA > 3  order by student.STU_DOB desc limit 1"
  },
  {
    "NatSQL": "select  distinct student.STU_FNAME from student  where  enroll.ENROLL_GRADE = \"C\" "
  },
  {
    "NatSQL": "select  distinct student.STU_FNAME from student  where  enroll.ENROLL_GRADE = \"C\" "
  },
  {
    "NatSQL": "select department.DEPT_NAME from professor  group by professor.DEPT_CODE  order by count ( professor.* )  asc limit 1"
  },
  {
    "NatSQL": "select department.DEPT_NAME from professor  group by professor.DEPT_CODE  order by count ( professor.* )  asc limit 1"
  },
  {
    "NatSQL": "select department.DEPT_NAME , department.DEPT_CODE from professor  where  professor.PROF_HIGH_DEGREE = \"博士\"  group by professor.DEPT_CODE  order by count ( professor.* )  desc limit 1"
  },
  {
    "NatSQL": "select department.DEPT_NAME , department.DEPT_CODE from professor  where  professor.PROF_HIGH_DEGREE = \"博士\"  group by professor.DEPT_CODE  order by count ( professor.* )  desc limit 1"
  },
  {
    "NatSQL": "select employee.EMP_FNAME from employee  where  employee.EMP_JOBCODE = \"教授\"  except_  @.@ join class.* "
  },
  {
    "NatSQL": "select employee.EMP_FNAME from employee  where  employee.EMP_JOBCODE = \"教授\"  except_  @.@ join class.* "
  },
  {
    "NatSQL": "select employee.EMP_FNAME from employee  where  @.@ join professor.*  and  department.DEPT_NAME = \"旧\"  except_  @.@ join class.* "
  },
  {
    "NatSQL": "select employee.EMP_FNAME from employee  where  @.@ join professor.*  and  department.DEPT_NAME = \"旧\"  except_  @.@ join class.* "
  },
  {
    "NatSQL": "select employee.EMP_LNAME , professor.PROF_OFFICE from employee  where  department.DEPT_NAME = \"旧\" "
  },
  {
    "NatSQL": "select employee.EMP_LNAME , professor.PROF_OFFICE from employee  where  department.DEPT_NAME = \"旧\" "
  },
  {
    "NatSQL": "select department.DEPT_NAME , professor.PROF_OFFICE from employee  where  employee.EMP_LNAME = \"吕\" "
  },
  {
    "NatSQL": "select department.DEPT_NAME , professor.PROF_OFFICE from employee  where  employee.EMP_LNAME = \"吕\" "
  },
  {
    "NatSQL": "select employee.EMP_LNAME , employee.EMP_HIREDATE from employee  where  professor.PROF_OFFICE = \"102号\" "
  },
  {
    "NatSQL": "select employee.EMP_LNAME , employee.EMP_HIREDATE from employee  where  professor.PROF_OFFICE = \"102号\" "
  },
  {
    "NatSQL": "select class.CRS_CODE from class  where  @.@ join enroll.*  and  student.STU_LNAME = \"李\" "
  },
  {
    "NatSQL": "select class.CRS_CODE from class  where  @.@ join enroll.*  and  student.STU_LNAME = \"李\" "
  },
  {
    "NatSQL": "select course.CRS_DESCRIPTION , course.CRS_CREDIT from class  where  @.@ join class.*  and  student.STU_LNAME = \"李\" "
  },
  {
    "NatSQL": "select course.CRS_DESCRIPTION , course.CRS_CREDIT from class  where  @.@ join class.*  and  student.STU_LNAME = \"李\" "
  },
  {
    "NatSQL": "select count ( professor.* )  from professor  where  professor.PROF_HIGH_DEGREE = \"博士\"  or  professor.PROF_HIGH_DEGREE = \"硕士\" "
  },
  {
    "NatSQL": "select count ( professor.* )  from professor  where  professor.PROF_HIGH_DEGREE = \"博士\"  or  professor.PROF_HIGH_DEGREE = \"硕士\" "
  },
  {
    "NatSQL": "select count ( professor.* )  from professor  where  department.DEPT_NAME = \"会计学\"  or  department.DEPT_NAME = \"生物学\" "
  },
  {
    "NatSQL": "select count ( professor.* )  from professor  where  department.DEPT_NAME = \"会计学\"  or  department.DEPT_NAME = \"生物学\" "
  },
  {
    "NatSQL": "select employee.EMP_FNAME from employee  where  class.CRS_CODE = \"哲学\"  and  class.CRS_CODE = \"文学\" "
  },
  {
    "NatSQL": "select employee.EMP_FNAME from employee  where  class.CRS_CODE = \"哲学\"  and  class.CRS_CODE = \"文学\" "
  },
  {
    "NatSQL": "select student.STU_FNAME from student  where  @.@ join enroll.*  and  department.DEPT_NAME = \"会计学\"  and  @.@ join enroll.*  and  department.DEPT_NAME = \"信息系统\" "
  },
  {
    "NatSQL": "select student.STU_FNAME from student  where  @.@ join enroll.*  and  department.DEPT_NAME = \"会计学\"  and  @.@ join enroll.*  and  department.DEPT_NAME = \"信息系统\" "
  },
  {
    "NatSQL": "select avg ( student.STU_GPA )  from enroll  where  @.@ join enroll.*  and  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select avg ( student.STU_GPA )  from enroll  where  @.@ join enroll.*  and  class.CRS_CODE = \"美术\" "
  },
  {
    "NatSQL": "select student.STU_GPA , student.STU_PHONE , student.STU_FNAME from student  order by student.STU_GPA desc limit 5"
  },
  {
    "NatSQL": "select student.STU_GPA , student.STU_PHONE , student.STU_FNAME from student  order by student.STU_GPA desc limit 5"
  },
  {
    "NatSQL": "select department.DEPT_NAME from student  order by student.STU_GPA asc limit 1"
  },
  {
    "NatSQL": "select department.DEPT_NAME from student  order by student.STU_GPA asc limit 1"
  },
  {
    "NatSQL": "select student.STU_FNAME , student.STU_GPA from student  where  @.@ < avg ( student.STU_GPA )  "
  },
  {
    "NatSQL": "select student.STU_FNAME , student.STU_GPA from student  where  @.@ < avg ( student.STU_GPA )  "
  },
  {
    "NatSQL": "select department.DEPT_NAME , department.DEPT_ADDRESS from student  group by student.DEPT_CODE  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select department.DEPT_NAME , department.DEPT_ADDRESS from student  group by student.DEPT_CODE  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select department.DEPT_NAME , department.DEPT_ADDRESS , count ( student.* )  from student  group by student.DEPT_CODE  order by count ( student.* )  desc limit 3"
  },
  {
    "NatSQL": "select department.DEPT_NAME , department.DEPT_ADDRESS , count ( student.* )  from student  group by student.DEPT_CODE  order by count ( student.* )  desc limit 3"
  },
  {
    "NatSQL": "select employee.EMP_FNAME , professor.PROF_OFFICE from employee  where  department.DEPT_NAME = \"旧\"  and  professor.PROF_HIGH_DEGREE = \"博士\" "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , professor.PROF_OFFICE from employee  where  department.DEPT_NAME = \"旧\"  and  professor.PROF_HIGH_DEGREE = \"博士\" "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , class.CRS_CODE from class "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , class.CRS_CODE from class "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , course.CRS_DESCRIPTION from class  where  @.@ join class.* "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , course.CRS_DESCRIPTION from class  where  @.@ join class.* "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , professor.PROF_OFFICE , course.CRS_DESCRIPTION from class "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , professor.PROF_OFFICE , course.CRS_DESCRIPTION from class "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , professor.PROF_OFFICE , course.CRS_DESCRIPTION , department.DEPT_NAME from class  where  @.@ join class.* "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , professor.PROF_OFFICE , course.CRS_DESCRIPTION , department.DEPT_NAME from class  where  @.@ join class.* "
  },
  {
    "NatSQL": "select student.STU_FNAME , student.STU_LNAME , course.CRS_DESCRIPTION from student  where  @.@ join enroll.* "
  },
  {
    "NatSQL": "select student.STU_FNAME , student.STU_LNAME , course.CRS_DESCRIPTION from student  where  @.@ join enroll.* "
  },
  {
    "NatSQL": "select student.STU_FNAME , student.STU_LNAME from student  where  enroll.ENROLL_GRADE = \"C\"  or  enroll.ENROLL_GRADE = \"A\" "
  },
  {
    "NatSQL": "select student.STU_FNAME , student.STU_LNAME from student  where  enroll.ENROLL_GRADE = \"C\"  or  enroll.ENROLL_GRADE = \"A\" "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , class.CLASS_ROOM from class  where  @.@ join professor.*  and  department.DEPT_NAME = \"会计学\" "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , class.CLASS_ROOM from class  where  @.@ join professor.*  and  department.DEPT_NAME = \"会计学\" "
  },
  {
    "NatSQL": "select  distinct employee.EMP_FNAME , professor.PROF_HIGH_DEGREE from class  where  @.@ join class.*  and  department.DEPT_NAME = \"信息系统\" "
  },
  {
    "NatSQL": "select  distinct employee.EMP_FNAME , professor.PROF_HIGH_DEGREE from class  where  @.@ join class.*  and  department.DEPT_NAME = \"信息系统\" "
  },
  {
    "NatSQL": "select student.STU_LNAME from student  where  enroll.ENROLL_GRADE = \"A\"  and  enroll.CLASS_CODE = 10018 "
  },
  {
    "NatSQL": "select student.STU_LNAME from student  where  enroll.ENROLL_GRADE = \"A\"  and  enroll.CLASS_CODE = 10018 "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , professor.PROF_OFFICE from professor  where  professor.PROF_HIGH_DEGREE != \"博士\"  and  department.DEPT_NAME = \"旧\" "
  },
  {
    "NatSQL": "select employee.EMP_FNAME , professor.PROF_OFFICE from professor  where  professor.PROF_HIGH_DEGREE != \"博士\"  and  department.DEPT_NAME = \"旧\" "
  },
  {
    "NatSQL": "select employee.EMP_FNAME from class  where  count ( class.* )  > 1  group by class.PROF_NUM "
  },
  {
    "NatSQL": "select employee.EMP_FNAME from class  where  count ( class.* )  > 1  group by class.PROF_NUM "
  },
  {
    "NatSQL": "select student.STU_FNAME from student  where  count ( enroll.* )  = 1  group by enroll.STU_NUM "
  },
  {
    "NatSQL": "select student.STU_FNAME from student  where  count ( enroll.* )  = 1  group by enroll.STU_NUM "
  },
  {
    "NatSQL": "select department.DEPT_NAME from course  where  course.CRS_DESCRIPTION like \"统计\" "
  },
  {
    "NatSQL": "select department.DEPT_NAME from course  where  course.CRS_DESCRIPTION like \"统计\" "
  },
  {
    "NatSQL": "select student.STU_FNAME from student  where  @.@ join enroll.*  and  class.CRS_CODE = \"美术\"  and  student.STU_LNAME like \"少\" "
  },
  {
    "NatSQL": "select student.STU_FNAME from student  where  @.@ join enroll.*  and  class.CRS_CODE = \"美术\"  and  student.STU_LNAME like \"少\" "
  },
  {
    "NatSQL": "select count ( club.* )  from club "
  },
  {
    "NatSQL": "select count ( club.* )  from club "
  },
  {
    "NatSQL": "select  distinct club.Region from club  order by club.Region asc"
  },
  {
    "NatSQL": "select  distinct club.Region from club  order by club.Region asc"
  },
  {
    "NatSQL": "select avg ( club_rank.Gold )  from club_rank "
  },
  {
    "NatSQL": "select avg ( club_rank.Gold )  from club_rank "
  },
  {
    "NatSQL": "select competition.Competition_type , competition.Country from competition "
  },
  {
    "NatSQL": "select competition.Competition_type , competition.Country from competition "
  },
  {
    "NatSQL": "select  distinct competition.Year from competition  where  competition.Competition_type != \"锦标赛\" "
  },
  {
    "NatSQL": "select  distinct competition.Year from competition  where  competition.Competition_type != \"锦标赛\" "
  },
  {
    "NatSQL": "select max ( club_rank.Silver )  , min ( club_rank.Silver )  from club_rank "
  },
  {
    "NatSQL": "select max ( club_rank.Silver )  , min ( club_rank.Silver )  from club_rank "
  },
  {
    "NatSQL": "select count ( club_rank.* )  from club_rank  where  club_rank.Total < 10 "
  },
  {
    "NatSQL": "select count ( club_rank.* )  from club_rank  where  club_rank.Total < 10 "
  },
  {
    "NatSQL": "select club.name from club  order by club.Start_year asc"
  },
  {
    "NatSQL": "select club.name from club  order by club.Start_year asc"
  },
  {
    "NatSQL": "select club.name from club  order by club.name desc"
  },
  {
    "NatSQL": "select club.name from club  order by club.name desc"
  },
  {
    "NatSQL": "select club.name , player.Player_ID from club "
  },
  {
    "NatSQL": "select club.name , player.Player_ID from club "
  },
  {
    "NatSQL": "select club.name from club  where  player.Position = \"右前锋\" "
  },
  {
    "NatSQL": "select club.name from club  where  player.Position = \"右前锋\" "
  },
  {
    "NatSQL": "select avg ( player.Points )  from club  where  club.name = \"国安\" "
  },
  {
    "NatSQL": "select avg ( player.Points )  from club  where  club.name = \"国安\" "
  },
  {
    "NatSQL": "select player.Position , avg ( player.Points )  from player  group by player.Position "
  },
  {
    "NatSQL": "select player.Position , avg ( player.Points )  from player  group by player.Position "
  },
  {
    "NatSQL": "select player.Position from player  where  avg ( player.Points )  >= 20  group by player.name "
  },
  {
    "NatSQL": "select player.Position from player  where  avg ( player.Points )  >= 20  group by player.name "
  },
  {
    "NatSQL": "select competition.Competition_type , count ( competition.* )  from competition  group by competition.Competition_type "
  },
  {
    "NatSQL": "select competition.Competition_type , count ( competition.* )  from competition  group by competition.Competition_type "
  },
  {
    "NatSQL": "select competition.Competition_type from competition  group by competition.Competition_type  order by count ( competition.* )  desc limit 1"
  },
  {
    "NatSQL": "select competition.Competition_type from competition  group by competition.Competition_type  order by count ( competition.* )  desc limit 1"
  },
  {
    "NatSQL": "select competition.Competition_type from competition  where  count ( competition.* )  <= 5  group by competition.Competition_type "
  },
  {
    "NatSQL": "select competition.Competition_type from competition  where  count ( competition.* )  <= 5  group by competition.Competition_type "
  },
  {
    "NatSQL": "select club.name from club  where  @.@ not in player.* "
  },
  {
    "NatSQL": "select club.name from club  where  @.@ not in player.* "
  },
  {
    "NatSQL": "select player.Position from player  where  player.Points > 20  and  player.Points < 10 "
  },
  {
    "NatSQL": "select player.Position from player  where  player.Points > 20  and  player.Points < 10 "
  },
  {
    "NatSQL": "select sum ( player.Points )  from player "
  },
  {
    "NatSQL": "select sum ( player.Points )  from player "
  },
  {
    "NatSQL": "select count (  distinct player.Position )  from player "
  },
  {
    "NatSQL": "select count (  distinct player.Position )  from player "
  },
  {
    "NatSQL": "select player.name from player  where  @.@ > avg ( player.Points )  "
  },
  {
    "NatSQL": "select player.name from player  where  @.@ > avg ( player.Points )  "
  },
  {
    "NatSQL": "select count ( player.* )  , player.Position from player  where  player.Points < 30  group by player.Position "
  },
  {
    "NatSQL": "select count ( player.* )  , player.Position from player  where  player.Points < 30  group by player.Position "
  },
  {
    "NatSQL": "select competition.Country from competition  where  competition.Competition_type = \"锦标赛\"  group by competition.Country  order by count ( competition.* )  desc limit 1"
  },
  {
    "NatSQL": "select competition.Country from competition  where  competition.Competition_type = \"锦标赛\"  group by competition.Country  order by count ( competition.* )  desc limit 1"
  },
  {
    "NatSQL": "select competition.Country from competition  where  competition.Competition_type = \"友谊型\"  and  competition.Competition_type = \"锦标赛\" "
  },
  {
    "NatSQL": "select competition.Country from competition  where  competition.Competition_type = \"友谊型\"  and  competition.Competition_type = \"锦标赛\" "
  },
  {
    "NatSQL": "select competition.Country from competition  where  except_  @.@ is competition.*  and  competition.Competition_type = \"友谊型\" "
  },
  {
    "NatSQL": "select competition.Country from competition  where  except_  @.@ is competition.*  and  competition.Competition_type = \"友谊型\" "
  },
  {
    "NatSQL": "select sum ( furniture.Num_of_Component )  from furniture "
  },
  {
    "NatSQL": "select furniture.Name , furniture.Furniture_ID from furniture  order by furniture.Market_Rate desc limit 1"
  },
  {
    "NatSQL": "select sum ( furniture.Market_Rate )  from furniture  order by furniture.Market_Rate desc limit 2"
  },
  {
    "NatSQL": "select furniture.Num_of_Component , furniture.Name from furniture  where  furniture.Num_of_Component > 10 "
  },
  {
    "NatSQL": "select furniture.Name , furniture.Num_of_Component from furniture  order by furniture.Market_Rate asc limit 1"
  },
  {
    "NatSQL": "select furniture.Name from furniture  where  @.@ < max ( furniture_manufacte.Price_in_Dollar )  "
  },
  {
    "NatSQL": "select manufacturer.Open_Year , manufacturer.Name from manufacturer  order by manufacturer.Num_of_Shops desc limit 1"
  },
  {
    "NatSQL": "select avg ( manufacturer.Num_of_Factories )  from manufacturer  where  manufacturer.Num_of_Shops > 20 "
  },
  {
    "NatSQL": "select manufacturer.Name , manufacturer.Manufacturer_ID from manufacturer  order by manufacturer.Open_Year asc"
  },
  {
    "NatSQL": "select manufacturer.Name , manufacturer.Open_Year from manufacturer  where  manufacturer.Num_of_Shops > 10  or  manufacturer.Num_of_Factories < 10 "
  },
  {
    "NatSQL": "select max ( manufacturer.Num_of_Shops )  , avg ( manufacturer.Num_of_Factories )  from manufacturer  where  manufacturer.Open_Year < 1990 "
  },
  {
    "NatSQL": "select manufacturer.Manufacturer_ID , manufacturer.Num_of_Shops from manufacturer  order by furniture_manufacte.Price_in_Dollar desc limit 1"
  },
  {
    "NatSQL": "select count ( furniture_manufacte.* )  , manufacturer.Name from manufacturer  group by manufacturer.Manufacturer_ID "
  },
  {
    "NatSQL": "select furniture.Name , furniture_manufacte.Price_in_Dollar from furniture "
  },
  {
    "NatSQL": "select furniture.Market_Rate , furniture.Name from furniture  where  @.@ not in furniture_manufacte.* "
  },
  {
    "NatSQL": "select manufacturer.Name from furniture  where  furniture.Num_of_Component < 6  and  furniture.Num_of_Component > 10 "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , departments.DEPARTMENT_NAME from employees "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , departments.DEPARTMENT_NAME from employees "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY from employees  where  employees.SALARY < 6000 "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY from employees  where  employees.SALARY < 6000 "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.DEPARTMENT_ID from employees  where  employees.LAST_NAME = \"何\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.DEPARTMENT_ID from employees  where  employees.LAST_NAME = \"何\" "
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.DEPARTMENT_ID = \"空\" "
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.DEPARTMENT_ID = \"空\" "
  },
  {
    "NatSQL": "select departments.* from departments  where  departments.DEPARTMENT_NAME = \"市场\" "
  },
  {
    "NatSQL": "select departments.* from departments  where  departments.DEPARTMENT_NAME = \"市场\" "
  },
  {
    "NatSQL": "select employees.HIRE_DATE from employees  where  employees.FIRST_NAME not like \"男\" "
  },
  {
    "NatSQL": "select employees.HIRE_DATE from employees  where  employees.FIRST_NAME not like \"男\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.HIRE_DATE , employees.SALARY , employees.DEPARTMENT_ID from employees  where  employees.FIRST_NAME not like \"男\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.HIRE_DATE , employees.SALARY , employees.DEPARTMENT_ID from employees  where  employees.FIRST_NAME not like \"男\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.HIRE_DATE , employees.SALARY , employees.DEPARTMENT_ID from employees  where  employees.FIRST_NAME not like \"男\"  order by employees.DEPARTMENT_ID asc"
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.HIRE_DATE , employees.SALARY , employees.DEPARTMENT_ID from employees  where  employees.FIRST_NAME not like \"男\"  order by employees.DEPARTMENT_ID asc"
  },
  {
    "NatSQL": "select employees.PHONE_NUMBER from employees  where  employees.SALARY between 8000 and 12000 "
  },
  {
    "NatSQL": "select employees.PHONE_NUMBER from employees  where  employees.SALARY between 8000 and 12000 "
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.SALARY between 8000 and 12000  and  employees.COMMISSION_PCT != \"空\"  or  employees.DEPARTMENT_ID != 40 "
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.SALARY between 8000 and 12000  and  employees.COMMISSION_PCT != \"空\"  or  employees.DEPARTMENT_ID != 40 "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY from employees  where  employees.COMMISSION_PCT = \"空\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY from employees  where  employees.COMMISSION_PCT = \"空\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY from employees  where  employees.FIRST_NAME like \"明\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY from employees  where  employees.FIRST_NAME like \"明\" "
  },
  {
    "NatSQL": "select employees.JOB_ID , employees.HIRE_DATE from employees  where  employees.HIRE_DATE between \"2007-11-05\" and \"2009-07-05\" "
  },
  {
    "NatSQL": "select employees.JOB_ID , employees.HIRE_DATE from employees  where  employees.HIRE_DATE between \"2007-11-05\" and \"2009-07-05\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME from employees  where  employees.DEPARTMENT_ID = 70  or  employees.DEPARTMENT_ID = 90 "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME from employees  where  employees.DEPARTMENT_ID = 70  or  employees.DEPARTMENT_ID = 90 "
  },
  {
    "NatSQL": "select employees.SALARY , employees.MANAGER_ID from employees  where  employees.MANAGER_ID != \"空\" "
  },
  {
    "NatSQL": "select employees.SALARY , employees.MANAGER_ID from employees  where  employees.MANAGER_ID != \"空\" "
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.HIRE_DATE < \"2002-06-21\" "
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.HIRE_DATE < \"2002-06-21\" "
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.FIRST_NAME like \"安\"  or  employees.FIRST_NAME like \"S\"  order by employees.SALARY desc"
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.FIRST_NAME like \"安\"  or  employees.FIRST_NAME like \"S\"  order by employees.SALARY desc"
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.HIRE_DATE > \"1987-09-07\" "
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.HIRE_DATE > \"1987-09-07\" "
  },
  {
    "NatSQL": "select jobs.JOB_TITLE from jobs  where  jobs.MIN_SALARY > 9000 "
  },
  {
    "NatSQL": "select jobs.JOB_TITLE from jobs  where  jobs.MIN_SALARY > 9000 "
  },
  {
    "NatSQL": "select jobs.JOB_TITLE , jobs.MAX_SALARY - jobs.MIN_SALARY from jobs  where  jobs.MAX_SALARY between 12000 and 18000 "
  },
  {
    "NatSQL": "select jobs.JOB_TITLE , jobs.MAX_SALARY - jobs.MIN_SALARY from jobs  where  jobs.MAX_SALARY between 12000 and 18000 "
  },
  {
    "NatSQL": "select employees.EMAIL from employees  where  employees.COMMISSION_PCT = \"空\"  and  employees.SALARY between 7000 and 12000  and  employees.DEPARTMENT_ID = 50 "
  },
  {
    "NatSQL": "select employees.EMAIL from employees  where  employees.COMMISSION_PCT = \"空\"  and  employees.SALARY between 7000 and 12000  and  employees.DEPARTMENT_ID = 50 "
  },
  {
    "NatSQL": "select job_history.EMPLOYEE_ID , max ( job_history.END_DATE )  from job_history  group by job_history.EMPLOYEE_ID "
  },
  {
    "NatSQL": "select job_history.EMPLOYEE_ID , max ( job_history.END_DATE )  from job_history  group by job_history.EMPLOYEE_ID "
  },
  {
    "NatSQL": "select employees.DEPARTMENT_ID from employees  where  count ( employees.COMMISSION_PCT )  > 10  group by employees.DEPARTMENT_ID "
  },
  {
    "NatSQL": "select employees.DEPARTMENT_ID from employees  where  count ( employees.COMMISSION_PCT )  > 10  group by employees.DEPARTMENT_ID "
  },
  {
    "NatSQL": "select  distinct employees.DEPARTMENT_ID from employees  where  count ( employees.EMPLOYEE_ID )  >= 4  group by employees.DEPARTMENT_ID , employees.MANAGER_ID "
  },
  {
    "NatSQL": "select  distinct employees.DEPARTMENT_ID from employees  where  count ( employees.EMPLOYEE_ID )  >= 4  group by employees.DEPARTMENT_ID , employees.MANAGER_ID "
  },
  {
    "NatSQL": "select employees.DEPARTMENT_ID , avg ( employees.SALARY )  from employees  where  employees.COMMISSION_PCT != \"空\"  group by employees.DEPARTMENT_ID "
  },
  {
    "NatSQL": "select employees.DEPARTMENT_ID , avg ( employees.SALARY )  from employees  where  employees.COMMISSION_PCT != \"空\"  group by employees.DEPARTMENT_ID "
  },
  {
    "NatSQL": "select locations.COUNTRY_ID , count ( locations.* )  from locations  group by locations.COUNTRY_ID "
  },
  {
    "NatSQL": "select locations.COUNTRY_ID , count ( locations.* )  from locations  group by locations.COUNTRY_ID "
  },
  {
    "NatSQL": "select job_history.JOB_ID from job_history  where  job_history.END_DATE - job_history.START_DATE > 300  and  count ( job_history.* )  >= 2  group by job_history.JOB_ID "
  },
  {
    "NatSQL": "select job_history.JOB_ID from job_history  where  job_history.END_DATE - job_history.START_DATE > 300  and  count ( job_history.* )  >= 2  group by job_history.JOB_ID "
  },
  {
    "NatSQL": "select job_history.EMPLOYEE_ID from job_history  where  count ( job_history.* )  >= 2  group by job_history.EMPLOYEE_ID "
  },
  {
    "NatSQL": "select job_history.EMPLOYEE_ID from job_history  where  count ( job_history.* )  >= 2  group by job_history.EMPLOYEE_ID "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , countries.COUNTRY_NAME from employees "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , countries.COUNTRY_NAME from employees "
  },
  {
    "NatSQL": "select departments.DEPARTMENT_NAME , count ( employees.* )  from employees  group by departments.DEPARTMENT_NAME "
  },
  {
    "NatSQL": "select departments.DEPARTMENT_NAME , count ( employees.* )  from employees  group by departments.DEPARTMENT_NAME "
  },
  {
    "NatSQL": "select job_history.* from job_history  where  employees.SALARY >= 12000 "
  },
  {
    "NatSQL": "select job_history.* from job_history  where  employees.SALARY >= 12000 "
  },
  {
    "NatSQL": "select jobs.JOB_TITLE , avg ( employees.SALARY )  from employees  group by jobs.JOB_TITLE "
  },
  {
    "NatSQL": "select jobs.JOB_TITLE , avg ( employees.SALARY )  from employees  group by jobs.JOB_TITLE "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME from employees  where  @.@ > employees.SALARY  and  employees.EMPLOYEE_ID = 163 "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME from employees  where  @.@ > employees.SALARY  and  employees.EMPLOYEE_ID = 163 "
  },
  {
    "NatSQL": "select min ( employees.SALARY )  , employees.DEPARTMENT_ID from employees  group by employees.DEPARTMENT_ID "
  },
  {
    "NatSQL": "select min ( employees.SALARY )  , employees.DEPARTMENT_ID from employees  group by employees.DEPARTMENT_ID "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.DEPARTMENT_ID from employees  where  @.@ in min ( employees.SALARY )  "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.DEPARTMENT_ID from employees  where  employees.SALARY in min ( employees.SALARY )  "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID from employees  where  @.@ > avg ( employees.SALARY )  "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID from employees  where  @.@ > avg ( employees.SALARY )  "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , employees.SALARY from employees  where  @.@ = employees.EMPLOYEE_ID  and  employees.FIRST_NAME = \"王总\" "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , employees.SALARY from employees  where  @.@ = employees.EMPLOYEE_ID  and  employees.FIRST_NAME = \"王总\" "
  },
  {
    "NatSQL": "select  distinct departments.DEPARTMENT_NAME from employees  where  @.@ join employees.* "
  },
  {
    "NatSQL": "select  distinct departments.DEPARTMENT_NAME from employees  where  @.@ join employees.* "
  },
  {
    "NatSQL": "select  distinct employees.* from employees  where  @.@ join departments.*  and  employees.EMPLOYEE_ID = departments.MANAGER_ID "
  },
  {
    "NatSQL": "select  distinct employees.* from employees  where  @.@ join departments.*  and  employees.EMPLOYEE_ID = departments.MANAGER_ID "
  },
  {
    "NatSQL": "select departments.* from departments  where  departments.DEPARTMENT_NAME = \"市场\" "
  },
  {
    "NatSQL": "select departments.* from departments  where  departments.DEPARTMENT_NAME = \"市场\" "
  },
  {
    "NatSQL": "select job_history.EMPLOYEE_ID from job_history  where  count ( job_history.* )  >= 2  group by job_history.EMPLOYEE_ID "
  },
  {
    "NatSQL": "select job_history.EMPLOYEE_ID from job_history  where  count ( job_history.* )  >= 2  group by job_history.EMPLOYEE_ID "
  },
  {
    "NatSQL": "select  distinct employees.DEPARTMENT_ID from employees  where  count ( employees.EMPLOYEE_ID )  >= 4  group by employees.DEPARTMENT_ID , employees.MANAGER_ID "
  },
  {
    "NatSQL": "select  distinct employees.DEPARTMENT_ID from employees  where  count ( employees.EMPLOYEE_ID )  >= 4  group by employees.DEPARTMENT_ID , employees.MANAGER_ID "
  },
  {
    "NatSQL": "select employees.JOB_ID from employees  where  avg ( employees.SALARY )  > 8000  group by employees.JOB_ID "
  },
  {
    "NatSQL": "select employees.JOB_ID from employees  where  avg ( employees.SALARY )  > 8000  group by employees.JOB_ID "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , jobs.JOB_TITLE from employees  where  employees.DEPARTMENT_ID = 80 "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , jobs.JOB_TITLE from employees  where  employees.DEPARTMENT_ID = 80 "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.JOB_ID from employees  where  departments.DEPARTMENT_NAME = \"财务\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.JOB_ID from employees  where  departments.DEPARTMENT_NAME = \"财务\" "
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.SALARY <= 2500  and  @.@ >= min ( employees.SALARY )  "
  },
  {
    "NatSQL": "select employees.* from employees  where  employees.SALARY <= 2500  and  @.@ >= min ( employees.SALARY )  "
  },
  {
    "NatSQL": "select employees.* from employees  where  @.@ not in departments.*  and  departments.MANAGER_ID between 100 and 200 "
  },
  {
    "NatSQL": "select employees.* from employees  where  @.@ not in departments.*  and  departments.MANAGER_ID between 100 and 200 "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.HIRE_DATE from employees  where  @.@ = employees.DEPARTMENT_ID  and  employees.FIRST_NAME = \"明明\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.HIRE_DATE from employees  where  @.@ = employees.DEPARTMENT_ID  and  employees.FIRST_NAME = \"明明\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.HIRE_DATE from employees  where  employees.FIRST_NAME != \"明明\"  and  @.@ = employees.DEPARTMENT_ID  and  employees.FIRST_NAME = \"明明\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.HIRE_DATE from employees  where  employees.FIRST_NAME != \"明明\"  and  @.@ = employees.DEPARTMENT_ID  and  employees.FIRST_NAME = \"明明\" "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , employees.FIRST_NAME , employees.LAST_NAME from employees  where  @.@ in employees.DEPARTMENT_ID  and  employees.FIRST_NAME like \"洋\" "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , employees.FIRST_NAME , employees.LAST_NAME from employees  where  @.@ in employees.DEPARTMENT_ID  and  employees.FIRST_NAME like \"洋\" "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY from employees  where  @.@ > avg ( employees.SALARY )   and  @.@ in employees.DEPARTMENT_ID  and  employees.FIRST_NAME like \"江\" "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY from employees  where  @.@ > avg ( employees.SALARY )   and  @.@ in employees.DEPARTMENT_ID  and  employees.FIRST_NAME like \"江\" "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , employees.JOB_ID from employees  where  @.@ < min ( employees.SALARY )   and  employees.JOB_ID = \"机械工人\" "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , employees.JOB_ID from employees  where  @.@ < min ( employees.SALARY )   and  employees.JOB_ID = \"机械工人\" "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , employees.FIRST_NAME , employees.LAST_NAME , employees.JOB_ID from employees  where  @.@ > max ( employees.SALARY )   and  employees.JOB_ID = \"工程师\" "
  },
  {
    "NatSQL": "select employees.EMPLOYEE_ID , employees.FIRST_NAME , employees.LAST_NAME , employees.JOB_ID from employees  where  @.@ > max ( employees.SALARY )   and  employees.JOB_ID = \"工程师\" "
  },
  {
    "NatSQL": "select employees.DEPARTMENT_ID , sum ( employees.SALARY )  from employees  where  count ( employees.* )  >= 2  group by employees.DEPARTMENT_ID "
  },
  {
    "NatSQL": "select employees.DEPARTMENT_ID , sum ( employees.SALARY )  from employees  where  count ( employees.* )  >= 2  group by employees.DEPARTMENT_ID "
  },
  {
    "NatSQL": "select employees.* from employees  where  @.@ not in job_history.* "
  },
  {
    "NatSQL": "select employees.* from employees  where  @.@ not in job_history.* "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY , employees.DEPARTMENT_ID , max ( employees.SALARY )  from employees  group by employees.DEPARTMENT_ID "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY , employees.DEPARTMENT_ID , max ( employees.SALARY )  from employees  group by employees.DEPARTMENT_ID "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , departments.DEPARTMENT_NAME , locations.CITY , locations.STATE_PROVINCE from employees "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , departments.DEPARTMENT_NAME , locations.CITY , locations.STATE_PROVINCE from employees "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , locations.CITY from employees  where  @.@ join departments.*  and  employees.FIRST_NAME like \"文\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , locations.CITY from employees  where  @.@ join departments.*  and  employees.FIRST_NAME like \"文\" "
  },
  {
    "NatSQL": "select departments.DEPARTMENT_NAME , locations.CITY , locations.STATE_PROVINCE from departments "
  },
  {
    "NatSQL": "select departments.DEPARTMENT_NAME , locations.CITY , locations.STATE_PROVINCE from departments "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.EMPLOYEE_ID , countries.COUNTRY_NAME from employees "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.EMPLOYEE_ID , countries.COUNTRY_NAME from employees "
  },
  {
    "NatSQL": "select departments.DEPARTMENT_NAME , count ( employees.* )  from employees  group by departments.DEPARTMENT_NAME "
  },
  {
    "NatSQL": "select departments.DEPARTMENT_NAME , count ( employees.* )  from employees  group by departments.DEPARTMENT_NAME "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY from employees  where  @.@ join departments.*  and  locations.CITY = \"北京\" "
  },
  {
    "NatSQL": "select employees.FIRST_NAME , employees.LAST_NAME , employees.SALARY from employees  where  @.@ join departments.*  and  locations.CITY = \"北京\" "
  },
  {
    "NatSQL": "select song.song_name , song.releasedate from song  order by song.releasedate desc limit 1"
  },
  {
    "NatSQL": "select song.song_name , song.releasedate from song  order by song.releasedate desc limit 1"
  },
  {
    "NatSQL": "select files.f_id from files  order by files.duration desc limit 1"
  },
  {
    "NatSQL": "select files.f_id from files  order by files.duration desc limit 1"
  },
  {
    "NatSQL": "select song.song_name from song  where  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select song.song_name from song  where  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select files.f_id from files  where  files.formats = \"mp3\" "
  },
  {
    "NatSQL": "select files.f_id from files  where  files.formats = \"mp3\" "
  },
  {
    "NatSQL": "select  distinct artist.artist_name , artist.country from artist  where  song.rating > 9 "
  },
  {
    "NatSQL": "select  distinct artist.artist_name , artist.country from artist  where  song.rating > 9 "
  },
  {
    "NatSQL": "select  distinct files.file_size , files.formats from files  where  song.resolution < 800 "
  },
  {
    "NatSQL": "select  distinct files.file_size , files.formats from files  where  song.resolution < 800 "
  },
  {
    "NatSQL": "select song.artist_name from song  order by files.duration asc limit 1"
  },
  {
    "NatSQL": "select song.artist_name from song  order by files.duration asc limit 1"
  },
  {
    "NatSQL": "select artist.artist_name , artist.country from artist  order by song.rating desc limit 3"
  },
  {
    "NatSQL": "select artist.artist_name , artist.country from artist  order by song.rating desc limit 3"
  },
  {
    "NatSQL": "select count ( files.* )  from files  where  files.duration like \"4:%\" "
  },
  {
    "NatSQL": "select count ( files.* )  from files  where  files.duration like \"4:%\" "
  },
  {
    "NatSQL": "select count ( artist.* )  from artist  where  artist.country = \"孟加拉国\" "
  },
  {
    "NatSQL": "select count ( artist.* )  from artist  where  artist.country = \"孟加拉国\" "
  },
  {
    "NatSQL": "select avg ( song.rating )  from artist  where  artist.gender = \"女\" "
  },
  {
    "NatSQL": "select avg ( song.rating )  from artist  where  artist.gender = \"女\" "
  },
  {
    "NatSQL": "select files.formats from files  group by files.formats  order by count ( files.* )  desc limit 1"
  },
  {
    "NatSQL": "select files.formats from files  group by files.formats  order by count ( files.* )  desc limit 1"
  },
  {
    "NatSQL": "select artist.artist_name from artist  where  artist.country = \"英国\"  and  @.@ in song.artist_name  and  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select artist.artist_name from artist  where  artist.country = \"英国\"  and  @.@ in song.artist_name  and  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select files.f_id from files  where  files.formats = \"mp4\"  and  song.resolution < 1000 "
  },
  {
    "NatSQL": "select files.f_id from files  where  files.formats = \"mp4\"  and  song.resolution < 1000 "
  },
  {
    "NatSQL": "select artist.country from artist  where  artist.gender = \"女\"  and  song.languages = \"孟加拉语\" "
  },
  {
    "NatSQL": "select artist.country from artist  where  artist.gender = \"女\"  and  song.languages = \"孟加拉语\" "
  },
  {
    "NatSQL": "select avg ( files.duration )  from files  where  files.formats = \"mp3\"  and  song.resolution < 800 "
  },
  {
    "NatSQL": "select avg ( files.duration )  from files  where  files.formats = \"mp3\"  and  song.resolution < 800 "
  },
  {
    "NatSQL": "select count ( artist.* )  , artist.gender from artist  group by artist.gender "
  },
  {
    "NatSQL": "select count ( artist.* )  , artist.gender from artist  group by artist.gender "
  },
  {
    "NatSQL": "select avg ( song.rating )  , song.languages from song  group by song.languages "
  },
  {
    "NatSQL": "select avg ( song.rating )  , song.languages from song  group by song.languages "
  },
  {
    "NatSQL": "select artist.gender , artist.artist_name from artist  order by song.resolution asc limit 1"
  },
  {
    "NatSQL": "select artist.gender , artist.artist_name from artist  order by song.resolution asc limit 1"
  },
  {
    "NatSQL": "select count ( files.* )  , files.formats from files  group by files.formats "
  },
  {
    "NatSQL": "select count ( files.* )  , files.formats from files  group by files.formats "
  },
  {
    "NatSQL": "select  distinct song.song_name from song  where  @.@ > min ( song.resolution )   and  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select  distinct song.song_name from song  where  @.@ > min ( song.resolution )   and  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select song.song_name from song  where  @.@ < max ( song.rating )   and  song.genre_is = \"蓝调\" "
  },
  {
    "NatSQL": "select song.song_name from song  where  @.@ < max ( song.rating )   and  song.genre_is = \"蓝调\" "
  },
  {
    "NatSQL": "select artist.artist_name , artist.country from artist  where  song.song_name like \"爱\" "
  },
  {
    "NatSQL": "select artist.artist_name , artist.country from artist  where  song.song_name like \"爱\" "
  },
  {
    "NatSQL": "select artist.artist_name , artist.gender from artist  where  song.releasedate like \"三月\" "
  },
  {
    "NatSQL": "select artist.artist_name , artist.gender from artist  where  song.releasedate like \"三月\" "
  },
  {
    "NatSQL": "select genre.g_name , genre.rating from genre  order by genre.g_name asc"
  },
  {
    "NatSQL": "select genre.g_name , genre.rating from genre  order by genre.g_name asc"
  },
  {
    "NatSQL": "select song.song_name from song  order by song.resolution asc"
  },
  {
    "NatSQL": "select song.song_name from song  order by song.resolution asc"
  },
  {
    "NatSQL": "select files.f_id from files  where  files.formats = \"mp4\"  or  @.@ in song.*  and  song.resolution > 720 "
  },
  {
    "NatSQL": "select files.f_id from files  where  files.formats = \"mp4\"  or  song.resolution > 720 "
  },
  {
    "NatSQL": "select song.song_name from files  where  files.duration like \"4:%\"  or  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select song.song_name from files  where  files.duration like \"4:%\"  or  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select song.languages from song  group by song.languages  order by count ( song.* )  desc limit 1"
  },
  {
    "NatSQL": "select song.languages from song  group by song.languages  order by count ( song.* )  desc limit 1"
  },
  {
    "NatSQL": "select song.artist_name from song  where  song.resolution > 500  group by song.languages  order by count ( song.* )  desc limit 1"
  },
  {
    "NatSQL": "select song.artist_name from song  where  song.resolution > 500  group by song.languages  order by count ( song.* )  desc limit 1"
  },
  {
    "NatSQL": "select artist.artist_name from artist  where  artist.country = \"英国\"  and  artist.gender = \"男\" "
  },
  {
    "NatSQL": "select artist.artist_name from artist  where  artist.country = \"英国\"  and  artist.gender = \"男\" "
  },
  {
    "NatSQL": "select song.song_name from song  where  song.genre_is = \"现代\"  or  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select song.song_name from song  where  song.genre_is = \"现代\"  or  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select song.song_name from files  where  files.formats = \"mp3\"  and  song.resolution < 1000 "
  },
  {
    "NatSQL": "select song.song_name from files  where  files.formats = \"mp3\"  and  song.resolution < 1000 "
  },
  {
    "NatSQL": "select artist.artist_name from artist  where  artist.country = \"英国\"  and  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select artist.artist_name from artist  where  artist.country = \"英国\"  and  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select avg ( song.rating )  , avg ( song.resolution )  from song  where  song.languages = \"孟加拉语\" "
  },
  {
    "NatSQL": "select avg ( song.rating )  , avg ( song.resolution )  from song  where  song.languages = \"孟加拉语\" "
  },
  {
    "NatSQL": "select max ( song.resolution )  , min ( song.resolution )  from files  where  files.duration like \"3:%\" "
  },
  {
    "NatSQL": "select max ( song.resolution )  , min ( song.resolution )  from files  where  files.duration like \"3:%\" "
  },
  {
    "NatSQL": "select max ( files.duration )  , max ( song.resolution )  , song.languages from files  group by song.languages  order by song.languages asc"
  },
  {
    "NatSQL": "select max ( files.duration )  , max ( song.resolution )  , song.languages from files  group by song.languages  order by song.languages asc"
  },
  {
    "NatSQL": "select min ( files.duration )  , min ( song.rating )  , song.genre_is from files  group by song.genre_is  order by song.genre_is asc"
  },
  {
    "NatSQL": "select min ( files.duration )  , min ( song.rating )  , song.genre_is from files  group by song.genre_is  order by song.genre_is asc"
  },
  {
    "NatSQL": "select artist.artist_name , count ( artist.* )  from artist  where  song.languages = \"英文\"  and  count ( artist.* )  >= 1  group by song.artist_name "
  },
  {
    "NatSQL": "select artist.artist_name , count ( artist.* )  from artist  where  song.languages = \"英文\"  and  count ( artist.* )  >= 1  group by song.artist_name "
  },
  {
    "NatSQL": "select artist.artist_name , artist.country from artist  where  song.resolution > 900  and  count ( artist.* )  >= 1  group by song.artist_name "
  },
  {
    "NatSQL": "select artist.artist_name , artist.country from artist  where  song.resolution > 900  and  count ( artist.* )  >= 1  group by song.artist_name "
  },
  {
    "NatSQL": "select artist.artist_name , count ( song.* )  from artist  group by song.artist_name  order by count ( song.* )  desc limit 3"
  },
  {
    "NatSQL": "select artist.artist_name , count ( song.* )  from artist  group by song.artist_name  order by count ( song.* )  desc limit 3"
  },
  {
    "NatSQL": "select artist.country from artist  group by song.artist_name  order by count ( song.* )  asc limit 1"
  },
  {
    "NatSQL": "select artist.country from artist  group by song.artist_name  order by count ( song.* )  asc limit 1"
  },
  {
    "NatSQL": "select song.song_name from song  where  @.@ < min ( song.rating )   and  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select song.song_name from song  where  @.@ < min ( song.rating )   and  song.languages = \"英文\" "
  },
  {
    "NatSQL": "select song.f_id from song  where  @.@ > max ( song.resolution )   and  song.rating < 8 "
  },
  {
    "NatSQL": "select song.f_id from song  where  @.@ > max ( song.resolution )   and  song.rating < 8 "
  },
  {
    "NatSQL": "select song.f_id from song  where  @.@ > avg ( song.resolution )   and  song.genre_is = \"现代\" "
  },
  {
    "NatSQL": "select song.f_id from song  where  @.@ > avg ( song.resolution )   and  song.genre_is = \"现代\" "
  },
  {
    "NatSQL": "select artist.artist_name from artist  where  song.languages = \"孟加拉语\"  group by song.artist_name  order by count ( artist.* )  desc limit 3"
  },
  {
    "NatSQL": "select artist.artist_name from artist  where  song.languages = \"孟加拉语\"  group by song.artist_name  order by count ( artist.* )  desc limit 3"
  },
  {
    "NatSQL": "select song.f_id , song.genre_is , song.artist_name from song  where  song.languages = \"英文\"  order by song.rating asc"
  },
  {
    "NatSQL": "select song.f_id , song.genre_is , song.artist_name from song  where  song.languages = \"英文\"  order by song.rating asc"
  },
  {
    "NatSQL": "select files.duration , files.file_size , files.formats from files  where  song.genre_is = \"流行\"  order by song.song_name asc"
  },
  {
    "NatSQL": "select files.duration , files.file_size , files.formats from files  where  song.genre_is = \"流行\"  order by song.song_name asc"
  },
  {
    "NatSQL": "select  distinct song.artist_name from song  where  song.languages = \"英文\"  except_  song.rating > 8 "
  },
  {
    "NatSQL": "select  distinct song.artist_name from song  where  song.languages = \"英文\"  except_  song.rating > 8 "
  },
  {
    "NatSQL": "select  distinct artist.artist_name from artist  where  artist.country = \"孟加拉国\"  except_  song.rating > 7 "
  },
  {
    "NatSQL": "select  distinct artist.artist_name from artist  where  artist.country = \"孟加拉国\"  except_  song.rating > 7 "
  },
  {
    "NatSQL": "select college.name_full , college.college_id from college  group by college.college_id  order by count ( player_college.* )  desc limit 1"
  },
  {
    "NatSQL": "select college.name_full , college.college_id from college  group by college.college_id  order by count ( player_college.* )  desc limit 1"
  },
  {
    "NatSQL": "select avg ( salary.salary )  from salary  where  team.name = \"广州恒大队\" "
  },
  {
    "NatSQL": "select avg ( salary.salary )  from salary  where  team.name = \"广州恒大队\" "
  },
  {
    "NatSQL": "select player.name_first , player.name_last from player  where  all_star.year = 1998 "
  },
  {
    "NatSQL": "select player.name_first , player.name_last from player  where  all_star.year = 1998 "
  },
  {
    "NatSQL": "select player.name_first , player.name_last , player.player_id , count ( all_star.* )  from player  group by player.player_id  order by count ( all_star.* )  desc limit 1"
  },
  {
    "NatSQL": "select player.name_first , player.name_last , player.player_id , count ( all_star.* )  from player  group by player.player_id  order by count ( all_star.* )  desc limit 1"
  },
  {
    "NatSQL": "select hall_of_fame.yearid , count ( hall_of_fame.* )  from hall_of_fame  group by hall_of_fame.yearid "
  },
  {
    "NatSQL": "select hall_of_fame.yearid , count ( hall_of_fame.* )  from hall_of_fame  group by hall_of_fame.yearid "
  },
  {
    "NatSQL": "select home_game.year , avg ( home_game.attendance )  from home_game  group by home_game.year "
  },
  {
    "NatSQL": "select home_game.year , avg ( home_game.attendance )  from home_game  group by home_game.year "
  },
  {
    "NatSQL": "select team.team_id , team.rank from home_game  where  home_game.year = 2014  group by home_game.team_id  order by avg ( home_game.attendance )  desc limit 1"
  },
  {
    "NatSQL": "select team.team_id , team.rank from home_game  where  home_game.year = 2014  group by home_game.team_id  order by avg ( home_game.attendance )  desc limit 1"
  },
  {
    "NatSQL": "select player.name_first , player.name_last , manager_award.player_id from player  group by manager_award.player_id  order by count ( player.* )  desc limit 1"
  },
  {
    "NatSQL": "select player.name_first , player.name_last , manager_award.player_id from player  group by manager_award.player_id  order by count ( player.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( park.* )  from park  where  park.state = \"上海\" "
  },
  {
    "NatSQL": "select count ( park.* )  from park  where  park.state = \"上海\" "
  },
  {
    "NatSQL": "select player.name_first , player.name_last , player.player_id from player  group by player.player_id  order by count ( player_award.* )  desc limit 3"
  },
  {
    "NatSQL": "select player.name_first , player.name_last , player.player_id from player  group by player.player_id  order by count ( player_award.* )  desc limit 3"
  },
  {
    "NatSQL": "select player.birth_country from player  group by player.birth_country  order by count ( player.* )  asc limit 3"
  },
  {
    "NatSQL": "select player.birth_country from player  group by player.birth_country  order by count ( player.* )  asc limit 3"
  },
  {
    "NatSQL": "select player.name_first , player.name_last from player  where  player.death_year = \"\" "
  },
  {
    "NatSQL": "select player.name_first , player.name_last from player  where  player.death_year = \"\" "
  },
  {
    "NatSQL": "select count ( player.* )  from player  where  player.birth_country = \"中国\"  and  player.bats = \"R\" "
  },
  {
    "NatSQL": "select count ( player.* )  from player  where  player.birth_country = \"中国\"  and  player.bats = \"R\" "
  },
  {
    "NatSQL": "select avg ( player.height )  from player  where  college.name_full = \"复旦大学\" "
  },
  {
    "NatSQL": "select avg ( player.height )  from player  where  college.name_full = \"复旦大学\" "
  },
  {
    "NatSQL": "select team.name , team.team_id , max ( salary.salary )  from team  group by team.team_id "
  },
  {
    "NatSQL": "select team.name , team.team_id , max ( salary.salary )  from team  group by team.team_id "
  },
  {
    "NatSQL": "select team.name , team.team_id from team  group by team.team_id  order by avg ( salary.salary )  asc limit 1"
  },
  {
    "NatSQL": "select team.name , team.team_id from team  group by team.team_id  order by avg ( salary.salary )  asc limit 1"
  },
  {
    "NatSQL": "select player.name_first , player.name_last from player  where  player_award.year = 1960  and  player_award.year = 1961 "
  },
  {
    "NatSQL": "select player.name_first , player.name_last from player  where  player_award.year = 1960  and  player_award.year = 1961 "
  },
  {
    "NatSQL": "select player.name_first , player.name_last from player  where  player.weight > 220  or  player.height < 75 "
  },
  {
    "NatSQL": "select player.name_first , player.name_last from player  where  player.weight > 220  or  player.height < 75 "
  },
  {
    "NatSQL": "select max ( postseason.wins )  from postseason  where  team.name = \"广州恒大队\" "
  },
  {
    "NatSQL": "select max ( postseason.wins )  from postseason  where  team.name = \"广州恒大队\" "
  },
  {
    "NatSQL": "select count ( postseason.* )  from postseason  where  team.name = \"广州恒大队\"  and  postseason.year = 2009 "
  },
  {
    "NatSQL": "select count ( postseason.* )  from postseason  where  team.name = \"广州恒大队\"  and  postseason.year = 2009 "
  },
  {
    "NatSQL": "select team.name , postseason.team_id_winner from postseason  where  postseason.year = 2008  group by postseason.team_id_winner  order by count ( postseason.* )  desc limit 1"
  },
  {
    "NatSQL": "select team.name , postseason.team_id_winner from postseason  where  postseason.year = 2008  group by postseason.team_id_winner  order by count ( postseason.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( postseason.* )  , postseason.year from postseason  where  team.name = \"广州恒大队\"  group by postseason.year "
  },
  {
    "NatSQL": "select count ( postseason.* )  , postseason.year from postseason  where  team.name = \"广州恒大队\"  group by postseason.year "
  },
  {
    "NatSQL": "select count ( postseason.* )  from postseason  where  team.name = \"广州恒大队\" "
  },
  {
    "NatSQL": "select count ( postseason.* )  from postseason  where  team.name = \"广州恒大队\" "
  },
  {
    "NatSQL": "select count ( postseason.* )  from postseason  where  postseason.year = 1885  and  postseason.ties = 1 "
  },
  {
    "NatSQL": "select count ( postseason.* )  from postseason  where  postseason.year = 1885  and  postseason.ties = 1 "
  },
  {
    "NatSQL": "select sum ( salary.salary )  from salary  where  team.name = \"广州恒大队\"  and  salary.year = 2010 "
  },
  {
    "NatSQL": "select sum ( salary.salary )  from salary  where  team.name = \"广州恒大队\"  and  salary.year = 2010 "
  },
  {
    "NatSQL": "select count ( salary.* )  from salary  where  team.name = \"广州恒大队\"  and  salary.year = 2000 "
  },
  {
    "NatSQL": "select count ( salary.* )  from salary  where  team.name = \"广州恒大队\"  and  salary.year = 2000 "
  },
  {
    "NatSQL": "select salary.salary from salary  where  salary.year = 2001  order by salary.salary desc limit 3"
  },
  {
    "NatSQL": "select salary.salary from salary  where  salary.year = 2001  order by salary.salary desc limit 3"
  },
  {
    "NatSQL": "select salary.salary from salary  where  salary.year = 2010  or  salary.year = 2001 "
  },
  {
    "NatSQL": "select salary.salary from salary  where  salary.year = 2010  or  salary.year = 2001 "
  },
  {
    "NatSQL": "select hall_of_fame.yearid from hall_of_fame  group by hall_of_fame.yearid  order by count ( hall_of_fame.* )  asc limit 1"
  },
  {
    "NatSQL": "select hall_of_fame.yearid from hall_of_fame  group by hall_of_fame.yearid  order by count ( hall_of_fame.* )  asc limit 1"
  },
  {
    "NatSQL": "select count ( park.* )  from park  where  park.city = \"长沙\" "
  },
  {
    "NatSQL": "select count ( park.* )  from park  where  park.city = \"长沙\" "
  },
  {
    "NatSQL": "select count ( home_game.* )  from home_game  where  home_game.year = 1907  and  park.park_name = \"北海公园\" "
  },
  {
    "NatSQL": "select count ( home_game.* )  from home_game  where  home_game.year = 1907  and  park.park_name = \"北海公园\" "
  },
  {
    "NatSQL": "select count ( home_game.* )  from home_game  where  home_game.year = 2000  and  park.city = \"长沙\" "
  },
  {
    "NatSQL": "select count ( home_game.* )  from home_game  where  home_game.year = 2000  and  park.city = \"长沙\" "
  },
  {
    "NatSQL": "select sum ( home_game.attendance )  from home_game  where  team.name = \"广州恒大队\"  and  home_game.year between 2000 and 2010 "
  },
  {
    "NatSQL": "select sum ( home_game.attendance )  from home_game  where  team.name = \"广州恒大队\"  and  home_game.year between 2000 and 2010 "
  },
  {
    "NatSQL": "select sum ( salary.salary )  from salary  where  player.name_first = \"文\"  and  player.name_last = \"左\"  and  salary.year between 1985 and 1990 "
  },
  {
    "NatSQL": "select sum ( salary.salary )  from salary  where  player.name_first = \"文\"  and  player.name_last = \"左\"  and  salary.year between 1985 and 1990 "
  },
  {
    "NatSQL": "select player.name_first , player.name_last from salary  where  salary.year = 2005  and  team.name = \"北京人和\"  and  salary.year = 2007  and  team.name = \"北京人和\" "
  },
  {
    "NatSQL": "select player.name_first , player.name_last from salary  where  salary.year = 2005  and  team.name = \"北京人和\"  and  salary.year = 2007  and  team.name = \"北京人和\" "
  },
  {
    "NatSQL": "select sum ( home_game.games )  from home_game  where  team.name = \"广州恒大队\"  and  home_game.year between 1990 and 2000 "
  },
  {
    "NatSQL": "select sum ( home_game.games )  from home_game  where  team.name = \"广州恒大队\"  and  home_game.year between 1990 and 2000 "
  },
  {
    "NatSQL": "select team.name from home_game  where  home_game.year = 1980  order by home_game.attendance asc limit 1"
  },
  {
    "NatSQL": "select team.name from home_game  where  home_game.year = 1980  order by home_game.attendance asc limit 1"
  },
  {
    "NatSQL": "select park.state from park  where  count ( park.* )  > 2  group by park.state "
  },
  {
    "NatSQL": "select park.state from park  where  count ( park.* )  > 2  group by park.state "
  },
  {
    "NatSQL": "select count ( team_franchise.* )  from team_franchise  where  team_franchise.active = \"Y\" "
  },
  {
    "NatSQL": "select count ( team_franchise.* )  from team_franchise  where  team_franchise.active = \"Y\" "
  },
  {
    "NatSQL": "select park.city from park  where  count ( park.* )  between 2 and 4  group by park.city "
  },
  {
    "NatSQL": "select park.city from park  where  count ( park.* )  between 2 and 4  group by park.city "
  },
  {
    "NatSQL": "select park.park_name from home_game  where  home_game.year = 2008  order by home_game.attendance desc limit 1"
  },
  {
    "NatSQL": "select park.park_name from home_game  where  home_game.year = 2008  order by home_game.attendance desc limit 1"
  },
  {
    "NatSQL": "select count ( camera_lens.* )  from camera_lens  where  camera_lens.focal_length_mm > 15 "
  },
  {
    "NatSQL": "select camera_lens.brand , camera_lens.name from camera_lens  order by camera_lens.max_aperture desc"
  },
  {
    "NatSQL": "select photos.id , photos.color , photos.name from photos "
  },
  {
    "NatSQL": "select max ( mountain.Height )  , avg ( mountain.Height )  from mountain "
  },
  {
    "NatSQL": "select avg ( mountain.Prominence )  from mountain  where  mountain.Country = \"峨眉山\" "
  },
  {
    "NatSQL": "select mountain.name , mountain.Height , mountain.Prominence from mountain  where  mountain.Range != \"长白山脉\" "
  },
  {
    "NatSQL": "select mountain.id , mountain.name from mountain  where  @.@ join photos.*  and  mountain.Height > 4000 "
  },
  {
    "NatSQL": "select mountain.id , mountain.name from mountain  where  count ( photos.* )  >= 2  group by mountain.id "
  },
  {
    "NatSQL": "select camera_lens.name from photos  group by camera_lens.id  order by count ( photos.* )  desc limit 1"
  },
  {
    "NatSQL": "select camera_lens.name from camera_lens  where  @.@ join photos.*  and  camera_lens.brand = \"尼康\"  or  camera_lens.brand = \"奥林巴斯\" "
  },
  {
    "NatSQL": "select count (  distinct camera_lens.brand )  from camera_lens "
  },
  {
    "NatSQL": "select count ( camera_lens.* )  from camera_lens  where  @.@ not in photos.* "
  },
  {
    "NatSQL": "select count (  distinct photos.camera_lens_id )  from mountain  where  mountain.Country = \"华山\" "
  },
  {
    "NatSQL": "select camera_lens.brand from mountain  where  mountain.Range = \"青藏高原\"  and  mountain.Range = \"泰山\" "
  },
  {
    "NatSQL": "select mountain.name , mountain.Prominence from mountain  where  except_  @.@ is camera_lens.*  and  camera_lens.brand = \"尼康\" "
  },
  {
    "NatSQL": "select camera_lens.name from camera_lens  where  camera_lens.name like \"数码\" "
  },
  {
    "NatSQL": "select camera_lens.name , count ( photos.* )  from camera_lens  group by camera_lens.id  order by count ( photos.* )  asc"
  },
  {
    "NatSQL": "select channel.Name from channel  where  channel.Owner != \"央视\" "
  },
  {
    "NatSQL": "select channel.Name from channel  where  channel.Owner != \"央视\" "
  },
  {
    "NatSQL": "select channel.Name from channel  order by channel.Rating_in_percent desc"
  },
  {
    "NatSQL": "select channel.Name from channel  order by channel.Rating_in_percent desc"
  },
  {
    "NatSQL": "select channel.Owner from channel  order by channel.Rating_in_percent desc limit 1"
  },
  {
    "NatSQL": "select channel.Owner from channel  order by channel.Rating_in_percent desc limit 1"
  },
  {
    "NatSQL": "select count ( program.* )  from program "
  },
  {
    "NatSQL": "select count ( program.* )  from program "
  },
  {
    "NatSQL": "select program.Name from program  order by program.Launch asc"
  },
  {
    "NatSQL": "select program.Name from program  order by program.Launch asc"
  },
  {
    "NatSQL": "select program.Name , program.Origin , program.Owner from program "
  },
  {
    "NatSQL": "select program.Name , program.Origin , program.Owner from program "
  },
  {
    "NatSQL": "select program.Name from program  order by program.Launch desc limit 1"
  },
  {
    "NatSQL": "select program.Name from program  order by program.Launch desc limit 1"
  },
  {
    "NatSQL": "select sum ( channel.Share_in_percent )  from channel  where  channel.Owner = \"央视\" "
  },
  {
    "NatSQL": "select sum ( channel.Share_in_percent )  from channel  where  channel.Owner = \"央视\" "
  },
  {
    "NatSQL": "select channel.Name from channel  where  broadcast.Time_of_day = \"早上\" "
  },
  {
    "NatSQL": "select channel.Name from channel  where  broadcast.Time_of_day = \"早上\" "
  },
  {
    "NatSQL": "select channel.Name from channel  where  broadcast.Time_of_day = \"早上\"  and  broadcast.Time_of_day = \"晚上\" "
  },
  {
    "NatSQL": "select channel.Name from channel  where  broadcast.Time_of_day = \"早上\"  and  broadcast.Time_of_day = \"晚上\" "
  },
  {
    "NatSQL": "select count ( broadcast.* )  , broadcast.Time_of_day from broadcast  group by broadcast.Time_of_day "
  },
  {
    "NatSQL": "select count ( broadcast.* )  , broadcast.Time_of_day from broadcast  group by broadcast.Time_of_day "
  },
  {
    "NatSQL": "select count (  distinct broadcast.Program_ID )  from broadcast  where  broadcast.Time_of_day = \"晚上\" "
  },
  {
    "NatSQL": "select count (  distinct broadcast.Program_ID )  from broadcast  where  broadcast.Time_of_day = \"晚上\" "
  },
  {
    "NatSQL": "select program.Name from program  where  except_  @.@ is broadcast.*  and  broadcast.Time_of_day = \"早上\" "
  },
  {
    "NatSQL": "select program.Name from program  where  except_  @.@ is broadcast.*  and  broadcast.Time_of_day = \"早上\" "
  },
  {
    "NatSQL": "select program.Owner from program  where  broadcast.Time_of_day = \"早上\"  and  broadcast.Time_of_day = \"晚上\" "
  },
  {
    "NatSQL": "select program.Owner from program  where  broadcast.Time_of_day = \"早上\"  and  broadcast.Time_of_day = \"晚上\" "
  },
  {
    "NatSQL": "select program.Origin from program  order by program.Origin asc"
  },
  {
    "NatSQL": "select program.Origin from program  order by program.Origin asc"
  },
  {
    "NatSQL": "select count (  distinct channel.Owner )  from channel "
  },
  {
    "NatSQL": "select count (  distinct channel.Owner )  from channel "
  },
  {
    "NatSQL": "select program.Name from program  where  program.Origin != \"北京\" "
  },
  {
    "NatSQL": "select program.Name from program  where  program.Origin != \"北京\" "
  },
  {
    "NatSQL": "select channel.Name from channel  where  channel.Owner = \"央视\"  or  channel.Owner = \"湖南卫视\" "
  },
  {
    "NatSQL": "select channel.Name from channel  where  channel.Owner = \"央视\"  or  channel.Owner = \"湖南卫视\" "
  },
  {
    "NatSQL": "select sum ( channel.Rating_in_percent )  , channel.Owner from channel  group by channel.Owner "
  },
  {
    "NatSQL": "select sum ( channel.Rating_in_percent )  , channel.Owner from channel  group by channel.Owner "
  },
  {
    "NatSQL": "select program.Name from program  group by broadcast.Program_ID  order by count ( broadcast.* )  desc limit 1"
  },
  {
    "NatSQL": "select program.Name from program  group by broadcast.Program_ID  order by count ( broadcast.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( courses.* )  from courses "
  },
  {
    "NatSQL": "select count ( courses.* )  from courses "
  },
  {
    "NatSQL": "select courses.course_description from courses  where  courses.course_name = \"数据库\" "
  },
  {
    "NatSQL": "select courses.course_description from courses  where  courses.course_name = \"数据库\" "
  },
  {
    "NatSQL": "select course_authors_and_tutors.address_line_1 from course_authors_and_tutors  where  course_authors_and_tutors.personal_name = \"琪琪\" "
  },
  {
    "NatSQL": "select course_authors_and_tutors.address_line_1 from course_authors_and_tutors  where  course_authors_and_tutors.personal_name = \"琪琪\" "
  },
  {
    "NatSQL": "select course_authors_and_tutors.address_line_1 from course_authors_and_tutors "
  },
  {
    "NatSQL": "select course_authors_and_tutors.address_line_1 from course_authors_and_tutors "
  },
  {
    "NatSQL": "select course_authors_and_tutors.login_name , course_authors_and_tutors.family_name from course_authors_and_tutors "
  },
  {
    "NatSQL": "select course_authors_and_tutors.login_name , course_authors_and_tutors.family_name from course_authors_and_tutors "
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion from student_course_enrolment "
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion from student_course_enrolment "
  },
  {
    "NatSQL": "select count (  distinct student_course_enrolment.student_id )  from student_course_enrolment "
  },
  {
    "NatSQL": "select count (  distinct student_course_enrolment.student_id )  from student_course_enrolment "
  },
  {
    "NatSQL": "select count (  distinct student_course_enrolment.course_id )  from student_course_enrolment "
  },
  {
    "NatSQL": "select count (  distinct student_course_enrolment.course_id )  from student_course_enrolment "
  },
  {
    "NatSQL": "select student_tests_taken.date_test_taken from student_tests_taken  where  student_tests_taken.test_result = \"通过\" "
  },
  {
    "NatSQL": "select student_tests_taken.date_test_taken from student_tests_taken  where  student_tests_taken.test_result = \"通过\" "
  },
  {
    "NatSQL": "select count ( student_tests_taken.* )  from student_tests_taken  where  student_tests_taken.test_result = \"失败\" "
  },
  {
    "NatSQL": "select count ( student_tests_taken.* )  from student_tests_taken  where  student_tests_taken.test_result = \"失败\" "
  },
  {
    "NatSQL": "select students.login_name from students  where  students.family_name = \"睿\" "
  },
  {
    "NatSQL": "select students.login_name from students  where  students.family_name = \"睿\" "
  },
  {
    "NatSQL": "select students.date_of_latest_logon from students  where  students.family_name = \"龚\"  or  students.family_name = \"铭\" "
  },
  {
    "NatSQL": "select students.date_of_latest_logon from students  where  students.family_name = \"龚\"  or  students.family_name = \"铭\" "
  },
  {
    "NatSQL": "select count ( students.* )  from students  where  students.personal_name like \"孙\" "
  },
  {
    "NatSQL": "select count ( students.* )  from students  where  students.personal_name like \"孙\" "
  },
  {
    "NatSQL": "select subjects.subject_name from subjects "
  },
  {
    "NatSQL": "select subjects.subject_name from subjects "
  },
  {
    "NatSQL": "select course_authors_and_tutors.* from course_authors_and_tutors  order by course_authors_and_tutors.personal_name asc"
  },
  {
    "NatSQL": "select course_authors_and_tutors.* from course_authors_and_tutors  order by course_authors_and_tutors.personal_name asc"
  },
  {
    "NatSQL": "select students.personal_name , students.family_name from students  order by students.family_name asc"
  },
  {
    "NatSQL": "select students.personal_name , students.family_name from students  order by students.family_name asc"
  },
  {
    "NatSQL": "select student_tests_taken.test_result , count ( student_tests_taken.* )  from student_tests_taken  group by student_tests_taken.test_result  order by count ( student_tests_taken.* )  desc"
  },
  {
    "NatSQL": "select student_tests_taken.test_result , count ( student_tests_taken.* )  from student_tests_taken  group by student_tests_taken.test_result  order by count ( student_tests_taken.* )  desc"
  },
  {
    "NatSQL": "select course_authors_and_tutors.login_name from course_authors_and_tutors  where  courses.course_name = \"高级数据库\" "
  },
  {
    "NatSQL": "select course_authors_and_tutors.login_name from course_authors_and_tutors  where  courses.course_name = \"高级数据库\" "
  },
  {
    "NatSQL": "select course_authors_and_tutors.address_line_1 from course_authors_and_tutors  where  courses.course_name = \"操作系统\"  or  courses.course_name = \"数据结构\" "
  },
  {
    "NatSQL": "select course_authors_and_tutors.address_line_1 from course_authors_and_tutors  where  courses.course_name = \"操作系统\"  or  courses.course_name = \"数据结构\" "
  },
  {
    "NatSQL": "select course_authors_and_tutors.personal_name , course_authors_and_tutors.family_name , courses.author_id from course_authors_and_tutors  group by courses.author_id  order by count ( courses.* )  desc limit 1"
  },
  {
    "NatSQL": "select course_authors_and_tutors.personal_name , course_authors_and_tutors.family_name , courses.author_id from course_authors_and_tutors  group by courses.author_id  order by count ( course_authors_and_tutors.* )  desc limit 1"
  },
  {
    "NatSQL": "select course_authors_and_tutors.address_line_1 , courses.author_id from course_authors_and_tutors  where  count ( course_authors_and_tutors.* )  >= 2  group by courses.author_id "
  },
  {
    "NatSQL": "select course_authors_and_tutors.address_line_1 , courses.author_id from course_authors_and_tutors  where  count ( course_authors_and_tutors.* )  >= 2  group by courses.author_id "
  },
  {
    "NatSQL": "select courses.course_name from course_authors_and_tutors  where  course_authors_and_tutors.personal_name = \"志华\" "
  },
  {
    "NatSQL": "select courses.course_name from course_authors_and_tutors  where  course_authors_and_tutors.personal_name = \"志华\" "
  },
  {
    "NatSQL": "select courses.course_name , courses.course_description from courses  where  subjects.subject_name = \"计算机科学\" "
  },
  {
    "NatSQL": "select courses.course_name , courses.course_description from courses  where  subjects.subject_name = \"计算机科学\" "
  },
  {
    "NatSQL": "select courses.subject_id , subjects.subject_name , count ( courses.* )  from courses  group by courses.subject_id "
  },
  {
    "NatSQL": "select courses.subject_id , subjects.subject_name , count ( courses.* )  from courses  group by courses.subject_id "
  },
  {
    "NatSQL": "select courses.subject_id , subjects.subject_name , count ( courses.* )  from courses  group by courses.subject_id  order by count ( courses.* )  asc"
  },
  {
    "NatSQL": "select courses.subject_id , subjects.subject_name , count ( courses.* )  from courses  group by courses.subject_id  order by count ( courses.* )  asc"
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_enrolment from courses  where  courses.course_name = \"西班牙语\" "
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_enrolment from courses  where  courses.course_name = \"西班牙语\" "
  },
  {
    "NatSQL": "select courses.course_name from courses  group by courses.course_name  order by count ( student_course_enrolment.* )  desc limit 1"
  },
  {
    "NatSQL": "select courses.course_name from courses  group by courses.course_name  order by count ( student_course_enrolment.* )  desc limit 1"
  },
  {
    "NatSQL": "select courses.course_name from courses  where  count ( student_course_enrolment.* )  = 1  group by courses.course_name "
  },
  {
    "NatSQL": "select courses.course_name from courses  where  count ( student_course_enrolment.* )  = 1  group by courses.course_name "
  },
  {
    "NatSQL": "select courses.course_description , courses.course_name from courses  where  count ( student_course_enrolment.* )  > 2  group by courses.course_name "
  },
  {
    "NatSQL": "select courses.course_description , courses.course_name from courses  where  count ( student_course_enrolment.* )  > 2  group by courses.course_name "
  },
  {
    "NatSQL": "select courses.course_name , count ( student_course_enrolment.* )  from courses  group by courses.course_name "
  },
  {
    "NatSQL": "select courses.course_name , count ( student_course_enrolment.* )  from courses  group by courses.course_name "
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_enrolment from student_course_enrolment  where  student_tests_taken.test_result = \"通过\" "
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_enrolment from student_course_enrolment  where  student_tests_taken.test_result = \"通过\" "
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_completion from student_course_enrolment  where  student_tests_taken.test_result = \"失败\" "
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_completion from student_course_enrolment  where  student_tests_taken.test_result = \"失败\" "
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion from student_course_enrolment  where  students.personal_name = \"小天\" "
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion from student_course_enrolment  where  students.personal_name = \"小天\" "
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion from student_course_enrolment  where  students.family_name = \"韩\"  and  students.personal_name = \"佳明\" "
  },
  {
    "NatSQL": "select student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion from student_course_enrolment  where  students.family_name = \"韩\"  and  students.personal_name = \"佳明\" "
  },
  {
    "NatSQL": "select student_course_enrolment.student_id , students.login_name from student_course_enrolment  group by student_course_enrolment.student_id  order by count ( student_course_enrolment.* )  desc limit 1"
  },
  {
    "NatSQL": "select student_course_enrolment.student_id , students.login_name from student_course_enrolment  group by student_course_enrolment.student_id  order by count ( student_course_enrolment.* )  desc limit 1"
  },
  {
    "NatSQL": "select student_course_enrolment.student_id , students.personal_name from student_course_enrolment  where  count ( student_course_enrolment.* )  >= 2  group by student_course_enrolment.student_id "
  },
  {
    "NatSQL": "select student_course_enrolment.student_id , students.personal_name from student_course_enrolment  where  count ( student_course_enrolment.* )  >= 2  group by student_course_enrolment.student_id "
  },
  {
    "NatSQL": "select student_course_enrolment.student_id , students.middle_name from student_course_enrolment  where  count ( student_course_enrolment.* )  <= 2  group by student_course_enrolment.student_id "
  },
  {
    "NatSQL": "select student_course_enrolment.student_id , students.middle_name from student_course_enrolment  where  count ( student_course_enrolment.* )  <= 2  group by student_course_enrolment.student_id "
  },
  {
    "NatSQL": "select students.personal_name from students  where  except_  @.@ is student_course_enrolment.* "
  },
  {
    "NatSQL": "select students.personal_name from students  where  except_  @.@ is student_course_enrolment.* "
  },
  {
    "NatSQL": "select count ( students.* )  from students  where  @.@ not in student_course_enrolment.* "
  },
  {
    "NatSQL": "select count ( students.* )  from students  where  @.@ not in student_course_enrolment.* "
  },
  {
    "NatSQL": "select course_authors_and_tutors.login_name from course_authors_and_tutors  where  intersect_  @.@ is students.* "
  },
  {
    "NatSQL": "select course_authors_and_tutors.login_name from course_authors_and_tutors  where  intersect_  @.@ is students.* "
  },
  {
    "NatSQL": "select course_authors_and_tutors.personal_name from course_authors_and_tutors  where  intersect_  @.@ is students.* "
  },
  {
    "NatSQL": "select course_authors_and_tutors.personal_name from course_authors_and_tutors  where  intersect_  @.@ is students.* "
  },
  {
    "NatSQL": "select claims.Date_Claim_Made , claims.Claim_ID from claims  where  count ( settlements.* )  > 2  or  @.@ join settlements.*  and  @.@ = max ( claims.Amount_Claimed )   group by claims.Claim_ID "
  },
  {
    "NatSQL": "select claims.Date_Claim_Made , claims.Claim_ID from claims  where  count ( settlements.* )  > 2  or  @.@ join settlements.*  and  @.@ = max ( claims.Amount_Claimed )   group by claims.Claim_ID "
  },
  {
    "NatSQL": "select customers.Customer_Details , customers.Customer_ID from customers  where  count ( customer_policies.* )  >= 2  except_  @.@ join claims.*  group by customers.Customer_ID "
  },
  {
    "NatSQL": "select customers.Customer_Details , customers.Customer_ID from customers  where  count ( customer_policies.* )  >= 2  except_  @.@ join claims.*  group by customers.Customer_ID "
  },
  {
    "NatSQL": "select payments.Payment_Method_Code , payments.Date_Payment_Made , payments.Amount_Payment from payments  order by payments.Date_Payment_Made asc"
  },
  {
    "NatSQL": "select payments.Payment_Method_Code , payments.Date_Payment_Made , payments.Amount_Payment from payments  order by payments.Date_Payment_Made asc"
  },
  {
    "NatSQL": "select claims.Amount_Settled , claims.Amount_Claimed from claims  order by claims.Amount_Claimed desc limit 1"
  },
  {
    "NatSQL": "select claims.Amount_Settled , claims.Amount_Claimed from claims  order by claims.Amount_Claimed desc limit 1"
  },
  {
    "NatSQL": "select claims.Amount_Settled , claims.Amount_Claimed from claims  order by claims.Amount_Settled asc limit 1"
  },
  {
    "NatSQL": "select claims.Amount_Settled , claims.Amount_Claimed from claims  order by claims.Amount_Settled asc limit 1"
  },
  {
    "NatSQL": "select claims.Date_Claim_Made , claims.Date_Claim_Settled from claims  where  @.@ > avg ( claims.Amount_Claimed )  "
  },
  {
    "NatSQL": "select claims.Date_Claim_Made , claims.Date_Claim_Settled from claims  where  @.@ > avg ( claims.Amount_Claimed )  "
  },
  {
    "NatSQL": "select claims.Date_Claim_Made from claims  where  @.@ <= avg ( claims.Amount_Settled )  "
  },
  {
    "NatSQL": "select claims.Date_Claim_Made from claims  where  @.@ <= avg ( claims.Amount_Settled )  "
  },
  {
    "NatSQL": "select claims.Claim_ID , count ( settlements.* )  from claims  group by claims.Claim_ID "
  },
  {
    "NatSQL": "select claims.Claim_ID , count ( settlements.* )  from claims  group by claims.Claim_ID "
  },
  {
    "NatSQL": "select claims.Claim_ID , claims.Date_Claim_Made , count ( settlements.* )  from claims  group by claims.Claim_ID  order by count ( settlements.* )  desc limit 1"
  },
  {
    "NatSQL": "select claims.Claim_ID , claims.Date_Claim_Made , count ( settlements.* )  from claims  group by claims.Claim_ID  order by count ( settlements.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( settlements.* )  , claims.Claim_ID from claims  group by claims.Claim_ID  order by claims.Date_Claim_Settled desc limit 1"
  },
  {
    "NatSQL": "select count ( settlements.* )  , claims.Claim_ID from claims  group by claims.Claim_ID  order by claims.Date_Claim_Settled desc limit 1"
  },
  {
    "NatSQL": "select claims.Date_Claim_Made from claims  order by claims.Date_Claim_Made asc limit 1"
  },
  {
    "NatSQL": "select claims.Date_Claim_Made from claims  order by claims.Date_Claim_Made asc limit 1"
  },
  {
    "NatSQL": "select sum ( settlements.Amount_Settled )  from settlements "
  },
  {
    "NatSQL": "select sum ( settlements.Amount_Settled )  from settlements "
  },
  {
    "NatSQL": "select customers.Customer_Details , customers.Customer_ID from customers  where  count ( customer_policies.* )  > 1  group by customers.Customer_ID "
  },
  {
    "NatSQL": "select customers.Customer_Details , customers.Customer_ID from customers  where  count ( customer_policies.* )  > 1  group by customers.Customer_ID "
  },
  {
    "NatSQL": "select settlements.Date_Claim_Made , settlements.Date_Claim_Settled from settlements "
  },
  {
    "NatSQL": "select settlements.Date_Claim_Made , settlements.Date_Claim_Settled from settlements "
  },
  {
    "NatSQL": "select payments.Payment_Method_Code from payments  group by payments.Payment_Method_Code  order by count ( payments.* )  desc limit 1"
  },
  {
    "NatSQL": "select payments.Payment_Method_Code from payments  group by payments.Payment_Method_Code  order by count ( payments.* )  desc limit 1"
  },
  {
    "NatSQL": "select payments.Payment_Method_Code from payments  group by payments.Payment_Method_Code  order by count ( payments.* )  asc limit 1"
  },
  {
    "NatSQL": "select payments.Payment_Method_Code from payments  group by payments.Payment_Method_Code  order by count ( payments.* )  asc limit 1"
  },
  {
    "NatSQL": "select sum ( payments.Amount_Payment )  from payments "
  },
  {
    "NatSQL": "select sum ( payments.Amount_Payment )  from payments "
  },
  {
    "NatSQL": "select  distinct customers.Customer_Details from customers "
  },
  {
    "NatSQL": "select  distinct customers.Customer_Details from customers "
  },
  {
    "NatSQL": "select customer_policies.Policy_Type_Code from customer_policies  group by customer_policies.Policy_Type_Code  order by count ( customer_policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select customer_policies.Policy_Type_Code from customer_policies  group by customer_policies.Policy_Type_Code  order by count ( customer_policies.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( settlements.* )  from settlements "
  },
  {
    "NatSQL": "select count ( settlements.* )  from settlements "
  },
  {
    "NatSQL": "select payments.Payment_ID , payments.Date_Payment_Made , payments.Amount_Payment from payments  where  payments.Payment_Method_Code = \"信用卡\" "
  },
  {
    "NatSQL": "select payments.Payment_ID , payments.Date_Payment_Made , payments.Amount_Payment from payments  where  payments.Payment_Method_Code = \"信用卡\" "
  },
  {
    "NatSQL": "select customers.Customer_Details from customers  where  except_  @.@ is customer_policies.* "
  },
  {
    "NatSQL": "select customers.Customer_Details from customers  where  except_  @.@ is customer_policies.* "
  },
  {
    "NatSQL": "select claims.Claim_ID , claims.Date_Claim_Made , claims.Date_Claim_Settled from claims  where  count ( settlements.* )  = 1  group by claims.Claim_ID "
  },
  {
    "NatSQL": "select claims.Claim_ID , claims.Date_Claim_Made , claims.Date_Claim_Settled from claims  where  count ( settlements.* )  = 1  group by claims.Claim_ID "
  },
  {
    "NatSQL": "select sum ( claims.Amount_Claimed )  from claims "
  },
  {
    "NatSQL": "select sum ( claims.Amount_Claimed )  from claims "
  },
  {
    "NatSQL": "select department.Name from department  group by department.DepartmentID  order by count ( department.DepartmentID )  desc limit 1"
  },
  {
    "NatSQL": "select department.Name from department  group by department.DepartmentID  order by count ( department.DepartmentID )  desc limit 1"
  },
  {
    "NatSQL": "select department.Head from department  group by department.DepartmentID  order by count ( department.DepartmentID )  asc limit 1"
  },
  {
    "NatSQL": "select department.Head from department  group by department.DepartmentID  order by count ( department.DepartmentID )  asc limit 1"
  },
  {
    "NatSQL": "select physician.Name , physician.Position from department  group by department.DepartmentID  order by count ( department.DepartmentID )  asc limit 1"
  },
  {
    "NatSQL": "select physician.Name , physician.Position from department  group by department.DepartmentID  order by count ( department.DepartmentID )  asc limit 1"
  },
  {
    "NatSQL": "select patient.Name from patient  where  @.@ join appointment.* "
  },
  {
    "NatSQL": "select patient.Name from patient  where  @.@ join appointment.* "
  },
  {
    "NatSQL": "select patient.Name , patient.Phone from appointment  where  count ( appointment.* )  > 1  group by appointment.Patient "
  },
  {
    "NatSQL": "select patient.Name , patient.Phone from appointment  where  count ( appointment.* )  > 1  group by appointment.Patient "
  },
  {
    "NatSQL": "select appointment.AppointmentID from appointment  order by appointment.Start desc limit 1"
  },
  {
    "NatSQL": "select appointment.AppointmentID from appointment  order by appointment.Start desc limit 1"
  },
  {
    "NatSQL": "select physician.Name from appointment  where  @.@ join appointment.* "
  },
  {
    "NatSQL": "select physician.Name from appointment  where  @.@ join appointment.* "
  },
  {
    "NatSQL": "select physician.Name from physician  where  except_  @.@ is appointment.* "
  },
  {
    "NatSQL": "select physician.Name from physician  where  except_  @.@ is appointment.* "
  },
  {
    "NatSQL": "select physician.Name , department.Name from physician  where  affiliated_with.PrimaryAffiliation = 1 "
  },
  {
    "NatSQL": "select physician.Name , department.Name from physician  where  affiliated_with.PrimaryAffiliation = 1 "
  },
  {
    "NatSQL": "select patient.Name from patient  order by appointment.Start desc limit 1"
  },
  {
    "NatSQL": "select patient.Name from patient  order by appointment.Start desc limit 1"
  },
  {
    "NatSQL": "select count (  distinct stay.Patient )  from stay  where  stay.Room = 112 "
  },
  {
    "NatSQL": "select count (  distinct stay.Patient )  from stay  where  stay.Room = 112 "
  },
  {
    "NatSQL": "select count ( patient.SSN )  from patient  where  @.@ join prescribes.*  and  physician.Name = \"王涛\" "
  },
  {
    "NatSQL": "select count ( patient.SSN )  from patient  where  @.@ join prescribes.*  and  physician.Name = \"王涛\" "
  },
  {
    "NatSQL": "select medication.Name from stay  where  @.@ join patient.*  and  stay.Room = 111 "
  },
  {
    "NatSQL": "select medication.Name from stay  where  @.@ join patient.*  and  stay.Room = 111 "
  },
  {
    "NatSQL": "select stay.Patient from stay  where  stay.Room = 111  order by stay.StayStart desc limit 1"
  },
  {
    "NatSQL": "select stay.Patient from stay  where  stay.Room = 111  order by stay.StayStart desc limit 1"
  },
  {
    "NatSQL": "select nurse.Name from nurse  group by nurse.EmployeeID  order by count ( appointment.* )  desc limit 1"
  },
  {
    "NatSQL": "select nurse.Name from nurse  group by nurse.EmployeeID  order by count ( appointment.* )  desc limit 1"
  },
  {
    "NatSQL": "select physician.Name , count ( patient.* )  from physician  group by physician.EmployeeID "
  },
  {
    "NatSQL": "select physician.Name , count ( patient.* )  from physician  group by physician.EmployeeID "
  },
  {
    "NatSQL": "select physician.Name from physician  where  count ( patient.* )  > 1  group by physician.EmployeeID "
  },
  {
    "NatSQL": "select physician.Name from physician  where  count ( patient.* )  > 1  group by physician.EmployeeID "
  },
  {
    "NatSQL": "select count ( room.* )  , block.BlockFloor from block  group by block.BlockFloor "
  },
  {
    "NatSQL": "select count ( room.* )  , block.BlockFloor from block  group by block.BlockFloor "
  },
  {
    "NatSQL": "select count ( room.* )  , block.BlockCode from block  group by block.BlockCode "
  },
  {
    "NatSQL": "select count ( room.* )  , block.BlockCode from block  group by block.BlockCode "
  },
  {
    "NatSQL": "select  distinct room.BlockCode from room  where  room.Unavailable = 0 "
  },
  {
    "NatSQL": "select  distinct room.BlockCode from room  where  room.Unavailable = 0 "
  },
  {
    "NatSQL": "select count (  distinct room.RoomType )  from room "
  },
  {
    "NatSQL": "select count (  distinct room.RoomType )  from room "
  },
  {
    "NatSQL": "select  distinct physician.Name from physician  where  medication.Name = \"感冒灵\" "
  },
  {
    "NatSQL": "select  distinct physician.Name from physician  where  medication.Name = \"感冒灵\" "
  },
  {
    "NatSQL": "select  distinct physician.Name , physician.Position from physician  where  medication.Brand = \"X\" "
  },
  {
    "NatSQL": "select  distinct physician.Name , physician.Position from physician  where  medication.Brand = \"X\" "
  },
  {
    "NatSQL": "select count ( prescribes.* )  , medication.Name from medication  group by medication.Brand "
  },
  {
    "NatSQL": "select count ( prescribes.* )  , medication.Name from medication  group by medication.Brand "
  },
  {
    "NatSQL": "select physician.Name from physician  where  physician.Position like \"高级\" "
  },
  {
    "NatSQL": "select physician.Name from physician  where  physician.Position like \"高级\" "
  },
  {
    "NatSQL": "select undergoes.Patient from undergoes  order by undergoes.DateUndergoes asc limit 1"
  },
  {
    "NatSQL": "select undergoes.Patient from undergoes  order by undergoes.DateUndergoes asc limit 1"
  },
  {
    "NatSQL": "select  distinct patient.Name from undergoes  where  @.@ join undergoes.*  and  stay.Room = 111 "
  },
  {
    "NatSQL": "select  distinct patient.Name from undergoes  where  @.@ join undergoes.*  and  stay.Room = 111 "
  },
  {
    "NatSQL": "select  distinct nurse.Name from nurse  order by nurse.Name asc"
  },
  {
    "NatSQL": "select  distinct nurse.Name from nurse  order by nurse.Name asc"
  },
  {
    "NatSQL": "select  distinct nurse.Name from undergoes  where  @.@ join undergoes.* "
  },
  {
    "NatSQL": "select  distinct nurse.Name from undergoes  where  @.@ join undergoes.* "
  },
  {
    "NatSQL": "select  distinct medication.Name from medication  order by medication.Name asc"
  },
  {
    "NatSQL": "select  distinct medication.Name from medication  order by medication.Name asc"
  },
  {
    "NatSQL": "select physician.Name from physician  order by prescribes.Dose desc limit 1"
  },
  {
    "NatSQL": "select physician.Name from physician  order by prescribes.Dose desc limit 1"
  },
  {
    "NatSQL": "select affiliated_with.Physician , affiliated_with.Department from affiliated_with  where  affiliated_with.PrimaryAffiliation = 1 "
  },
  {
    "NatSQL": "select affiliated_with.Physician , affiliated_with.Department from affiliated_with  where  affiliated_with.PrimaryAffiliation = 1 "
  },
  {
    "NatSQL": "select  distinct department.Name from affiliated_with  where  affiliated_with.PrimaryAffiliation = 1 "
  },
  {
    "NatSQL": "select  distinct department.Name from affiliated_with  where  affiliated_with.PrimaryAffiliation = 1 "
  },
  {
    "NatSQL": "select on_call.Nurse from on_call  where  on_call.BlockFloor = 1  and  on_call.BlockCode = 1 "
  },
  {
    "NatSQL": "select on_call.Nurse from on_call  where  on_call.BlockFloor = 1  and  on_call.BlockCode = 1 "
  },
  {
    "NatSQL": "select max ( procedures.Cost )  , min ( procedures.Cost )  , avg ( procedures.Cost )  from procedures "
  },
  {
    "NatSQL": "select max ( procedures.Cost )  , min ( procedures.Cost )  , avg ( procedures.Cost )  from procedures "
  },
  {
    "NatSQL": "select procedures.Name , procedures.Cost from procedures  order by procedures.Cost desc"
  },
  {
    "NatSQL": "select procedures.Name , procedures.Cost from procedures  order by procedures.Cost desc"
  },
  {
    "NatSQL": "select procedures.Name from procedures  order by procedures.Cost asc limit 3"
  },
  {
    "NatSQL": "select procedures.Name from procedures  order by procedures.Cost asc limit 3"
  },
  {
    "NatSQL": "select physician.Name from physician  where  procedures.Cost > 5000 "
  },
  {
    "NatSQL": "select physician.Name from physician  where  procedures.Cost > 5000 "
  },
  {
    "NatSQL": "select physician.Name from physician  order by procedures.Cost desc limit 1"
  },
  {
    "NatSQL": "select physician.Name from physician  order by procedures.Cost desc limit 1"
  },
  {
    "NatSQL": "select avg ( procedures.Cost )  from physician  where  physician.Name = \"文翰\" "
  },
  {
    "NatSQL": "select avg ( procedures.Cost )  from physician  where  physician.Name = \"文翰\" "
  },
  {
    "NatSQL": "select procedures.Name from physician  where  physician.Name = \"文翰\" "
  },
  {
    "NatSQL": "select procedures.Name from physician  where  physician.Name = \"文翰\" "
  },
  {
    "NatSQL": "select procedures.Name from procedures  where  procedures.Cost > 1000  or  physician.Name = \"文翰\" "
  },
  {
    "NatSQL": "select procedures.Name from procedures  where  procedures.Cost > 1000  or  physician.Name = \"文翰\" "
  },
  {
    "NatSQL": "select procedures.Name from procedures  where  procedures.Cost > 1000  and  physician.Name != \"文翰\" "
  },
  {
    "NatSQL": "select procedures.Name from procedures  where  procedures.Cost > 1000  and  physician.Name != \"文翰\" "
  },
  {
    "NatSQL": "select procedures.Name from procedures  where  procedures.Cost < 5000  and  physician.Name = \"文翰\" "
  },
  {
    "NatSQL": "select procedures.Name from procedures  where  procedures.Cost < 5000  and  physician.Name = \"文翰\" "
  },
  {
    "NatSQL": "select physician.Name from physician  where  @.@ join affiliated_with.*  and  department.Name = \"外科\"  and  @.@ join affiliated_with.*  and  department.Name = \"精神科\" "
  },
  {
    "NatSQL": "select physician.Name from physician  where  @.@ join affiliated_with.*  and  department.Name = \"外科\"  and  @.@ join affiliated_with.*  and  department.Name = \"精神科\" "
  },
  {
    "NatSQL": "select physician.Name from physician  where  @.@ join affiliated_with.*  and  department.Name = \"外科\"  or  department.Name = \"精神科\" "
  },
  {
    "NatSQL": "select physician.Name from physician  where  @.@ join affiliated_with.*  and  department.Name = \"外科\"  or  department.Name = \"精神科\" "
  },
  {
    "NatSQL": "select patient.Name from patient  where  except_  @.@ is medication.*  and  medication.Name = \"扑热息痛\" "
  },
  {
    "NatSQL": "select patient.Name from patient  where  except_  @.@ is medication.*  and  medication.Name = \"扑热息痛\" "
  },
  {
    "NatSQL": "select count ( patient.* )  from patient  where  @.@ not in prescribes.*  and  medication.Name = \"扑热息痛\" "
  },
  {
    "NatSQL": "select count ( patient.* )  from patient  where  @.@ not in prescribes.*  and  medication.Name = \"扑热息痛\" "
  },
  {
    "NatSQL": "select count ( appointment.* )  from appointment "
  },
  {
    "NatSQL": "select count ( appointment.* )  from appointment "
  },
  {
    "NatSQL": "select  distinct nurse.Name from nurse  where  @.@ join on_call.* "
  },
  {
    "NatSQL": "select  distinct nurse.Name from nurse  where  @.@ join on_call.* "
  },
  {
    "NatSQL": "select count ( ship.* )  from ship "
  },
  {
    "NatSQL": "select count ( ship.* )  from ship "
  },
  {
    "NatSQL": "select ship.Name from ship  order by ship.Tonnage asc"
  },
  {
    "NatSQL": "select ship.Name from ship  order by ship.Tonnage asc"
  },
  {
    "NatSQL": "select ship.Type , ship.Nationality from ship "
  },
  {
    "NatSQL": "select ship.Type , ship.Nationality from ship "
  },
  {
    "NatSQL": "select ship.Name from ship  where  ship.Nationality != \"美国\" "
  },
  {
    "NatSQL": "select ship.Name from ship  where  ship.Nationality != \"美国\" "
  },
  {
    "NatSQL": "select ship.Name from ship  where  ship.Nationality = \"美国\"  or  ship.Nationality = \"英国\" "
  },
  {
    "NatSQL": "select ship.Name from ship  where  ship.Nationality = \"美国\"  or  ship.Nationality = \"英国\" "
  },
  {
    "NatSQL": "select ship.Name from ship  order by ship.Tonnage desc limit 1"
  },
  {
    "NatSQL": "select ship.Name from ship  order by ship.Tonnage desc limit 1"
  },
  {
    "NatSQL": "select ship.Type , count ( ship.* )  from ship  group by ship.Type "
  },
  {
    "NatSQL": "select ship.Type , count ( ship.* )  from ship  group by ship.Type "
  },
  {
    "NatSQL": "select ship.Type from ship  group by ship.Type  order by count ( ship.* )  desc limit 1"
  },
  {
    "NatSQL": "select ship.Type from ship  group by ship.Type  order by count ( ship.* )  desc limit 1"
  },
  {
    "NatSQL": "select ship.Nationality from ship  where  count ( ship.* )  > 2  group by ship.Nationality "
  },
  {
    "NatSQL": "select ship.Nationality from ship  where  count ( ship.* )  > 2  group by ship.Nationality "
  },
  {
    "NatSQL": "select ship.Type , avg ( ship.Tonnage )  from ship  group by ship.Type "
  },
  {
    "NatSQL": "select ship.Type , avg ( ship.Tonnage )  from ship  group by ship.Type "
  },
  {
    "NatSQL": "select mission.Code , mission.Fate , ship.Name from mission "
  },
  {
    "NatSQL": "select mission.Code , mission.Fate , ship.Name from mission "
  },
  {
    "NatSQL": "select ship.Name from mission  where  mission.Launched_Year > 1928 "
  },
  {
    "NatSQL": "select ship.Name from mission  where  mission.Launched_Year > 1928 "
  },
  {
    "NatSQL": "select  distinct mission.Fate from mission  where  ship.Nationality = \"美国\" "
  },
  {
    "NatSQL": "select  distinct mission.Fate from mission  where  ship.Nationality = \"美国\" "
  },
  {
    "NatSQL": "select ship.Name from ship  where  @.@ not in mission.* "
  },
  {
    "NatSQL": "select ship.Name from ship  where  @.@ not in mission.* "
  },
  {
    "NatSQL": "select ship.Type from ship  where  ship.Tonnage > 6000  and  ship.Tonnage < 4000 "
  },
  {
    "NatSQL": "select ship.Type from ship  where  ship.Tonnage > 6000  and  ship.Tonnage < 4000 "
  },
  {
    "NatSQL": "select count ( list.* )  from list "
  },
  {
    "NatSQL": "select count ( list.* )  from list "
  },
  {
    "NatSQL": "select list.LastName from list  where  list.Classroom = 111 "
  },
  {
    "NatSQL": "select list.LastName from list  where  list.Classroom = 111 "
  },
  {
    "NatSQL": "select list.FirstName from list  where  list.Classroom = 108 "
  },
  {
    "NatSQL": "select list.FirstName from list  where  list.Classroom = 108 "
  },
  {
    "NatSQL": "select  distinct list.FirstName from list  where  list.Classroom = 107 "
  },
  {
    "NatSQL": "select  distinct list.FirstName from list  where  list.Classroom = 107 "
  },
  {
    "NatSQL": "select  distinct list.Classroom , list.Grade from list "
  },
  {
    "NatSQL": "select  distinct list.Classroom , list.Grade from list "
  },
  {
    "NatSQL": "select  distinct list.Grade from list  where  list.Classroom = 103 "
  },
  {
    "NatSQL": "select  distinct list.Grade from list  where  list.Classroom = 103 "
  },
  {
    "NatSQL": "select  distinct list.Grade from list  where  list.Classroom = 105 "
  },
  {
    "NatSQL": "select  distinct list.Grade from list  where  list.Classroom = 105 "
  },
  {
    "NatSQL": "select  distinct list.Classroom from list  where  list.Grade = 4 "
  },
  {
    "NatSQL": "select  distinct list.Classroom from list  where  list.Grade = 4 "
  },
  {
    "NatSQL": "select  distinct list.Classroom from list  where  list.Grade = 5 "
  },
  {
    "NatSQL": "select  distinct list.Classroom from list  where  list.Grade = 5 "
  },
  {
    "NatSQL": "select  distinct teachers.LastName from list  where  list.Grade = 5 "
  },
  {
    "NatSQL": "select  distinct teachers.LastName from list  where  list.Grade = 5 "
  },
  {
    "NatSQL": "select  distinct teachers.FirstName from list  where  list.Grade = 1 "
  },
  {
    "NatSQL": "select  distinct teachers.FirstName from list  where  list.Grade = 1 "
  },
  {
    "NatSQL": "select teachers.FirstName from teachers  where  teachers.Classroom = 110 "
  },
  {
    "NatSQL": "select teachers.FirstName from teachers  where  teachers.Classroom = 110 "
  },
  {
    "NatSQL": "select teachers.LastName from teachers  where  teachers.Classroom = 109 "
  },
  {
    "NatSQL": "select teachers.LastName from teachers  where  teachers.Classroom = 109 "
  },
  {
    "NatSQL": "select  distinct teachers.FirstName , teachers.LastName from teachers "
  },
  {
    "NatSQL": "select  distinct teachers.FirstName , teachers.LastName from teachers "
  },
  {
    "NatSQL": "select  distinct list.FirstName , list.LastName from list "
  },
  {
    "NatSQL": "select  distinct list.FirstName , list.LastName from list "
  },
  {
    "NatSQL": "select list.FirstName , list.LastName from list  where  teachers.FirstName = \"张\"  and  teachers.LastName = \"亮\" "
  },
  {
    "NatSQL": "select list.FirstName , list.LastName from list  where  teachers.FirstName = \"张\"  and  teachers.LastName = \"亮\" "
  },
  {
    "NatSQL": "select list.FirstName , list.LastName from list  where  teachers.FirstName = \"孙\"  and  teachers.LastName = \"克\" "
  },
  {
    "NatSQL": "select list.FirstName , list.LastName from list  where  teachers.FirstName = \"孙\"  and  teachers.LastName = \"克\" "
  },
  {
    "NatSQL": "select teachers.FirstName , teachers.LastName from list  where  list.FirstName = \"刘\"  and  list.LastName = \"磊\" "
  },
  {
    "NatSQL": "select teachers.FirstName , teachers.LastName from list  where  list.FirstName = \"刘\"  and  list.LastName = \"磊\" "
  },
  {
    "NatSQL": "select teachers.LastName from list  where  list.FirstName = \"吴\"  and  list.LastName = \"琼\" "
  },
  {
    "NatSQL": "select teachers.LastName from list  where  list.FirstName = \"吴\"  and  list.LastName = \"琼\" "
  },
  {
    "NatSQL": "select count ( list.* )  from list  where  teachers.FirstName = \"林\"  and  teachers.LastName = \"小华\" "
  },
  {
    "NatSQL": "select count ( list.* )  from list  where  teachers.FirstName = \"林\"  and  teachers.LastName = \"小华\" "
  },
  {
    "NatSQL": "select count ( list.* )  from list  where  teachers.FirstName = \"卫\"  and  teachers.LastName = \"聪\" "
  },
  {
    "NatSQL": "select count ( list.* )  from list  where  teachers.FirstName = \"卫\"  and  teachers.LastName = \"聪\" "
  },
  {
    "NatSQL": "select count ( list.* )  from list  where  teachers.FirstName = \"沈\"  and  teachers.LastName = \"丽雅\" "
  },
  {
    "NatSQL": "select count ( list.* )  from list  where  teachers.FirstName = \"沈\"  and  teachers.LastName = \"丽雅\" "
  },
  {
    "NatSQL": "select count ( teachers.* )  from list  where  list.FirstName = \"王\"  and  list.LastName = \"小帅\" "
  },
  {
    "NatSQL": "select count ( teachers.* )  from list  where  list.FirstName = \"王\"  and  list.LastName = \"小帅\" "
  },
  {
    "NatSQL": "select count ( teachers.* )  from list  where  list.FirstName = \"郑\"  and  list.LastName = \"小强\" "
  },
  {
    "NatSQL": "select count ( teachers.* )  from list  where  list.FirstName = \"郑\"  and  list.LastName = \"小强\" "
  },
  {
    "NatSQL": "select  distinct list.FirstName , list.LastName from list  where  @.@ join teachers.*  and  list.Grade = 1  and  teachers.FirstName != \"张\"  and  teachers.LastName = \"亮\" "
  },
  {
    "NatSQL": "select  distinct list.FirstName , list.LastName from list  where  @.@ join teachers.*  and  list.Grade = 1  and  teachers.FirstName != \"张\"  and  teachers.LastName = \"亮\" "
  },
  {
    "NatSQL": "select  distinct list.LastName from list  where  list.Grade = 3  and  teachers.FirstName != \"孙\"  and  teachers.LastName != \"晓军\" "
  },
  {
    "NatSQL": "select  distinct list.LastName from list  where  list.Grade = 3  and  teachers.FirstName != \"孙\"  and  teachers.LastName != \"晓军\" "
  },
  {
    "NatSQL": "select list.Grade , count (  distinct list.Classroom )  , count ( list.* )  from list  group by list.Grade "
  },
  {
    "NatSQL": "select list.Grade , count (  distinct list.Classroom )  , count ( list.* )  from list  group by list.Grade "
  },
  {
    "NatSQL": "select list.Classroom , count (  distinct list.Grade )  from list  group by list.Classroom "
  },
  {
    "NatSQL": "select list.Classroom , count (  distinct list.Grade )  from list  group by list.Classroom "
  },
  {
    "NatSQL": "select list.Classroom from list  group by list.Classroom  order by count ( list.* )  desc limit 1"
  },
  {
    "NatSQL": "select list.Classroom from list  group by list.Classroom  order by count ( list.* )  desc limit 1"
  },
  {
    "NatSQL": "select list.Classroom , count ( list.* )  from list  group by list.Classroom "
  },
  {
    "NatSQL": "select list.Classroom , count ( list.* )  from list  group by list.Classroom "
  },
  {
    "NatSQL": "select list.Classroom , count ( list.* )  from list  where  list.Grade = \"0\"  group by list.Classroom "
  },
  {
    "NatSQL": "select list.Classroom , count ( list.* )  from list  where  list.Grade = \"0\"  group by list.Classroom "
  },
  {
    "NatSQL": "select list.Classroom , count ( list.* )  from list  where  list.Grade = \"4\"  group by list.Classroom "
  },
  {
    "NatSQL": "select list.Classroom , count ( list.* )  from list  where  list.Grade = \"4\"  group by list.Classroom "
  },
  {
    "NatSQL": "select teachers.FirstName , teachers.LastName from list  group by teachers.FirstName , teachers.LastName  order by count ( list.* )  desc limit 1"
  },
  {
    "NatSQL": "select teachers.FirstName , teachers.LastName from list  group by teachers.FirstName , teachers.LastName  order by count ( list.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( list.* )  , list.Classroom from list  group by list.Classroom "
  },
  {
    "NatSQL": "select count ( list.* )  , list.Classroom from list  group by list.Classroom "
  },
  {
    "NatSQL": "select count ( company.* )  from company  where  company.Headquarters = \"中国\" "
  },
  {
    "NatSQL": "select company.Name from company  order by company.Sales_in_Billion asc"
  },
  {
    "NatSQL": "select company.Headquarters , company.Industry from company "
  },
  {
    "NatSQL": "select company.Name from company  where  company.Industry = \"银行业\"  or  company.Industry = \"零售\" "
  },
  {
    "NatSQL": "select max ( company.Market_Value_in_Billion )  , min ( company.Market_Value_in_Billion )  from company "
  },
  {
    "NatSQL": "select company.Headquarters from company  order by company.Sales_in_Billion desc limit 1"
  },
  {
    "NatSQL": "select company.Headquarters , count ( company.* )  from company  group by company.Headquarters "
  },
  {
    "NatSQL": "select company.Headquarters from company  group by company.Headquarters  order by count ( company.* )  desc limit 1"
  },
  {
    "NatSQL": "select company.Headquarters from company  where  count ( company.* )  >= 2  group by company.Headquarters "
  },
  {
    "NatSQL": "select company.Headquarters from company  where  company.Industry = \"银行业\"  and  company.Industry = \"天然气\" "
  },
  {
    "NatSQL": "select company.Name , people.Name from employment "
  },
  {
    "NatSQL": "select company.Name , people.Name from employment  order by employment.Year_working asc"
  },
  {
    "NatSQL": "select people.Name from employment  where  company.Sales_in_Billion > 200 "
  },
  {
    "NatSQL": "select company.Name , count ( people.* )  from employment  group by company.Name "
  },
  {
    "NatSQL": "select people.Name from people  where  @.@ not in employment.* "
  },
  {
    "NatSQL": "select company.Name from company  where  company.Sales_in_Billion > 200  order by company.Sales_in_Billion , company.Profits_in_Billion desc"
  },
  {
    "NatSQL": "select count ( film.* )  from film "
  },
  {
    "NatSQL": "select count ( film.* )  from film "
  },
  {
    "NatSQL": "select  distinct film.Director from film "
  },
  {
    "NatSQL": "select  distinct film.Director from film "
  },
  {
    "NatSQL": "select avg ( film.Gross_in_dollar )  from film "
  },
  {
    "NatSQL": "select avg ( film.Gross_in_dollar )  from film "
  },
  {
    "NatSQL": "select film_market_estimation.Low_Estimate , film_market_estimation.High_Estimate from film_market_estimation "
  },
  {
    "NatSQL": "select film_market_estimation.Low_Estimate , film_market_estimation.High_Estimate from film_market_estimation "
  },
  {
    "NatSQL": "select film_market_estimation.Type from film_market_estimation  where  film_market_estimation.Year = 1995 "
  },
  {
    "NatSQL": "select film_market_estimation.Type from film_market_estimation  where  film_market_estimation.Year = 1995 "
  },
  {
    "NatSQL": "select max ( market.Number_cities )  , min ( market.Number_cities )  from market "
  },
  {
    "NatSQL": "select max ( market.Number_cities )  , min ( market.Number_cities )  from market "
  },
  {
    "NatSQL": "select count ( market.* )  from market  where  market.Number_cities < 300 "
  },
  {
    "NatSQL": "select count ( market.* )  from market  where  market.Number_cities < 300 "
  },
  {
    "NatSQL": "select market.Country from market  order by market.Country asc"
  },
  {
    "NatSQL": "select market.Country from market  order by market.Country asc"
  },
  {
    "NatSQL": "select market.Country from market  order by market.Number_cities desc"
  },
  {
    "NatSQL": "select market.Country from market  order by market.Number_cities desc"
  },
  {
    "NatSQL": "select film.Title , film_market_estimation.Type from film "
  },
  {
    "NatSQL": "select film.Title , film_market_estimation.Type from film "
  },
  {
    "NatSQL": "select  distinct film.Director from film  where  film_market_estimation.Year = 1995 "
  },
  {
    "NatSQL": "select  distinct film.Director from film  where  film_market_estimation.Year = 1995 "
  },
  {
    "NatSQL": "select avg ( market.Number_cities )  from film_market_estimation  where  film_market_estimation.Low_Estimate > 10000 "
  },
  {
    "NatSQL": "select avg ( market.Number_cities )  from film_market_estimation  where  film_market_estimation.Low_Estimate > 10000 "
  },
  {
    "NatSQL": "select market.Country , film_market_estimation.Year from film_market_estimation "
  },
  {
    "NatSQL": "select market.Country , film_market_estimation.Year from film_market_estimation "
  },
  {
    "NatSQL": "select film_market_estimation.Year from film_market_estimation  where  market.Country = \"日本\"  order by film_market_estimation.Year desc"
  },
  {
    "NatSQL": "select film_market_estimation.Year from film_market_estimation  where  market.Country = \"日本\"  order by film_market_estimation.Year desc"
  },
  {
    "NatSQL": "select film.Studio , count ( film.* )  from film  group by film.Studio "
  },
  {
    "NatSQL": "select film.Studio , count ( film.* )  from film  group by film.Studio "
  },
  {
    "NatSQL": "select film.Studio from film  group by film.Studio  order by count ( film.* )  desc limit 1"
  },
  {
    "NatSQL": "select film.Studio from film  group by film.Studio  order by count ( film.* )  desc limit 1"
  },
  {
    "NatSQL": "select film.Studio from film  where  count ( film.* )  >= 2  group by film.Studio "
  },
  {
    "NatSQL": "select film.Studio from film  where  count ( film.* )  >= 2  group by film.Studio "
  },
  {
    "NatSQL": "select film.Title from film  where  @.@ not in film_market_estimation.* "
  },
  {
    "NatSQL": "select film.Title from film  where  @.@ not in film_market_estimation.* "
  },
  {
    "NatSQL": "select film.Studio from film  where  film.Director = \"姜文\"  and  film.Director = \"李安\" "
  },
  {
    "NatSQL": "select film.Studio from film  where  film.Director = \"姜文\"  and  film.Director = \"李安\" "
  },
  {
    "NatSQL": "select film.Title , film.Studio from film  where  film.Studio like \"华谊\" "
  },
  {
    "NatSQL": "select film.Title , film.Studio from film  where  film.Studio like \"华谊\" "
  },
  {
    "NatSQL": "select film.Studio from film  where  except_  @.@ is film.*  and  film.Director = \"李安\" "
  },
  {
    "NatSQL": "select film.Studio from film  where  except_  @.@ is film.*  and  film.Director = \"李安\" "
  },
  {
    "NatSQL": "select film.Studio from film  where  avg ( film.Gross_in_dollar )  >= 4500000  group by film.Studio "
  },
  {
    "NatSQL": "select film.Studio from film  where  avg ( film.Gross_in_dollar )  >= 4500000  group by film.Studio "
  },
  {
    "NatSQL": "select film.Title from film  order by film_market_estimation.High_Estimate desc limit 1"
  },
  {
    "NatSQL": "select film.Title from film  order by film_market_estimation.High_Estimate desc limit 1"
  },
  {
    "NatSQL": "select film.Title , film.Director from film  where  @.@ not in film_market_estimation.*  and  market.Country = \"中国\" "
  },
  {
    "NatSQL": "select film.Title , film.Director from film  where  @.@ not in film_market_estimation.*  and  market.Country = \"中国\" "
  },
  {
    "NatSQL": "select count ( ref_calendar.* )  from ref_calendar "
  },
  {
    "NatSQL": "select count ( ref_calendar.* )  from ref_calendar "
  },
  {
    "NatSQL": "select ref_calendar.Calendar_Date , ref_calendar.Day_Number from ref_calendar "
  },
  {
    "NatSQL": "select ref_calendar.Calendar_Date , ref_calendar.Day_Number from ref_calendar "
  },
  {
    "NatSQL": "select count ( ref_document_types.* )  from ref_document_types "
  },
  {
    "NatSQL": "select count ( ref_document_types.* )  from ref_document_types "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Code , ref_document_types.Document_Type_Name from ref_document_types "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Code , ref_document_types.Document_Type_Name from ref_document_types "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Name , ref_document_types.Document_Type_Description from ref_document_types  where  ref_document_types.Document_Type_Code = \"RV\" "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Name , ref_document_types.Document_Type_Description from ref_document_types  where  ref_document_types.Document_Type_Code = \"RV\" "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Code from ref_document_types  where  ref_document_types.Document_Type_Name = \"论文\" "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Code from ref_document_types  where  ref_document_types.Document_Type_Name = \"论文\" "
  },
  {
    "NatSQL": "select count ( all_documents.* )  from all_documents  where  all_documents.Document_Type_Code = \"简历\"  or  all_documents.Document_Type_Code = \"通知\" "
  },
  {
    "NatSQL": "select count ( all_documents.* )  from all_documents  where  all_documents.Document_Type_Code = \"简历\"  or  all_documents.Document_Type_Code = \"通知\" "
  },
  {
    "NatSQL": "select all_documents.Date_Stored from all_documents  where  all_documents.Document_Name = \"马丽的简历\" "
  },
  {
    "NatSQL": "select all_documents.Date_Stored from all_documents  where  all_documents.Document_Name = \"马丽的简历\" "
  },
  {
    "NatSQL": "select ref_calendar.Day_Number , all_documents.Date_Stored from all_documents "
  },
  {
    "NatSQL": "select ref_calendar.Day_Number , all_documents.Date_Stored from all_documents "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Name from all_documents  where  all_documents.Document_Name = \"怎样阅读一本书\" "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Name from all_documents  where  all_documents.Document_Name = \"怎样阅读一本书\" "
  },
  {
    "NatSQL": "select count ( ref_locations.* )  from ref_locations "
  },
  {
    "NatSQL": "select count ( ref_locations.* )  from ref_locations "
  },
  {
    "NatSQL": "select ref_locations.Location_Code , ref_locations.Location_Name from ref_locations "
  },
  {
    "NatSQL": "select ref_locations.Location_Code , ref_locations.Location_Name from ref_locations "
  },
  {
    "NatSQL": "select ref_locations.Location_Name , ref_locations.Location_Description from ref_locations  where  ref_locations.Location_Code = \"粤\" "
  },
  {
    "NatSQL": "select ref_locations.Location_Name , ref_locations.Location_Description from ref_locations  where  ref_locations.Location_Code = \"粤\" "
  },
  {
    "NatSQL": "select ref_locations.Location_Code from ref_locations  where  ref_locations.Location_Name = \"加拿大\" "
  },
  {
    "NatSQL": "select ref_locations.Location_Code from ref_locations  where  ref_locations.Location_Name = \"加拿大\" "
  },
  {
    "NatSQL": "select count ( roles.* )  from roles "
  },
  {
    "NatSQL": "select count ( roles.* )  from roles "
  },
  {
    "NatSQL": "select roles.Role_Code , roles.Role_Name , roles.Role_Description from roles "
  },
  {
    "NatSQL": "select roles.Role_Code , roles.Role_Name , roles.Role_Description from roles "
  },
  {
    "NatSQL": "select roles.Role_Name , roles.Role_Description from roles  where  roles.Role_Code = \"经理\" "
  },
  {
    "NatSQL": "select roles.Role_Name , roles.Role_Description from roles  where  roles.Role_Code = \"经理\" "
  },
  {
    "NatSQL": "select roles.Role_Description from roles  where  roles.Role_Name = \"校对员\" "
  },
  {
    "NatSQL": "select roles.Role_Description from roles  where  roles.Role_Name = \"校对员\" "
  },
  {
    "NatSQL": "select count ( employees.* )  from employees "
  },
  {
    "NatSQL": "select count ( employees.* )  from employees "
  },
  {
    "NatSQL": "select employees.Employee_Name , employees.Role_Code , employees.Date_of_Birth from employees  where  employees.Employee_Name = \"琦琦\" "
  },
  {
    "NatSQL": "select employees.Employee_Name , employees.Role_Code , employees.Date_of_Birth from employees  where  employees.Employee_Name = \"琦琦\" "
  },
  {
    "NatSQL": "select employees.Employee_ID from employees  where  employees.Employee_Name = \"琳琳\" "
  },
  {
    "NatSQL": "select employees.Employee_ID from employees  where  employees.Employee_Name = \"琳琳\" "
  },
  {
    "NatSQL": "select employees.Employee_Name from employees  where  employees.Role_Code = \"人力资源\" "
  },
  {
    "NatSQL": "select employees.Employee_Name from employees  where  employees.Role_Code = \"人力资源\" "
  },
  {
    "NatSQL": "select employees.Role_Code , count ( employees.* )  from employees  group by employees.Role_Code "
  },
  {
    "NatSQL": "select employees.Role_Code , count ( employees.* )  from employees  group by employees.Role_Code "
  },
  {
    "NatSQL": "select employees.Role_Code from employees  group by employees.Role_Code  order by count ( employees.* )  desc limit 1"
  },
  {
    "NatSQL": "select employees.Role_Code from employees  group by employees.Role_Code  order by count ( employees.* )  desc limit 1"
  },
  {
    "NatSQL": "select employees.Role_Code from employees  where  count ( employees.* )  >= 3  group by employees.Role_Code "
  },
  {
    "NatSQL": "select employees.Role_Code from employees  where  count ( employees.* )  >= 3  group by employees.Role_Code "
  },
  {
    "NatSQL": "select employees.Role_Code from employees  group by employees.Role_Code  order by count ( employees.* )  asc limit 1"
  },
  {
    "NatSQL": "select employees.Role_Code from employees  group by employees.Role_Code  order by count ( employees.* )  asc limit 1"
  },
  {
    "NatSQL": "select roles.Role_Name , roles.Role_Description from employees  where  employees.Employee_Name = \"琳琳\" "
  },
  {
    "NatSQL": "select roles.Role_Name , roles.Role_Description from employees  where  employees.Employee_Name = \"琳琳\" "
  },
  {
    "NatSQL": "select employees.Employee_Name from employees  where  roles.Role_Name = \"编辑\" "
  },
  {
    "NatSQL": "select employees.Employee_Name from employees  where  roles.Role_Name = \"编辑\" "
  },
  {
    "NatSQL": "select employees.Employee_ID from employees  where  roles.Role_Name = \"人力资源\"  or  roles.Role_Name = \"经理\" "
  },
  {
    "NatSQL": "select employees.Employee_ID from employees  where  roles.Role_Name = \"人力资源\"  or  roles.Role_Name = \"经理\" "
  },
  {
    "NatSQL": "select  distinct document_locations.Location_Code from document_locations "
  },
  {
    "NatSQL": "select  distinct document_locations.Location_Code from document_locations "
  },
  {
    "NatSQL": "select ref_locations.Location_Name from all_documents  where  @.@ join document_locations.*  and  all_documents.Document_Name = \"罗超的简历\" "
  },
  {
    "NatSQL": "select ref_locations.Location_Name from all_documents  where  @.@ join document_locations.*  and  all_documents.Document_Name = \"罗超的简历\" "
  },
  {
    "NatSQL": "select document_locations.Location_Code , document_locations.Date_in_Location_From , document_locations.Date_in_Locaton_To from document_locations "
  },
  {
    "NatSQL": "select document_locations.Location_Code , document_locations.Date_in_Location_From , document_locations.Date_in_Locaton_To from document_locations "
  },
  {
    "NatSQL": "select document_locations.Date_in_Location_From , document_locations.Date_in_Locaton_To from document_locations  where  all_documents.Document_Name = \"罗超的简历\" "
  },
  {
    "NatSQL": "select document_locations.Date_in_Location_From , document_locations.Date_in_Locaton_To from document_locations  where  all_documents.Document_Name = \"罗超的简历\" "
  },
  {
    "NatSQL": "select document_locations.Location_Code , count ( document_locations.* )  from document_locations  group by document_locations.Location_Code "
  },
  {
    "NatSQL": "select document_locations.Location_Code , count ( document_locations.* )  from document_locations  group by document_locations.Location_Code "
  },
  {
    "NatSQL": "select document_locations.Location_Code from document_locations  group by document_locations.Location_Code  order by count ( document_locations.* )  desc limit 1"
  },
  {
    "NatSQL": "select document_locations.Location_Code from document_locations  group by document_locations.Location_Code  order by count ( document_locations.* )  desc limit 1"
  },
  {
    "NatSQL": "select document_locations.Location_Code from document_locations  where  count ( document_locations.* )  >= 3  group by document_locations.Location_Code "
  },
  {
    "NatSQL": "select document_locations.Location_Code from document_locations  where  count ( document_locations.* )  >= 3  group by document_locations.Location_Code "
  },
  {
    "NatSQL": "select ref_locations.Location_Name , document_locations.Location_Code from document_locations  group by document_locations.Location_Code  order by count ( document_locations.* )  asc limit 1"
  },
  {
    "NatSQL": "select ref_locations.Location_Name , document_locations.Location_Code from document_locations  group by document_locations.Location_Code  order by count ( document_locations.* )  asc limit 1"
  },
  {
    "NatSQL": "select employees.Employee_Name , employees.Employee_Name from documents_to_be_destroyed "
  },
  {
    "NatSQL": "select employees.Employee_Name , employees.Employee_Name from documents_to_be_destroyed "
  },
  {
    "NatSQL": "select documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID , count ( documents_to_be_destroyed.* )  from documents_to_be_destroyed  group by documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID "
  },
  {
    "NatSQL": "select documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID , count ( documents_to_be_destroyed.* )  from documents_to_be_destroyed  group by documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID "
  },
  {
    "NatSQL": "select documents_to_be_destroyed.Destroyed_by_Employee_ID , count ( documents_to_be_destroyed.* )  from documents_to_be_destroyed  group by documents_to_be_destroyed.Destroyed_by_Employee_ID "
  },
  {
    "NatSQL": "select documents_to_be_destroyed.Destroyed_by_Employee_ID , count ( documents_to_be_destroyed.* )  from documents_to_be_destroyed  group by documents_to_be_destroyed.Destroyed_by_Employee_ID "
  },
  {
    "NatSQL": "select employees.Employee_ID from employees  where  except_  @.@ is documents_to_be_destroyed.* "
  },
  {
    "NatSQL": "select employees.Employee_ID from employees  where  except_  @.@ is documents_to_be_destroyed.* "
  },
  {
    "NatSQL": "select  distinct documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID from documents_to_be_destroyed "
  },
  {
    "NatSQL": "select  distinct documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID from documents_to_be_destroyed "
  },
  {
    "NatSQL": "select  distinct documents_to_be_destroyed.Destroyed_by_Employee_ID from documents_to_be_destroyed "
  },
  {
    "NatSQL": "select  distinct documents_to_be_destroyed.Destroyed_by_Employee_ID from documents_to_be_destroyed "
  },
  {
    "NatSQL": "select employees.Employee_ID from employees  where  except_  @.@ is documents_to_be_destroyed.* "
  },
  {
    "NatSQL": "select employees.Employee_ID from employees  where  except_  @.@ is documents_to_be_destroyed.* "
  },
  {
    "NatSQL": "select documents_to_be_destroyed.Destroyed_by_Employee_ID from documents_to_be_destroyed  where  union_  @.@ is documents_to_be_destroyed.* "
  },
  {
    "NatSQL": "select documents_to_be_destroyed.Destroyed_by_Employee_ID from documents_to_be_destroyed  where  union_  @.@ is documents_to_be_destroyed.* "
  },
  {
    "NatSQL": "select count ( club.* )  from club "
  },
  {
    "NatSQL": "select count ( club.* )  from club "
  },
  {
    "NatSQL": "select club.ClubName from club "
  },
  {
    "NatSQL": "select club.ClubName from club "
  },
  {
    "NatSQL": "select count ( student.* )  from student "
  },
  {
    "NatSQL": "select count ( student.* )  from student "
  },
  {
    "NatSQL": "select  distinct student.Fname from student "
  },
  {
    "NatSQL": "select  distinct student.Fname from student "
  },
  {
    "NatSQL": "select student.LName from club  where  club.ClubName = \"赛车\" "
  },
  {
    "NatSQL": "select student.LName from club  where  club.ClubName = \"赛车\" "
  },
  {
    "NatSQL": "select student.LName from club  where  club.ClubName = \"北大创业俱乐部\" "
  },
  {
    "NatSQL": "select student.LName from club  where  club.ClubName = \"北大创业俱乐部\" "
  },
  {
    "NatSQL": "select count ( member_of_club.* )  from club  where  @.@ join student.*  and  club.ClubName = \"网球俱乐部\" "
  },
  {
    "NatSQL": "select count ( member_of_club.* )  from club  where  @.@ join student.*  and  club.ClubName = \"网球俱乐部\" "
  },
  {
    "NatSQL": "select count ( member_of_club.* )  from club  where  @.@ join student.*  and  club.ClubName = \"文学\" "
  },
  {
    "NatSQL": "select count ( member_of_club.* )  from club  where  @.@ join student.*  and  club.ClubName = \"文学\" "
  },
  {
    "NatSQL": "select count ( club.* )  from club  where  student.Fname = \"天天\"  and  student.LName = \"帅\" "
  },
  {
    "NatSQL": "select count ( club.* )  from club  where  student.Fname = \"天天\"  and  student.LName = \"帅\" "
  },
  {
    "NatSQL": "select count ( club.* )  from club  where  student.Fname = \"金\"  and  student.LName = \"洋\" "
  },
  {
    "NatSQL": "select count ( club.* )  from club  where  student.Fname = \"金\"  and  student.LName = \"洋\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from club  where  club.ClubName = \"赛车\"  and  student.Sex = \"F\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from club  where  club.ClubName = \"赛车\"  and  student.Sex = \"F\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from club  where  club.ClubName = \"北大创业俱乐部\"  and  student.Sex = \"男\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from club  where  club.ClubName = \"北大创业俱乐部\"  and  student.Sex = \"男\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from club  where  club.ClubName = \"赛车\"  and  student.Major = \"600\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from club  where  club.ClubName = \"赛车\"  and  student.Major = \"600\" "
  },
  {
    "NatSQL": "select club.ClubName from club  where  student.Major = \"600\"  group by club.ClubName  order by count ( club.* )  desc limit 1"
  },
  {
    "NatSQL": "select club.ClubName from club  where  student.Major = \"600\"  group by club.ClubName  order by count ( club.* )  desc limit 1"
  },
  {
    "NatSQL": "select club.ClubName from club  where  student.Sex = \"F\"  group by club.ClubName  order by count ( club.* )  desc limit 1"
  },
  {
    "NatSQL": "select club.ClubName from club  where  student.Sex = \"F\"  group by club.ClubName  order by count ( club.* )  desc limit 1"
  },
  {
    "NatSQL": "select club.ClubDesc from club  where  club.ClubName = \"网球俱乐部\" "
  },
  {
    "NatSQL": "select club.ClubDesc from club  where  club.ClubName = \"网球俱乐部\" "
  },
  {
    "NatSQL": "select club.ClubDesc from club  where  club.ClubName = \"文学\" "
  },
  {
    "NatSQL": "select club.ClubDesc from club  where  club.ClubName = \"文学\" "
  },
  {
    "NatSQL": "select club.ClubLocation from club  where  club.ClubName = \"网球俱乐部\" "
  },
  {
    "NatSQL": "select club.ClubLocation from club  where  club.ClubName = \"网球俱乐部\" "
  },
  {
    "NatSQL": "select club.ClubLocation from club  where  club.ClubName = \"文学\" "
  },
  {
    "NatSQL": "select club.ClubLocation from club  where  club.ClubName = \"文学\" "
  },
  {
    "NatSQL": "select club.ClubLocation from club  where  club.ClubName = \"北大创业俱乐部\" "
  },
  {
    "NatSQL": "select club.ClubLocation from club  where  club.ClubName = \"北大创业俱乐部\" "
  },
  {
    "NatSQL": "select club.ClubName from club  where  club.ClubLocation = \"济南\" "
  },
  {
    "NatSQL": "select club.ClubName from club  where  club.ClubLocation = \"济南\" "
  },
  {
    "NatSQL": "select count ( club.* )  from club  where  club.ClubLocation = \"杭州\" "
  },
  {
    "NatSQL": "select count ( club.* )  from club  where  club.ClubLocation = \"杭州\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from club  where  club.ClubName = \"赛车\"  and  member_of_club.Position = \"主席\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from club  where  club.ClubName = \"赛车\"  and  member_of_club.Position = \"主席\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from club  where  club.ClubName = \"北大创业俱乐部\"  and  member_of_club.Position = \"CTO\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from club  where  club.ClubName = \"北大创业俱乐部\"  and  member_of_club.Position = \"CTO\" "
  },
  {
    "NatSQL": "select count (  distinct member_of_club.Position )  from club  where  club.ClubName = \"赛车\" "
  },
  {
    "NatSQL": "select count (  distinct member_of_club.Position )  from club  where  club.ClubName = \"赛车\" "
  },
  {
    "NatSQL": "select count ( club.* )  from club  where  club.ClubName = \"赛车\"  and  student.Age > 18 "
  },
  {
    "NatSQL": "select count ( club.* )  from club  where  club.ClubName = \"赛车\"  and  student.Age > 18 "
  },
  {
    "NatSQL": "select count ( club.* )  from club  where  club.ClubName = \"赛车\"  and  student.Age < 18 "
  },
  {
    "NatSQL": "select count ( club.* )  from club  where  club.ClubName = \"赛车\"  and  student.Age < 18 "
  },
  {
    "NatSQL": "select  distinct club.ClubName from club  where  student.city_code = \"武汉\" "
  },
  {
    "NatSQL": "select  distinct club.ClubName from club  where  student.city_code = \"武汉\" "
  },
  {
    "NatSQL": "select  distinct club.ClubName from club  where  student.city_code = \"重庆\" "
  },
  {
    "NatSQL": "select  distinct club.ClubName from club  where  student.city_code = \"重庆\" "
  },
  {
    "NatSQL": "select count (  distinct club.ClubName )  from club  where  student.Fname = \"代\"  and  student.LName = \"兵\" "
  },
  {
    "NatSQL": "select count (  distinct club.ClubName )  from club  where  student.Fname = \"代\"  and  student.LName = \"兵\" "
  },
  {
    "NatSQL": "select  distinct club.ClubName from club  where  student.Fname = \"秦\"  and  student.LName = \"小明\" "
  },
  {
    "NatSQL": "select  distinct club.ClubName from club  where  student.Fname = \"秦\"  and  student.LName = \"小明\" "
  },
  {
    "NatSQL": "select  distinct club.ClubName from club  where  student.Advisor = 1121 "
  },
  {
    "NatSQL": "select  distinct club.ClubName from club  where  student.Advisor = 1121 "
  },
  {
    "NatSQL": "select avg ( student.Age )  from club  where  club.ClubName = \"赛车\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from club  where  club.ClubName = \"赛车\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from club  where  club.ClubName = \"北大创业俱乐部\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from club  where  club.ClubName = \"北大创业俱乐部\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from club  where  club.ClubName = \"网球俱乐部\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from club  where  club.ClubName = \"网球俱乐部\" "
  },
  {
    "NatSQL": "select grants.grant_amount from grants  where  documents.sent_date < \"1986-08-26 20:49:27\"  and  grants.grant_end_date > \"1989-03-16 18:27:16\" "
  },
  {
    "NatSQL": "select grants.grant_amount from grants  where  documents.sent_date < \"1986-08-26 20:49:27\"  and  grants.grant_end_date > \"1989-03-16 18:27:16\" "
  },
  {
    "NatSQL": "select projects.project_details from projects  where  project_outcomes.outcome_code = \"论文\"  and  project_outcomes.outcome_code = \"专利\" "
  },
  {
    "NatSQL": "select projects.project_details from projects  where  project_outcomes.outcome_code = \"论文\"  and  project_outcomes.outcome_code = \"专利\" "
  },
  {
    "NatSQL": "select sum ( grants.grant_amount )  from grants  where  organisation_types.organisation_type_description = \"研究\" "
  },
  {
    "NatSQL": "select sum ( grants.grant_amount )  from grants  where  organisation_types.organisation_type_description = \"研究\" "
  },
  {
    "NatSQL": "select project_staff.date_from , project_staff.date_to from project_staff  where  @.@ in project_staff.project_id  and  count ( project_staff.* )  = max ( project_staff.* )   or  project_staff.role_code = \"领导\" "
  },
  {
    "NatSQL": "select project_staff.date_from , project_staff.date_to from project_staff  where  @.@ in project_staff.project_id  and  count ( project_staff.* )  = max ( project_staff.* )   or  project_staff.role_code = \"领导\" "
  },
  {
    "NatSQL": "select organisations.organisation_id , organisations.organisation_details from grants  where  sum ( grants.grant_amount )  > 6000  group by organisations.organisation_id "
  },
  {
    "NatSQL": "select organisations.organisation_id , organisations.organisation_details from grants  where  sum ( grants.grant_amount )  > 6000  group by organisations.organisation_id "
  },
  {
    "NatSQL": "select organisations.organisation_type , organisations.organisation_id from organisations  group by organisations.organisation_id  order by count ( research_staff.* )  desc limit 1"
  },
  {
    "NatSQL": "select organisations.organisation_type , organisations.organisation_id from organisations  group by organisations.organisation_id  order by count ( research_staff.* )  desc limit 1"
  },
  {
    "NatSQL": "select organisations.organisation_type from organisations  group by organisations.organisation_type  order by count ( research_staff.* )  desc limit 1"
  },
  {
    "NatSQL": "select organisations.organisation_type from organisations  group by organisations.organisation_type  order by count ( research_staff.* )  desc limit 1"
  },
  {
    "NatSQL": "select documents.sent_date from documents  where  grants.grant_amount > 5000  and  organisation_types.organisation_type_description = \"研究\" "
  },
  {
    "NatSQL": "select documents.sent_date from documents  where  grants.grant_amount > 5000  and  organisation_types.organisation_type_description = \"研究\" "
  },
  {
    "NatSQL": "select documents.response_received_date from documents  where  document_types.document_description = \"常规\"  or  grants.grant_amount > 100 "
  },
  {
    "NatSQL": "select documents.response_received_date from documents  where  document_types.document_description = \"常规\"  or  grants.grant_amount > 100 "
  },
  {
    "NatSQL": "select projects.project_details from projects  where  @.@ not in project_staff.*  and  project_staff.role_code = \"研究院\" "
  },
  {
    "NatSQL": "select projects.project_details from projects  where  @.@ not in project_staff.*  and  project_staff.role_code = \"研究院\" "
  },
  {
    "NatSQL": "select tasks.task_details , tasks.task_id , projects.project_id from tasks  where  projects.project_details = \"详细\"  or  count ( project_outcomes.* )  > 2 "
  },
  {
    "NatSQL": "select tasks.task_details , tasks.task_id , projects.project_id from tasks  where  projects.project_details = \"详细\"  or  count ( project_outcomes.* )  > 2 "
  },
  {
    "NatSQL": "select project_staff.date_from , project_staff.date_to from project_staff  where  project_staff.role_code = \"研究院\" "
  },
  {
    "NatSQL": "select project_staff.date_from , project_staff.date_to from project_staff  where  project_staff.role_code = \"研究院\" "
  },
  {
    "NatSQL": "select count (  distinct project_staff.role_code )  from project_staff "
  },
  {
    "NatSQL": "select count (  distinct project_staff.role_code )  from project_staff "
  },
  {
    "NatSQL": "select sum ( grants.grant_amount )  , grants.organisation_id from grants  group by grants.organisation_id "
  },
  {
    "NatSQL": "select sum ( grants.grant_amount )  , grants.organisation_id from grants  group by grants.organisation_id "
  },
  {
    "NatSQL": "select projects.project_details from projects  where  research_outcomes.outcome_description like \"已发表\" "
  },
  {
    "NatSQL": "select projects.project_details from projects  where  research_outcomes.outcome_description like \"已发表\" "
  },
  {
    "NatSQL": "select projects.project_id , count ( project_staff.* )  from project_staff  group by project_staff.project_id  order by count ( project_staff.* )  asc"
  },
  {
    "NatSQL": "select projects.project_id , count ( project_staff.* )  from project_staff  group by project_staff.project_id  order by count ( project_staff.* )  asc"
  },
  {
    "NatSQL": "select staff_roles.role_description from staff_roles  where  staff_roles.role_code = \"研究院\" "
  },
  {
    "NatSQL": "select staff_roles.role_description from staff_roles  where  staff_roles.role_code = \"研究院\" "
  },
  {
    "NatSQL": "select project_staff.date_from from project_staff  order by project_staff.date_from asc limit 1"
  },
  {
    "NatSQL": "select project_staff.date_from from project_staff  order by project_staff.date_from asc limit 1"
  },
  {
    "NatSQL": "select projects.project_details , projects.project_id from projects  group by projects.project_id  order by count ( project_outcomes.* )  desc limit 1"
  },
  {
    "NatSQL": "select projects.project_details , projects.project_id from projects  group by projects.project_id  order by count ( project_outcomes.* )  desc limit 1"
  },
  {
    "NatSQL": "select projects.project_details from projects  where  @.@ not in project_outcomes.* "
  },
  {
    "NatSQL": "select projects.project_details from projects  where  @.@ not in project_outcomes.* "
  },
  {
    "NatSQL": "select organisations.organisation_id , organisations.organisation_type , organisations.organisation_details from organisations  group by organisations.organisation_id  order by count ( research_staff.* )  desc limit 1"
  },
  {
    "NatSQL": "select organisations.organisation_id , organisations.organisation_type , organisations.organisation_details from organisations  group by organisations.organisation_id  order by count ( research_staff.* )  desc limit 1"
  },
  {
    "NatSQL": "select staff_roles.role_description , project_staff.staff_id from staff_roles  group by project_staff.staff_id  order by count ( project_outcomes.* )  desc limit 1"
  },
  {
    "NatSQL": "select staff_roles.role_description , project_staff.staff_id from staff_roles  group by project_staff.staff_id  order by count ( project_outcomes.* )  desc limit 1"
  },
  {
    "NatSQL": "select document_types.document_type_code from document_types  where  document_types.document_description like \"初始\" "
  },
  {
    "NatSQL": "select document_types.document_type_code from document_types  where  document_types.document_description like \"初始\" "
  },
  {
    "NatSQL": "select grants.grant_start_date from grants  where  document_types.document_description = \"常规\"  and  document_types.document_description = \"初始申请\" "
  },
  {
    "NatSQL": "select grants.grant_start_date from grants  where  document_types.document_description = \"常规\"  and  document_types.document_description = \"初始申请\" "
  },
  {
    "NatSQL": "select documents.grant_id , count ( documents.* )  from documents  group by documents.grant_id  order by count ( documents.* )  desc limit 1"
  },
  {
    "NatSQL": "select documents.grant_id , count ( documents.* )  from documents  group by documents.grant_id  order by count ( documents.* )  desc limit 1"
  },
  {
    "NatSQL": "select organisation_types.organisation_type_description from organisation_types  where  organisations.organisation_details = \"运动\" "
  },
  {
    "NatSQL": "select organisation_types.organisation_type_description from organisation_types  where  organisations.organisation_details = \"运动\" "
  },
  {
    "NatSQL": "select organisations.organisation_details from organisations  where  organisation_types.organisation_type_description = \"赞助商\"  order by organisations.organisation_details asc"
  },
  {
    "NatSQL": "select organisations.organisation_details from organisations  where  organisation_types.organisation_type_description = \"赞助商\"  order by organisations.organisation_details asc"
  },
  {
    "NatSQL": "select count ( project_outcomes.* )  from project_outcomes  where  project_outcomes.outcome_code = \"专利\" "
  },
  {
    "NatSQL": "select count ( project_outcomes.* )  from project_outcomes  where  project_outcomes.outcome_code = \"专利\" "
  },
  {
    "NatSQL": "select count ( project_staff.* )  from project_staff  where  project_staff.role_code = \"领导\"  or  project_staff.date_from < \"1989-04-24 23:51:54\" "
  },
  {
    "NatSQL": "select count ( project_staff.* )  from project_staff  where  project_staff.role_code = \"领导\"  or  project_staff.date_from < \"1989-04-24 23:51:54\" "
  },
  {
    "NatSQL": "select project_staff.date_to from project_staff  order by project_staff.date_to desc limit 1"
  },
  {
    "NatSQL": "select project_staff.date_to from project_staff  order by project_staff.date_to desc limit 1"
  },
  {
    "NatSQL": "select research_outcomes.outcome_description from research_outcomes  where  projects.project_details = \"机密\" "
  },
  {
    "NatSQL": "select research_outcomes.outcome_description from research_outcomes  where  projects.project_details = \"机密\" "
  },
  {
    "NatSQL": "select projects.organisation_id , count ( project_outcomes.* )  from projects  group by projects.organisation_id  order by count ( project_outcomes.* )  desc limit 1"
  },
  {
    "NatSQL": "select projects.organisation_id , count ( project_outcomes.* )  from projects  group by projects.organisation_id  order by count ( project_outcomes.* )  desc limit 1"
  },
  {
    "NatSQL": "select projects.project_details from projects  where  @.@ in projects.organisation_id  order by count ( projects.* )  desc limit 1"
  },
  {
    "NatSQL": "select projects.project_details from projects  where  @.@ in projects.organisation_id  order by count ( projects.* )  desc limit 1"
  },
  {
    "NatSQL": "select research_staff.staff_details from research_staff  order by research_staff.staff_details asc"
  },
  {
    "NatSQL": "select research_staff.staff_details from research_staff  order by research_staff.staff_details asc"
  },
  {
    "NatSQL": "select count ( tasks.* )  from tasks "
  },
  {
    "NatSQL": "select count ( tasks.* )  from tasks "
  },
  {
    "NatSQL": "select count ( tasks.* )  , projects.project_details from projects  group by projects.project_id "
  },
  {
    "NatSQL": "select count ( tasks.* )  , projects.project_details from projects  group by projects.project_id "
  },
  {
    "NatSQL": "select project_staff.role_code from project_staff  where  project_staff.date_from > \"2003-04-19 15:06:20\"  and  project_staff.date_to < \"2016-03-15 00:33:18\" "
  },
  {
    "NatSQL": "select project_staff.role_code from project_staff  where  project_staff.date_from > \"2003-04-19 15:06:20\"  and  project_staff.date_to < \"2016-03-15 00:33:18\" "
  },
  {
    "NatSQL": "select research_outcomes.outcome_description from research_outcomes  where  @.@ join project_outcomes.* "
  },
  {
    "NatSQL": "select research_outcomes.outcome_description from research_outcomes  where  @.@ join project_outcomes.* "
  },
  {
    "NatSQL": "select project_staff.role_code from project_staff  group by project_staff.role_code  order by count ( project_staff.* )  desc limit 1"
  },
  {
    "NatSQL": "select project_staff.role_code from project_staff  group by project_staff.role_code  order by count ( project_staff.* )  desc limit 1"
  },
  {
    "NatSQL": "select count (  distinct personfriend.friend )  from personfriend  where  person.name = \"丹丹\" "
  },
  {
    "NatSQL": "select count (  distinct personfriend.friend )  from personfriend  where  person.name = \"丹丹\" "
  },
  {
    "NatSQL": "select count ( person.* )  from person  where  person.gender = \"女\" "
  },
  {
    "NatSQL": "select count ( person.* )  from person  where  person.gender = \"女\" "
  },
  {
    "NatSQL": "select avg ( person.age )  from person "
  },
  {
    "NatSQL": "select avg ( person.age )  from person "
  },
  {
    "NatSQL": "select count (  distinct person.city )  from person "
  },
  {
    "NatSQL": "select count (  distinct person.city )  from person "
  },
  {
    "NatSQL": "select count (  distinct person.job )  from person "
  },
  {
    "NatSQL": "select count (  distinct person.job )  from person "
  },
  {
    "NatSQL": "select person.name from person  where  @.@ = max ( person.age )  "
  },
  {
    "NatSQL": "select person.name from person  where  @.@ = max ( person.age )  "
  },
  {
    "NatSQL": "select person.name from person  where  person.job = \"学生\"  and  @.@ = max ( person.age )   and  person.job = \"学生\" "
  },
  {
    "NatSQL": "select person.name from person  where  person.job = \"学生\"  and  @.@ = max ( person.age )   and  person.job = \"学生\" "
  },
  {
    "NatSQL": "select person.name from person  where  person.gender = \"男\"  and  @.@ = min ( person.age )   and  person.gender = \"男\" "
  },
  {
    "NatSQL": "select person.name from person  where  person.gender = \"男\"  and  @.@ = min ( person.age )   and  person.gender = \"男\" "
  },
  {
    "NatSQL": "select person.age from person  where  person.job = \"医生\"  and  person.name = \"仲景\" "
  },
  {
    "NatSQL": "select person.age from person  where  person.job = \"医生\"  and  person.name = \"仲景\" "
  },
  {
    "NatSQL": "select person.name from person  where  person.age < 30 "
  },
  {
    "NatSQL": "select person.name from person  where  person.age < 30 "
  },
  {
    "NatSQL": "select count ( person.* )  from person  where  person.age > 30  and  person.job = \"摄影师\" "
  },
  {
    "NatSQL": "select count ( person.* )  from person  where  person.age > 30  and  person.job = \"摄影师\" "
  },
  {
    "NatSQL": "select avg ( person.age )  , person.gender from person  group by person.gender "
  },
  {
    "NatSQL": "select avg ( person.age )  , person.gender from person  group by person.gender "
  },
  {
    "NatSQL": "select avg ( person.age )  , person.job from person  group by person.job "
  },
  {
    "NatSQL": "select avg ( person.age )  , person.job from person  group by person.job "
  },
  {
    "NatSQL": "select avg ( person.age )  , person.job from person  where  person.gender = \"男\"  group by person.job "
  },
  {
    "NatSQL": "select avg ( person.age )  , person.job from person  where  person.gender = \"男\"  group by person.job "
  },
  {
    "NatSQL": "select min ( person.age )  , person.job from person  group by person.job "
  },
  {
    "NatSQL": "select min ( person.age )  , person.job from person  group by person.job "
  },
  {
    "NatSQL": "select count ( person.* )  , person.gender from person  where  person.age < 40  group by person.gender "
  },
  {
    "NatSQL": "select count ( person.* )  , person.gender from person  where  person.age < 40  group by person.gender "
  },
  {
    "NatSQL": "select person.name from person  where  @.@ > min ( person.age )   and  person.job = \"摄影师\"  order by person.age asc"
  },
  {
    "NatSQL": "select person.name from person  where  @.@ > min ( person.age )   and  person.job = \"摄影师\"  order by person.age asc"
  },
  {
    "NatSQL": "select count ( person.* )  from person  where  @.@ > max ( person.age )   and  person.job = \"摄影师\" "
  },
  {
    "NatSQL": "select count ( person.* )  from person  where  @.@ > max ( person.age )   and  person.job = \"摄影师\" "
  },
  {
    "NatSQL": "select person.name , person.job from person  order by person.name asc"
  },
  {
    "NatSQL": "select person.name , person.job from person  order by person.name asc"
  },
  {
    "NatSQL": "select person.name from person  order by person.age desc"
  },
  {
    "NatSQL": "select person.name from person  order by person.age desc"
  },
  {
    "NatSQL": "select person.name from person  where  person.gender = \"男\"  order by person.age asc"
  },
  {
    "NatSQL": "select person.name from person  where  person.gender = \"男\"  order by person.age asc"
  },
  {
    "NatSQL": "select person.name , person.age from person  where  personfriend.friend = \"丹丹\"  and  personfriend.friend = \"丽丽\" "
  },
  {
    "NatSQL": "select person.name , person.age from person  where  personfriend.friend = \"丹丹\"  and  personfriend.friend = \"丽丽\" "
  },
  {
    "NatSQL": "select  distinct person.name , person.age from person  where  personfriend.friend = \"丹丹\"  or  personfriend.friend = \"丽丽\" "
  },
  {
    "NatSQL": "select  distinct person.name , person.age from person  where  personfriend.friend = \"丹丹\"  or  personfriend.friend = \"丽丽\" "
  },
  {
    "NatSQL": "select person.name from person  where  personfriend.friend in person.name  and  person.age > 40  and  personfriend.friend in person.name  and  person.age < 30 "
  },
  {
    "NatSQL": "select person.name from person  where  personfriend.friend in person.name  and  person.age > 40  and  personfriend.friend in person.name  and  person.age < 30 "
  },
  {
    "NatSQL": "select person.name from person  where  personfriend.friend in person.name  and  person.age > 40  except_  personfriend.friend in person.name  and  person.age < 30 "
  },
  {
    "NatSQL": "select person.name from person  where  personfriend.friend in person.name  and  person.age > 40  except_  personfriend.friend in person.name  and  person.age < 30 "
  },
  {
    "NatSQL": "select person.name from person  where  except_  @.@ is personfriend.*  and  person.job = \"学生\" "
  },
  {
    "NatSQL": "select person.name from person  where  except_  @.@ is personfriend.*  and  person.job = \"学生\" "
  },
  {
    "NatSQL": "select personfriend.name from personfriend  where  count ( personfriend.* )  = 1  group by personfriend.name "
  },
  {
    "NatSQL": "select personfriend.name from personfriend  where  count ( personfriend.* )  = 1  group by personfriend.name "
  },
  {
    "NatSQL": "select personfriend.friend from personfriend  where  person.name = \"张波\" "
  },
  {
    "NatSQL": "select personfriend.friend from personfriend  where  person.name = \"张波\" "
  },
  {
    "NatSQL": "select person.name from person  where  personfriend.friend = \"张波\" "
  },
  {
    "NatSQL": "select person.name from person  where  personfriend.friend = \"张波\" "
  },
  {
    "NatSQL": "select person.name from person  where  personfriend.friend = \"仲景\"  and  person.gender = \"女\" "
  },
  {
    "NatSQL": "select person.name from person  where  personfriend.friend = \"仲景\"  and  person.gender = \"女\" "
  },
  {
    "NatSQL": "select personfriend.friend from person  where  personfriend.name = \"丽丽\"  and  person.gender = \"女\" "
  },
  {
    "NatSQL": "select personfriend.friend from person  where  personfriend.name = \"丽丽\"  and  person.gender = \"女\" "
  },
  {
    "NatSQL": "select personfriend.friend from person  where  personfriend.name = \"丽丽\"  and  person.gender = \"男\"  and  person.job = \"医生\" "
  },
  {
    "NatSQL": "select personfriend.friend from person  where  personfriend.name = \"丽丽\"  and  person.gender = \"男\"  and  person.job = \"医生\" "
  },
  {
    "NatSQL": "select personfriend.name from person  where  person.city = \"上海\" "
  },
  {
    "NatSQL": "select personfriend.name from person  where  person.city = \"上海\" "
  },
  {
    "NatSQL": "select  distinct personfriend.name from person  where  @.@ < avg ( person.age )  "
  },
  {
    "NatSQL": "select  distinct personfriend.name from person  where  @.@ < avg ( person.age )  "
  },
  {
    "NatSQL": "select  distinct personfriend.name , personfriend.friend , person.age from person  where  @.@ > avg ( person.age )  "
  },
  {
    "NatSQL": "select  distinct personfriend.name , personfriend.friend , person.age from person  where  @.@ > avg ( person.age )  "
  },
  {
    "NatSQL": "select personfriend.friend from personfriend  where  personfriend.name = \"仲景\"  and  @.@ = max ( personfriend.year )   and  personfriend.name = \"仲景\" "
  },
  {
    "NatSQL": "select personfriend.friend from personfriend  where  personfriend.name = \"仲景\"  and  @.@ = max ( personfriend.year )   and  personfriend.name = \"仲景\" "
  },
  {
    "NatSQL": "select person.age from person  where  personfriend.name = \"仲景\"  and  @.@ = max ( personfriend.year )   and  personfriend.name = \"仲景\" "
  },
  {
    "NatSQL": "select person.age from person  where  personfriend.name = \"仲景\"  and  @.@ = max ( personfriend.year )   and  personfriend.name = \"仲景\" "
  },
  {
    "NatSQL": "select personfriend.name from personfriend  where  personfriend.friend = \"丽丽\"  and  @.@ = min ( personfriend.year )   and  personfriend.friend = \"丽丽\" "
  },
  {
    "NatSQL": "select personfriend.name from personfriend  where  personfriend.friend = \"丽丽\"  and  @.@ = min ( personfriend.year )   and  personfriend.friend = \"丽丽\" "
  },
  {
    "NatSQL": "select person.name , person.age , person.job from person  where  personfriend.friend = \"丽丽\"  and  @.@ = max ( personfriend.year )   and  personfriend.friend = \"丽丽\" "
  },
  {
    "NatSQL": "select person.name , person.age , person.job from person  where  personfriend.friend = \"丽丽\"  and  @.@ = max ( personfriend.year )   and  personfriend.friend = \"丽丽\" "
  },
  {
    "NatSQL": "select person.name from person  where  except_  @.@ is personfriend.* "
  },
  {
    "NatSQL": "select person.name from person  where  except_  @.@ is personfriend.* "
  },
  {
    "NatSQL": "select personfriend.name , avg ( person.age )  from person  group by personfriend.name  order by avg ( person.age )  desc limit 1"
  },
  {
    "NatSQL": "select personfriend.name , avg ( person.age )  from person  group by personfriend.name  order by avg ( person.age )  desc limit 1"
  },
  {
    "NatSQL": "select count (  distinct personfriend.name )  from personfriend  where  @.@ not in person.*  and  person.city = \"郑州\" "
  },
  {
    "NatSQL": "select count (  distinct personfriend.name )  from personfriend  where  @.@ not in person.*  and  person.city = \"郑州\" "
  },
  {
    "NatSQL": "select  distinct personfriend.name from personfriend  where  person.name = \"丽丽\"  and  personfriend.name != \"丽丽\" "
  },
  {
    "NatSQL": "select  distinct personfriend.name from personfriend  where  person.name = \"丽丽\"  and  personfriend.name != \"丽丽\" "
  },
  {
    "NatSQL": "select count ( member.* )  from member "
  },
  {
    "NatSQL": "select member.Name from member  order by member.Name asc"
  },
  {
    "NatSQL": "select member.Name , member.Country from member "
  },
  {
    "NatSQL": "select member.Name from member  where  member.Country = \"美国\"  or  member.Country = \"加拿大\" "
  },
  {
    "NatSQL": "select member.Country , count ( member.* )  from member  group by member.Country "
  },
  {
    "NatSQL": "select member.Country from member  group by member.Country  order by count ( member.* )  desc limit 1"
  },
  {
    "NatSQL": "select member.Country from member  where  count ( member.* )  > 2  group by member.Country "
  },
  {
    "NatSQL": "select college.Leader_Name , college.College_Location from college "
  },
  {
    "NatSQL": "select member.Name , college.Name from college "
  },
  {
    "NatSQL": "select member.Name , college.College_Location from college  order by member.Name asc"
  },
  {
    "NatSQL": "select  distinct college.Leader_Name from college  where  member.Country = \"加拿大\" "
  },
  {
    "NatSQL": "select member.Name , round.Decoration_Theme from member "
  },
  {
    "NatSQL": "select member.Name from member  where  round.Rank_in_Round > 3 "
  },
  {
    "NatSQL": "select member.Name from member  order by round.Rank_in_Round asc"
  },
  {
    "NatSQL": "select member.Name from member  where  @.@ not in round.* "
  },
  {
    "NatSQL": "select documents.document_name , documents.access_count from documents  order by documents.document_name asc"
  },
  {
    "NatSQL": "select documents.document_name , documents.access_count from documents  order by documents.document_name asc"
  },
  {
    "NatSQL": "select documents.document_name , documents.access_count from documents  order by documents.access_count desc limit 1"
  },
  {
    "NatSQL": "select documents.document_name , documents.access_count from documents  order by documents.access_count desc limit 1"
  },
  {
    "NatSQL": "select documents.document_type_code from documents  where  count ( documents.* )  > 4  group by documents.document_type_code "
  },
  {
    "NatSQL": "select documents.document_type_code from documents  where  count ( documents.* )  > 4  group by documents.document_type_code "
  },
  {
    "NatSQL": "select sum ( documents.access_count )  from documents  group by documents.document_type_code  order by count ( documents.* )  desc limit 1"
  },
  {
    "NatSQL": "select sum ( documents.access_count )  from documents  group by documents.document_type_code  order by count ( documents.* )  desc limit 1"
  },
  {
    "NatSQL": "select avg ( documents.access_count )  from documents "
  },
  {
    "NatSQL": "select avg ( documents.access_count )  from documents "
  },
  {
    "NatSQL": "select document_structures.document_structure_description from documents  group by documents.document_structure_code  order by count ( documents.* )  desc limit 1"
  },
  {
    "NatSQL": "select document_structures.document_structure_description from documents  group by documents.document_structure_code  order by count ( documents.* )  desc limit 1"
  },
  {
    "NatSQL": "select documents.document_type_code from documents  where  documents.document_name = \"张伟的简历\" "
  },
  {
    "NatSQL": "select documents.document_type_code from documents  where  documents.document_name = \"张伟的简历\" "
  },
  {
    "NatSQL": "select documents.document_name from documents  group by documents.document_type_code  order by count ( documents.* )  desc limit 3"
  },
  {
    "NatSQL": "select documents.document_name from documents  group by documents.document_type_code  order by count ( documents.* )  desc limit 3"
  },
  {
    "NatSQL": "select documents.document_type_code from documents  where  sum ( documents.access_count )  > 10000  group by documents.document_type_code "
  },
  {
    "NatSQL": "select documents.document_type_code from documents  where  sum ( documents.access_count )  > 10000  group by documents.document_type_code "
  },
  {
    "NatSQL": "select document_sections.section_title from documents  where  documents.document_name = \"张伟的简历\" "
  },
  {
    "NatSQL": "select document_sections.section_title from documents  where  documents.document_name = \"张伟的简历\" "
  },
  {
    "NatSQL": "select documents.document_name from documents  where  @.@ not in document_sections.* "
  },
  {
    "NatSQL": "select documents.document_name from documents  where  @.@ not in document_sections.* "
  },
  {
    "NatSQL": "select users.user_name , users.password from users  group by users.role_code  order by count ( users.* )  desc limit 1"
  },
  {
    "NatSQL": "select users.user_name , users.password from users  group by users.role_code  order by count ( users.* )  desc limit 1"
  },
  {
    "NatSQL": "select avg ( documents.access_count )  from documents  where  functional_areas.functional_area_description = \"致谢\" "
  },
  {
    "NatSQL": "select avg ( documents.access_count )  from documents  where  functional_areas.functional_area_description = \"致谢\" "
  },
  {
    "NatSQL": "select documents.document_name from documents  where  except_  @.@ is document_sections_images.* "
  },
  {
    "NatSQL": "select documents.document_name from documents  where  except_  @.@ is document_sections_images.* "
  },
  {
    "NatSQL": "select documents.document_name from documents  group by documents.document_code  order by count ( document_sections.* )  desc limit 1"
  },
  {
    "NatSQL": "select documents.document_name from documents  group by documents.document_code  order by count ( document_sections.* )  desc limit 1"
  },
  {
    "NatSQL": "select documents.document_name from documents  where  documents.document_name like \"简历\" "
  },
  {
    "NatSQL": "select documents.document_name from documents  where  documents.document_name like \"简历\" "
  },
  {
    "NatSQL": "select count ( users.* )  from users  where  users.user_login = 1 "
  },
  {
    "NatSQL": "select count ( users.* )  from users  where  users.user_login = 1 "
  },
  {
    "NatSQL": "select roles.role_description from roles  where  @.@ in users.role_code  and  users.user_login = 1  order by count ( roles.* )  desc limit 1"
  },
  {
    "NatSQL": "select roles.role_description from roles  where  @.@ in users.role_code  and  users.user_login = 1  order by count ( roles.* )  desc limit 1"
  },
  {
    "NatSQL": "select avg ( documents.access_count )  from documents  group by documents.document_structure_code  order by count ( documents.* )  asc limit 1"
  },
  {
    "NatSQL": "select avg ( documents.access_count )  from documents  group by documents.document_structure_code  order by count ( documents.* )  asc limit 1"
  },
  {
    "NatSQL": "select images.image_name , images.image_url from images  order by images.image_name asc"
  },
  {
    "NatSQL": "select images.image_name , images.image_url from images  order by images.image_name asc"
  },
  {
    "NatSQL": "select count ( users.* )  , users.role_code from users  group by users.role_code "
  },
  {
    "NatSQL": "select count ( users.* )  , users.role_code from users  group by users.role_code "
  },
  {
    "NatSQL": "select documents.document_type_code from documents  where  count ( documents.* )  > 2  group by documents.document_type_code "
  },
  {
    "NatSQL": "select documents.document_type_code from documents  where  count ( documents.* )  > 2  group by documents.document_type_code "
  },
  {
    "NatSQL": "select count ( companies.* )  from companies "
  },
  {
    "NatSQL": "select count ( companies.* )  from companies "
  },
  {
    "NatSQL": "select companies.name from companies  order by companies.Market_Value_billion desc"
  },
  {
    "NatSQL": "select companies.name from companies  order by companies.Market_Value_billion desc"
  },
  {
    "NatSQL": "select companies.name from companies  where  companies.Headquarters != \"中国\" "
  },
  {
    "NatSQL": "select companies.name from companies  where  companies.Headquarters != \"中国\" "
  },
  {
    "NatSQL": "select companies.name , companies.Assets_billion from companies  order by companies.name asc"
  },
  {
    "NatSQL": "select companies.name , companies.Assets_billion from companies  order by companies.name asc"
  },
  {
    "NatSQL": "select avg ( companies.Profits_billion )  from companies "
  },
  {
    "NatSQL": "select avg ( companies.Profits_billion )  from companies "
  },
  {
    "NatSQL": "select max ( companies.Sales_billion )  , min ( companies.Sales_billion )  from companies  where  companies.Industry != \"银行业\" "
  },
  {
    "NatSQL": "select max ( companies.Sales_billion )  , min ( companies.Sales_billion )  from companies  where  companies.Industry != \"银行业\" "
  },
  {
    "NatSQL": "select count (  distinct companies.Industry )  from companies "
  },
  {
    "NatSQL": "select count (  distinct companies.Industry )  from companies "
  },
  {
    "NatSQL": "select buildings.name from buildings  order by buildings.Height desc"
  },
  {
    "NatSQL": "select buildings.name from buildings  order by buildings.Height desc"
  },
  {
    "NatSQL": "select buildings.Stories from buildings  order by buildings.Height desc limit 1"
  },
  {
    "NatSQL": "select buildings.Stories from buildings  order by buildings.Height desc limit 1"
  },
  {
    "NatSQL": "select companies.name , buildings.name from office_locations "
  },
  {
    "NatSQL": "select companies.name , buildings.name from office_locations "
  },
  {
    "NatSQL": "select buildings.name from office_locations  where  count ( companies.* )  > 1  group by office_locations.building_id "
  },
  {
    "NatSQL": "select buildings.name from office_locations  where  count ( companies.* )  > 1  group by office_locations.building_id "
  },
  {
    "NatSQL": "select buildings.name from office_locations  group by office_locations.building_id  order by count ( companies.* )  desc limit 1"
  },
  {
    "NatSQL": "select buildings.name from office_locations  group by office_locations.building_id  order by count ( companies.* )  desc limit 1"
  },
  {
    "NatSQL": "select buildings.name from buildings  where  buildings.Status = \"值班\"  order by buildings.Stories asc"
  },
  {
    "NatSQL": "select buildings.name from buildings  where  buildings.Status = \"值班\"  order by buildings.Stories asc"
  },
  {
    "NatSQL": "select companies.Industry , count ( companies.* )  from companies  group by companies.Industry "
  },
  {
    "NatSQL": "select companies.Industry , count ( companies.* )  from companies  group by companies.Industry "
  },
  {
    "NatSQL": "select companies.Industry from companies  group by companies.Industry  order by count ( companies.* )  desc"
  },
  {
    "NatSQL": "select companies.Industry from companies  group by companies.Industry  order by count ( companies.* )  desc"
  },
  {
    "NatSQL": "select companies.Industry from companies  group by companies.Industry  order by count ( companies.* )  desc limit 1"
  },
  {
    "NatSQL": "select companies.Industry from companies  group by companies.Industry  order by count ( companies.* )  desc limit 1"
  },
  {
    "NatSQL": "select buildings.name from buildings  where  @.@ not in office_locations.* "
  },
  {
    "NatSQL": "select buildings.name from buildings  where  @.@ not in office_locations.* "
  },
  {
    "NatSQL": "select companies.Industry from companies  where  companies.Headquarters = \"中国\"  and  companies.Headquarters = \"中国\" "
  },
  {
    "NatSQL": "select companies.Industry from companies  where  companies.Headquarters = \"中国\"  and  companies.Headquarters = \"中国\" "
  },
  {
    "NatSQL": "select count ( companies.* )  from companies  where  companies.Industry = \"银行业\"  or  companies.Industry = \"综合\" "
  },
  {
    "NatSQL": "select count ( companies.* )  from companies  where  companies.Industry = \"银行业\"  or  companies.Industry = \"综合\" "
  },
  {
    "NatSQL": "select companies.Headquarters from companies  where  count ( companies.* )  > 2  group by companies.Headquarters "
  },
  {
    "NatSQL": "select companies.Headquarters from companies  where  count ( companies.* )  > 2  group by companies.Headquarters "
  },
  {
    "NatSQL": "select count ( products.* )  from products "
  },
  {
    "NatSQL": "select products.Product_Name from products  order by products.Product_Price asc"
  },
  {
    "NatSQL": "select products.Product_Name , products.Product_Type_Code from products "
  },
  {
    "NatSQL": "select products.Product_Price from products  where  products.Product_Name = \"快餐\"  or  products.Product_Name = \"交易守则\" "
  },
  {
    "NatSQL": "select avg ( products.Product_Price )  from products "
  },
  {
    "NatSQL": "select products.Product_Name from products  order by products.Product_Price desc limit 1"
  },
  {
    "NatSQL": "select products.Product_Type_Code , count ( products.* )  from products  group by products.Product_Type_Code "
  },
  {
    "NatSQL": "select products.Product_Type_Code from products  group by products.Product_Type_Code  order by count ( products.* )  desc limit 1"
  },
  {
    "NatSQL": "select products.Product_Type_Code from products  where  count ( products.* )  >= 2  group by products.Product_Type_Code "
  },
  {
    "NatSQL": "select products.Product_Type_Code from products  where  products.Product_Price > 4500  and  products.Product_Price < 3000 "
  },
  {
    "NatSQL": "select products.Product_Name , count ( products_in_events.* )  from products  group by products.Product_Name "
  },
  {
    "NatSQL": "select products.Product_Name , count ( products_in_events.* )  from products  group by products.Product_Name  order by count ( products_in_events.* )  desc"
  },
  {
    "NatSQL": "select products.Product_Name from products  where  count ( products_in_events.* )  >= 2  group by products.Product_Name "
  },
  {
    "NatSQL": "select products.Product_Name from products  where  count ( products_in_events.* )  >= 2  group by products.Product_Name  order by products.Product_Name asc"
  },
  {
    "NatSQL": "select products.Product_Name from products  where  @.@ not in products_in_events.* "
  },
  {
    "NatSQL": "select count ( artwork.* )  from artwork "
  },
  {
    "NatSQL": "select artwork.Name from artwork  order by artwork.Name asc"
  },
  {
    "NatSQL": "select artwork.Name from artwork  where  artwork.Type != \"抽象\" "
  },
  {
    "NatSQL": "select festival_detail.Festival_Name , festival_detail.Location from festival_detail "
  },
  {
    "NatSQL": "select festival_detail.Chair_Name from festival_detail  order by festival_detail.Year asc"
  },
  {
    "NatSQL": "select festival_detail.Location from festival_detail  order by festival_detail.Num_of_Audience desc limit 1"
  },
  {
    "NatSQL": "select festival_detail.Festival_Name from festival_detail  where  festival_detail.Year = 2007 "
  },
  {
    "NatSQL": "select avg ( festival_detail.Num_of_Audience )  from festival_detail "
  },
  {
    "NatSQL": "select festival_detail.Festival_Name from festival_detail  order by festival_detail.Year desc limit 3"
  },
  {
    "NatSQL": "select artwork.Name , festival_detail.Festival_Name from nomination "
  },
  {
    "NatSQL": "select  distinct artwork.Type from nomination  where  festival_detail.Year = 2007 "
  },
  {
    "NatSQL": "select artwork.Name from nomination  order by festival_detail.Year asc"
  },
  {
    "NatSQL": "select festival_detail.Festival_Name from nomination  where  artwork.Type = \"抽象\" "
  },
  {
    "NatSQL": "select festival_detail.Festival_ID , festival_detail.Festival_Name from nomination  where  count ( artwork.* )  >= 2  group by nomination.Festival_ID "
  },
  {
    "NatSQL": "select festival_detail.Festival_ID , festival_detail.Festival_Name , count ( artwork.* )  from nomination  group by nomination.Festival_ID "
  },
  {
    "NatSQL": "select artwork.Type , count ( artwork.* )  from artwork  group by artwork.Type "
  },
  {
    "NatSQL": "select artwork.Type from artwork  group by artwork.Type  order by count ( artwork.* )  desc limit 1"
  },
  {
    "NatSQL": "select festival_detail.Year from festival_detail  where  count ( festival_detail.* )  > 1  group by festival_detail.Year "
  },
  {
    "NatSQL": "select artwork.Name from artwork  where  @.@ not in nomination.* "
  },
  {
    "NatSQL": "select festival_detail.Num_of_Audience from festival_detail  where  festival_detail.Year = 2008  or  festival_detail.Year = 2010 "
  },
  {
    "NatSQL": "select sum ( festival_detail.Num_of_Audience )  from festival_detail "
  },
  {
    "NatSQL": "select festival_detail.Year from festival_detail  where  festival_detail.Location = \"美国\"  and  festival_detail.Location != \"美国\" "
  },
  {
    "NatSQL": "select count ( premises.* )  from premises "
  },
  {
    "NatSQL": "select  distinct premises.premises_type from premises "
  },
  {
    "NatSQL": "select premises.premises_type , premises.premise_details from premises  order by premises.premises_type asc"
  },
  {
    "NatSQL": "select premises.premises_type , count ( premises.* )  from premises  group by premises.premises_type "
  },
  {
    "NatSQL": "select mailshot_campaigns.product_category , count ( mailshot_campaigns.* )  from mailshot_campaigns  group by mailshot_campaigns.product_category "
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_phone from customers  where  @.@ not in mailshot_customers.* "
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_phone from customers  where  mailshot_customers.outcome_code = \"无回应\" "
  },
  {
    "NatSQL": "select mailshot_customers.outcome_code , count ( mailshot_customers.* )  from mailshot_customers  group by mailshot_customers.outcome_code "
  },
  {
    "NatSQL": "select customers.customer_name from mailshot_customers  where  mailshot_customers.outcome_code = \"预定\"  and  count ( mailshot_customers.* )  >= 2  group by mailshot_customers.customer_id "
  },
  {
    "NatSQL": "select customers.customer_name from mailshot_customers  group by mailshot_customers.customer_id  order by count ( mailshot_customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name , customers.payment_method from mailshot_customers  where  mailshot_customers.outcome_code = \"预定\"  and  mailshot_customers.outcome_code = \"无回应\" "
  },
  {
    "NatSQL": "select premises.premises_type , customer_addresses.address_type_code from customer_addresses "
  },
  {
    "NatSQL": "select  distinct customer_addresses.address_type_code from customer_addresses "
  },
  {
    "NatSQL": "select customer_orders.order_shipping_charges , customer_orders.customer_id from customer_orders  where  customer_orders.order_status_code = \"取消\"  or  customer_orders.order_status_code = \"付款\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  customer_orders.shipping_method_code = \"顺丰快递\"  and  customer_orders.order_status_code = \"付款\" "
  },
  {
    "NatSQL": "select count ( course.* )  from course "
  },
  {
    "NatSQL": "select count ( course.* )  from course "
  },
  {
    "NatSQL": "select count ( course.* )  from course  where  course.Credits > 2 "
  },
  {
    "NatSQL": "select count ( course.* )  from course  where  course.Credits > 2 "
  },
  {
    "NatSQL": "select course.CName from course  where  course.Credits = 1 "
  },
  {
    "NatSQL": "select course.CName from course  where  course.Credits = 1 "
  },
  {
    "NatSQL": "select course.CName from course  where  course.Days = \"星期一\" "
  },
  {
    "NatSQL": "select course.CName from course  where  course.Days = \"星期一\" "
  },
  {
    "NatSQL": "select count ( department.* )  from department  where  department.Division = \"管理部\" "
  },
  {
    "NatSQL": "select count ( department.* )  from department  where  department.Division = \"管理部\" "
  },
  {
    "NatSQL": "select department.DPhone from department  where  department.Room = 268 "
  },
  {
    "NatSQL": "select department.DPhone from department  where  department.Room = 268 "
  },
  {
    "NatSQL": "select count (  distinct enrolled_in.StuID )  from enrolled_in  where  enrolled_in.Grade = \"B\" "
  },
  {
    "NatSQL": "select count (  distinct enrolled_in.StuID )  from enrolled_in  where  enrolled_in.Grade = \"B\" "
  },
  {
    "NatSQL": "select max ( gradeconversion.gradepoint )  , min ( gradeconversion.gradepoint )  from gradeconversion "
  },
  {
    "NatSQL": "select max ( gradeconversion.gradepoint )  , min ( gradeconversion.gradepoint )  from gradeconversion "
  },
  {
    "NatSQL": "select  distinct student.Fname from student  where  student.Fname like \"a\" "
  },
  {
    "NatSQL": "select  distinct student.Fname from student  where  student.Fname like \"a\" "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  where  faculty.Sex = \"男\"  and  faculty.Building = \"行政\" "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  where  faculty.Sex = \"男\"  and  faculty.Building = \"行政\" "
  },
  {
    "NatSQL": "select faculty.Room from faculty  where  faculty.Rank = \"教授\"  and  faculty.Building = \"行政\" "
  },
  {
    "NatSQL": "select faculty.Room from faculty  where  faculty.Rank = \"教授\"  and  faculty.Building = \"行政\" "
  },
  {
    "NatSQL": "select department.DName from department  where  department.Building = \"逸夫\" "
  },
  {
    "NatSQL": "select department.DName from department  where  department.Building = \"逸夫\" "
  },
  {
    "NatSQL": "select course.* from course  order by course.Credits asc"
  },
  {
    "NatSQL": "select course.* from course  order by course.Credits asc"
  },
  {
    "NatSQL": "select course.CName from course  order by course.Credits asc"
  },
  {
    "NatSQL": "select course.CName from course  order by course.Credits asc"
  },
  {
    "NatSQL": "select student.Fname from student  order by student.Age desc"
  },
  {
    "NatSQL": "select student.Fname from student  order by student.Age desc"
  },
  {
    "NatSQL": "select student.LName from student  where  student.Sex = \"F\"  order by student.Age desc"
  },
  {
    "NatSQL": "select student.LName from student  where  student.Sex = \"F\"  order by student.Age desc"
  },
  {
    "NatSQL": "select faculty.Lname from faculty  where  faculty.Building = \"行政楼\"  order by faculty.Lname asc"
  },
  {
    "NatSQL": "select faculty.Lname from faculty  where  faculty.Building = \"行政楼\"  order by faculty.Lname asc"
  },
  {
    "NatSQL": "select faculty.Fname from faculty  where  faculty.Rank = \"教授\"  order by faculty.Fname asc"
  },
  {
    "NatSQL": "select faculty.Fname from faculty  where  faculty.Rank = \"教授\"  order by faculty.Fname asc"
  },
  {
    "NatSQL": "select department.DName from department  group by minor_in.DNO  order by count ( minor_in.* )  desc limit 1"
  },
  {
    "NatSQL": "select department.DName from department  group by minor_in.DNO  order by count ( minor_in.* )  desc limit 1"
  },
  {
    "NatSQL": "select department.DName from department  where  except_  @.@ is minor_in.* "
  },
  {
    "NatSQL": "select department.DName from department  where  except_  @.@ is minor_in.* "
  },
  {
    "NatSQL": "select department.DName from department  group by member_of.DNO  order by count ( member_of.* )  asc limit 1"
  },
  {
    "NatSQL": "select department.DName from department  group by member_of.DNO  order by count ( member_of.* )  asc limit 1"
  },
  {
    "NatSQL": "select faculty.Rank from faculty  group by faculty.Rank  order by count ( faculty.* )  asc limit 1"
  },
  {
    "NatSQL": "select faculty.Rank from faculty  group by faculty.Rank  order by count ( faculty.* )  asc limit 1"
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from course  group by course.Instructor  order by count ( course.* )  desc limit 3"
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from course  group by course.Instructor  order by count ( course.* )  desc limit 3"
  },
  {
    "NatSQL": "select faculty.Building from course  group by course.Instructor  order by count ( course.* )  desc limit 1"
  },
  {
    "NatSQL": "select faculty.Building from course  group by course.Instructor  order by count ( course.* )  desc limit 1"
  },
  {
    "NatSQL": "select course.CName from course  where  count ( enrolled_in.* )  >= 5  group by enrolled_in.CID "
  },
  {
    "NatSQL": "select course.CName from course  where  count ( enrolled_in.* )  >= 5  group by enrolled_in.CID "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from course  where  course.CName = \"计算机基础\" "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from course  where  course.CName = \"计算机基础\" "
  },
  {
    "NatSQL": "select department.DName , department.Room from course  where  course.CName = \"计算机导论\" "
  },
  {
    "NatSQL": "select department.DName , department.Room from course  where  course.CName = \"计算机导论\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName , gradeconversion.gradepoint from enrolled_in "
  },
  {
    "NatSQL": "select student.Fname , student.LName , gradeconversion.gradepoint from enrolled_in "
  },
  {
    "NatSQL": "select  distinct student.Fname from enrolled_in  where  gradeconversion.gradepoint >= 3.8 "
  },
  {
    "NatSQL": "select  distinct student.Fname from enrolled_in  where  gradeconversion.gradepoint >= 3.8 "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  where  member_of.DNO = 520 "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  where  member_of.DNO = 520 "
  },
  {
    "NatSQL": "select student.Fname , student.LName from minor_in  where  minor_in.DNO = 140 "
  },
  {
    "NatSQL": "select student.Fname , student.LName from minor_in  where  minor_in.DNO = 140 "
  },
  {
    "NatSQL": "select faculty.Lname from department  where  department.DName = \"计算机科学\" "
  },
  {
    "NatSQL": "select faculty.Lname from department  where  department.DName = \"计算机科学\" "
  },
  {
    "NatSQL": "select avg ( gradeconversion.gradepoint )  from enrolled_in  where  student.LName = \"帅\" "
  },
  {
    "NatSQL": "select avg ( gradeconversion.gradepoint )  from enrolled_in  where  student.LName = \"帅\" "
  },
  {
    "NatSQL": "select max ( gradeconversion.gradepoint )  , min ( gradeconversion.gradepoint )  from enrolled_in  where  student.city_code = \"上海\" "
  },
  {
    "NatSQL": "select max ( gradeconversion.gradepoint )  , min ( gradeconversion.gradepoint )  from enrolled_in  where  student.city_code = \"上海\" "
  },
  {
    "NatSQL": "select course.CName from course  where  course.Credits = 3  or  course.Credits = 1  and  course.Hours = 4 "
  },
  {
    "NatSQL": "select course.CName from course  where  course.Credits = 3  or  course.Credits = 1  and  course.Hours = 4 "
  },
  {
    "NatSQL": "select department.DName from department  where  department.Division = \"管理部\"  or  department.Division = \"财务部\"  and  department.Building = \"行政\" "
  },
  {
    "NatSQL": "select department.DName from department  where  department.Division = \"管理部\"  or  department.Division = \"财务部\"  and  department.Building = \"行政\" "
  },
  {
    "NatSQL": "select student.Fname from student  where  @.@ not in enrolled_in.* "
  },
  {
    "NatSQL": "select student.Fname from student  where  @.@ not in enrolled_in.* "
  },
  {
    "NatSQL": "select product_suppliers.product_id from product_suppliers  order by product_suppliers.total_amount_purchased desc limit 3"
  },
  {
    "NatSQL": "select product_suppliers.product_id from product_suppliers  order by product_suppliers.total_amount_purchased desc limit 3"
  },
  {
    "NatSQL": "select products.product_id , products.product_type_code from products  order by products.product_price asc limit 1"
  },
  {
    "NatSQL": "select products.product_id , products.product_type_code from products  order by products.product_price asc limit 1"
  },
  {
    "NatSQL": "select count (  distinct products.product_type_code )  from products "
  },
  {
    "NatSQL": "select count (  distinct products.product_type_code )  from products "
  },
  {
    "NatSQL": "select addresses.address_details from addresses  where  customer_addresses.customer_id = 10 "
  },
  {
    "NatSQL": "select addresses.address_details from addresses  where  customer_addresses.customer_id = 10 "
  },
  {
    "NatSQL": "select staff.staff_id , staff.staff_gender from staff  where  staff_department_assignments.job_title_code = \"部门经理\" "
  },
  {
    "NatSQL": "select staff.staff_id , staff.staff_gender from staff  where  staff_department_assignments.job_title_code = \"部门经理\" "
  },
  {
    "NatSQL": "select customers.payment_method_code , count ( customers.* )  from customers  group by customers.payment_method_code "
  },
  {
    "NatSQL": "select customers.payment_method_code , count ( customers.* )  from customers  group by customers.payment_method_code "
  },
  {
    "NatSQL": "select order_items.product_id from order_items  group by order_items.product_id  order by count ( order_items.* )  desc limit 1"
  },
  {
    "NatSQL": "select order_items.product_id from order_items  group by order_items.product_id  order by count ( order_items.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_phone , customers.customer_email from customers  group by customer_orders.customer_id  order by count ( customer_orders.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_phone , customers.customer_email from customers  group by customer_orders.customer_id  order by count ( customer_orders.* )  desc limit 1"
  },
  {
    "NatSQL": "select products.product_type_code , avg ( products.product_price )  from products  group by products.product_type_code "
  },
  {
    "NatSQL": "select products.product_type_code , avg ( products.product_price )  from products  group by products.product_type_code "
  },
  {
    "NatSQL": "select count ( department_stores.* )  from department_stores  where  department_store_chain.dept_store_chain_name = \"大洋\" "
  },
  {
    "NatSQL": "select count ( department_stores.* )  from department_stores  where  department_store_chain.dept_store_chain_name = \"大洋\" "
  },
  {
    "NatSQL": "select staff.staff_name , staff_department_assignments.job_title_code from staff  order by staff_department_assignments.date_assigned_to desc limit 1"
  },
  {
    "NatSQL": "select staff.staff_name , staff_department_assignments.job_title_code from staff  order by staff_department_assignments.date_assigned_to desc limit 1"
  },
  {
    "NatSQL": "select products.product_type_code , products.product_name , products.product_price from product_suppliers  where  product_suppliers.supplier_id = 3 "
  },
  {
    "NatSQL": "select products.product_type_code , products.product_name , products.product_price from product_suppliers  where  product_suppliers.supplier_id = 3 "
  },
  {
    "NatSQL": "select  distinct customers.customer_name from customers  where  customer_orders.order_status_code = \"延迟\"  order by customer_orders.customer_id asc"
  },
  {
    "NatSQL": "select  distinct customers.customer_name from customers  where  customer_orders.order_status_code = \"延迟\"  order by customer_orders.customer_id asc"
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_address from customers  where  customer_orders.order_status_code = \"新\"  and  customer_orders.order_status_code = \"延迟\" "
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_address from customers  where  customer_orders.order_status_code = \"新\"  and  customer_orders.order_status_code = \"延迟\" "
  },
  {
    "NatSQL": "select product_suppliers.product_id from product_suppliers  where  product_suppliers.supplier_id = 2  and  @.@ > avg ( products.product_price )  "
  },
  {
    "NatSQL": "select product_suppliers.product_id from product_suppliers  where  product_suppliers.supplier_id = 2  and  @.@ > avg ( products.product_price )  "
  },
  {
    "NatSQL": "select department_stores.dept_store_id , department_stores.store_name from departments  where  departments.department_name = \"市场\"  and  departments.department_name = \"管理\" "
  },
  {
    "NatSQL": "select department_stores.dept_store_id , department_stores.store_name from departments  where  departments.department_name = \"市场\"  and  departments.department_name = \"管理\" "
  },
  {
    "NatSQL": "select department_stores.dept_store_chain_id from department_stores  group by department_stores.dept_store_chain_id  order by count ( department_stores.* )  desc limit 2"
  },
  {
    "NatSQL": "select department_stores.dept_store_chain_id from department_stores  group by department_stores.dept_store_chain_id  order by count ( department_stores.* )  desc limit 2"
  },
  {
    "NatSQL": "select staff_department_assignments.department_id from staff_department_assignments  group by staff_department_assignments.department_id  order by count ( staff_department_assignments.* )  asc limit 1"
  },
  {
    "NatSQL": "select staff_department_assignments.department_id from staff_department_assignments  group by staff_department_assignments.department_id  order by count ( staff_department_assignments.* )  asc limit 1"
  },
  {
    "NatSQL": "select products.product_type_code , max ( products.product_price )  , min ( products.product_price )  from products  group by products.product_type_code "
  },
  {
    "NatSQL": "select products.product_type_code , max ( products.product_price )  , min ( products.product_price )  from products  group by products.product_type_code "
  },
  {
    "NatSQL": "select products.product_type_code from products  where  avg ( @.@ )  > avg ( products.product_price )   group by products.product_type_code "
  },
  {
    "NatSQL": "select products.product_type_code from products  where  avg ( @.@ )  > avg ( products.product_price )   group by products.product_type_code "
  },
  {
    "NatSQL": "select staff.staff_id , staff.staff_name from staff  order by staff_department_assignments.date_assigned_to - staff_department_assignments.date_assigned_from asc limit 1"
  },
  {
    "NatSQL": "select staff.staff_id , staff.staff_name from staff  order by staff_department_assignments.date_assigned_to - staff_department_assignments.date_assigned_from asc limit 1"
  },
  {
    "NatSQL": "select products.product_name , products.product_id from products  where  products.product_price between 600 and 700 "
  },
  {
    "NatSQL": "select products.product_name , products.product_id from products  where  products.product_price between 600 and 700 "
  },
  {
    "NatSQL": "select  distinct customer_orders.customer_id from customer_orders  where  @.@ > min ( customer_orders.order_date )   and  customer_orders.order_status_code = \"取消\" "
  },
  {
    "NatSQL": "select  distinct customer_orders.customer_id from customer_orders  where  @.@ > min ( customer_orders.order_date )   and  customer_orders.order_status_code = \"取消\" "
  },
  {
    "NatSQL": "select staff_department_assignments.staff_id from staff_department_assignments  where  @.@ < max ( staff_department_assignments.date_assigned_to )   and  staff_department_assignments.job_title_code = \"文书职员\" "
  },
  {
    "NatSQL": "select staff_department_assignments.staff_id from staff_department_assignments  where  @.@ < max ( staff_department_assignments.date_assigned_to )   and  staff_department_assignments.job_title_code = \"文书职员\" "
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_id from customers  where  customers.customer_address like \"巷\" "
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_id from customers  where  customers.customer_address like \"巷\" "
  },
  {
    "NatSQL": "select staff.staff_name , staff.staff_gender from staff  where  staff_department_assignments.date_assigned_from like \"2016\" "
  },
  {
    "NatSQL": "select staff.staff_name , staff.staff_gender from staff  where  staff_department_assignments.date_assigned_from like \"2016\" "
  },
  {
    "NatSQL": "select staff.staff_name from staff  where  count ( staff_department_assignments.* )  > 1  group by staff_department_assignments.staff_id "
  },
  {
    "NatSQL": "select staff.staff_name from staff  where  count ( staff_department_assignments.* )  > 1  group by staff_department_assignments.staff_id "
  },
  {
    "NatSQL": "select suppliers.supplier_name , suppliers.supplier_phone from suppliers  order by addresses.address_details asc"
  },
  {
    "NatSQL": "select suppliers.supplier_name , suppliers.supplier_phone from suppliers  order by addresses.address_details asc"
  },
  {
    "NatSQL": "select customers.customer_phone from customers  where  union_  @.@ is suppliers.* "
  },
  {
    "NatSQL": "select customers.customer_phone from customers  where  union_  @.@ is suppliers.* "
  },
  {
    "NatSQL": "select order_items.product_id from order_items  where  count ( order_items.* )  > 3  or  sum ( product_suppliers.total_amount_purchased )  > 80000  group by order_items.product_id "
  },
  {
    "NatSQL": "select order_items.product_id from order_items  where  count ( order_items.* )  > 3  or  sum ( product_suppliers.total_amount_purchased )  > 80000  group by order_items.product_id "
  },
  {
    "NatSQL": "select products.product_id , products.product_name from products  where  products.product_price < 600  or  products.product_price > 900 "
  },
  {
    "NatSQL": "select products.product_id , products.product_name from products  where  products.product_price < 600  or  products.product_price > 900 "
  },
  {
    "NatSQL": "select product_suppliers.supplier_id from product_suppliers  where  avg ( product_suppliers.total_amount_purchased )  > 50000  or  avg ( product_suppliers.total_amount_purchased )  < 30000  group by product_suppliers.supplier_id "
  },
  {
    "NatSQL": "select product_suppliers.supplier_id from product_suppliers  where  avg ( product_suppliers.total_amount_purchased )  > 50000  or  avg ( product_suppliers.total_amount_purchased )  < 30000  group by product_suppliers.supplier_id "
  },
  {
    "NatSQL": "select avg ( product_suppliers.total_amount_purchased )  , avg ( product_suppliers.total_value_purchased )  from product_suppliers  where  @.@ = product_suppliers.supplier_id  order by count ( product_suppliers.* )  desc limit 1"
  },
  {
    "NatSQL": "select avg ( product_suppliers.total_amount_purchased )  , avg ( product_suppliers.total_value_purchased )  from product_suppliers  where  @.@ = product_suppliers.supplier_id  order by count ( product_suppliers.* )  desc limit 1"
  },
  {
    "NatSQL": "select max ( customers.customer_code )  , min ( customers.customer_code )  from customers "
  },
  {
    "NatSQL": "select max ( customers.customer_code )  , min ( customers.customer_code )  from customers "
  },
  {
    "NatSQL": "select  distinct customers.customer_name from customers  where  products.product_name = \"键盘\" "
  },
  {
    "NatSQL": "select  distinct customers.customer_name from customers  where  products.product_name = \"键盘\" "
  },
  {
    "NatSQL": "select  distinct suppliers.supplier_name , suppliers.supplier_phone from suppliers  where  products.product_name = \"红色牛仔裤\" "
  },
  {
    "NatSQL": "select  distinct suppliers.supplier_name , suppliers.supplier_phone from suppliers  where  products.product_name = \"红色牛仔裤\" "
  },
  {
    "NatSQL": "select max ( products.product_price )  , min ( products.product_price )  , products.product_type_code from products  group by products.product_type_code  order by products.product_type_code asc"
  },
  {
    "NatSQL": "select max ( products.product_price )  , min ( products.product_price )  , products.product_type_code from products  group by products.product_type_code  order by products.product_type_code asc"
  },
  {
    "NatSQL": "select customer_orders.order_id , customer_orders.customer_id from customer_orders  where  customer_orders.order_status_code = \"取消\"  order by customer_orders.order_date asc"
  },
  {
    "NatSQL": "select customer_orders.order_id , customer_orders.customer_id from customer_orders  where  customer_orders.order_status_code = \"取消\"  order by customer_orders.order_date asc"
  },
  {
    "NatSQL": "select  distinct products.product_name from customer_orders  where  count (  distinct customer_orders.customer_id )  >= 2  group by products.product_id "
  },
  {
    "NatSQL": "select  distinct products.product_name from customer_orders  where  count (  distinct customer_orders.customer_id )  >= 2  group by products.product_id "
  },
  {
    "NatSQL": "select  distinct customers.customer_name from customers  where  count (  distinct order_items.product_id )  >= 3  group by customers.customer_id "
  },
  {
    "NatSQL": "select  distinct customers.customer_name from customers  where  count (  distinct order_items.product_id )  >= 3  group by customers.customer_id "
  },
  {
    "NatSQL": "select staff.staff_name , staff.staff_gender from staff  where  staff_department_assignments.job_title_code = \"销售员\"  and  staff_department_assignments.job_title_code != \"文书职员\" "
  },
  {
    "NatSQL": "select staff.staff_name , staff.staff_gender from staff  where  staff_department_assignments.job_title_code = \"销售员\"  and  staff_department_assignments.job_title_code != \"文书职员\" "
  },
  {
    "NatSQL": "select customers.customer_id , customers.customer_name from customers  where  customers.customer_address like \"湖南\"  and  customers.payment_method_code != \"信用卡\" "
  },
  {
    "NatSQL": "select customers.customer_id , customers.customer_name from customers  where  customers.customer_address like \"湖南\"  and  customers.payment_method_code != \"信用卡\" "
  },
  {
    "NatSQL": "select avg ( products.product_price )  from products  where  products.product_type_code = \"服装\" "
  },
  {
    "NatSQL": "select avg ( products.product_price )  from products  where  products.product_type_code = \"服装\" "
  },
  {
    "NatSQL": "select products.product_name from products  where  products.product_type_code = \"硬件\"  order by products.product_price desc limit 1"
  },
  {
    "NatSQL": "select products.product_name from products  where  products.product_type_code = \"硬件\"  order by products.product_price desc limit 1"
  },
  {
    "NatSQL": "select count ( aircraft.* )  from aircraft "
  },
  {
    "NatSQL": "select count ( aircraft.* )  from aircraft "
  },
  {
    "NatSQL": "select aircraft.Description from aircraft "
  },
  {
    "NatSQL": "select aircraft.Description from aircraft "
  },
  {
    "NatSQL": "select avg ( airport.International_Passengers )  from airport "
  },
  {
    "NatSQL": "select avg ( airport.International_Passengers )  from airport "
  },
  {
    "NatSQL": "select airport.International_Passengers , airport.Domestic_Passengers from airport  where  airport.Airport_Name = \"北京首都机场\" "
  },
  {
    "NatSQL": "select airport.International_Passengers , airport.Domestic_Passengers from airport  where  airport.Airport_Name = \"北京首都机场\" "
  },
  {
    "NatSQL": "select sum ( airport.Domestic_Passengers )  from airport  where  airport.Airport_Name like \"北京\" "
  },
  {
    "NatSQL": "select sum ( airport.Domestic_Passengers )  from airport  where  airport.Airport_Name like \"北京\" "
  },
  {
    "NatSQL": "select max ( airport.Transit_Passengers )  , min ( airport.Transit_Passengers )  from airport "
  },
  {
    "NatSQL": "select max ( airport.Transit_Passengers )  , min ( airport.Transit_Passengers )  from airport "
  },
  {
    "NatSQL": "select pilot.Name from pilot  where  pilot.Age >= 25 "
  },
  {
    "NatSQL": "select pilot.Name from pilot  where  pilot.Age >= 25 "
  },
  {
    "NatSQL": "select pilot.Name from pilot  order by pilot.Name asc"
  },
  {
    "NatSQL": "select pilot.Name from pilot  order by pilot.Name asc"
  },
  {
    "NatSQL": "select pilot.Name from pilot  where  pilot.Age <= 30  order by pilot.Name desc"
  },
  {
    "NatSQL": "select pilot.Name from pilot  where  pilot.Age <= 30  order by pilot.Name desc"
  },
  {
    "NatSQL": "select aircraft.Aircraft from aircraft  where  airport.Airport_Name = \"北京南苑\" "
  },
  {
    "NatSQL": "select aircraft.Aircraft from aircraft  where  airport.Airport_Name = \"北京南苑\" "
  },
  {
    "NatSQL": "select aircraft.Aircraft , aircraft.Description from aircraft  where  airport.Total_Passengers > 10000000 "
  },
  {
    "NatSQL": "select aircraft.Aircraft , aircraft.Description from aircraft  where  airport.Total_Passengers > 10000000 "
  },
  {
    "NatSQL": "select avg ( airport.Total_Passengers )  from aircraft  where  aircraft.Aircraft = \"歼-10\" "
  },
  {
    "NatSQL": "select avg ( airport.Total_Passengers )  from aircraft  where  aircraft.Aircraft = \"歼-10\" "
  },
  {
    "NatSQL": "select match.Location , aircraft.Aircraft from aircraft "
  },
  {
    "NatSQL": "select match.Location , aircraft.Aircraft from aircraft "
  },
  {
    "NatSQL": "select aircraft.Aircraft from aircraft  group by match.Winning_Aircraft  order by count ( match.* )  desc limit 1"
  },
  {
    "NatSQL": "select aircraft.Aircraft from aircraft  group by match.Winning_Aircraft  order by count ( match.* )  desc limit 1"
  },
  {
    "NatSQL": "select aircraft.Aircraft , count ( match.* )  from aircraft  group by match.Winning_Aircraft "
  },
  {
    "NatSQL": "select aircraft.Aircraft , count ( match.* )  from aircraft  group by match.Winning_Aircraft "
  },
  {
    "NatSQL": "select pilot.Name from pilot  order by pilot.Age desc"
  },
  {
    "NatSQL": "select pilot.Name from pilot  order by pilot.Age desc"
  },
  {
    "NatSQL": "select aircraft.Aircraft from aircraft  where  count ( match.* )  >= 2  group by match.Winning_Aircraft "
  },
  {
    "NatSQL": "select aircraft.Aircraft from aircraft  where  count ( match.* )  >= 2  group by match.Winning_Aircraft "
  },
  {
    "NatSQL": "select aircraft.Aircraft from aircraft  where  @.@ not in match.* "
  },
  {
    "NatSQL": "select aircraft.Aircraft from aircraft  where  @.@ not in match.* "
  },
  {
    "NatSQL": "select aircraft.Aircraft from aircraft  where  airport.Airport_Name = \"北京首都机场\"  and  airport.Airport_Name = \"北京南苑\" "
  },
  {
    "NatSQL": "select aircraft.Aircraft from aircraft  where  airport.Airport_Name = \"北京首都机场\"  and  airport.Airport_Name = \"北京南苑\" "
  },
  {
    "NatSQL": "select airport.* from airport  order by airport.International_Passengers desc limit 1"
  },
  {
    "NatSQL": "select airport.* from airport  order by airport.International_Passengers desc limit 1"
  },
  {
    "NatSQL": "select pilot.Name , pilot.Age from pilot  where  pilot.Age < 30  group by match.Winning_Pilot  order by count ( match.* )  desc limit 1"
  },
  {
    "NatSQL": "select pilot.Name , pilot.Age from pilot  where  pilot.Age < 30  group by match.Winning_Pilot  order by count ( match.* )  desc limit 1"
  },
  {
    "NatSQL": "select pilot.Name , pilot.Age from pilot  where  @.@ join match.*  order by pilot.Age asc limit 1"
  },
  {
    "NatSQL": "select pilot.Name , pilot.Age from pilot  where  @.@ join match.*  order by pilot.Age asc limit 1"
  },
  {
    "NatSQL": "select pilot.Name from pilot  where  @.@ not in match.*  and  match.Country = \"澳大利亚\" "
  },
  {
    "NatSQL": "select pilot.Name from pilot  where  @.@ not in match.*  and  match.Country = \"澳大利亚\" "
  },
  {
    "NatSQL": "select properties.property_id , count ( residents.* )  from properties  group by properties.property_id "
  },
  {
    "NatSQL": "select  distinct services.service_type_code from services  where  organizations.organization_details = \"父子聚会\" "
  },
  {
    "NatSQL": "select residents.resident_id , residents.other_details , count ( residents_services.* )  from residents  group by residents.resident_id  order by count ( residents_services.* )  desc"
  },
  {
    "NatSQL": "select services.service_id , services.service_details , count ( residents_services.* )  from services  group by services.service_id  order by count ( residents_services.* )  desc limit 1"
  },
  {
    "NatSQL": "select things.thing_id , things.Type_of_Thing_Code , organizations.organization_details from things "
  },
  {
    "NatSQL": "select customers.customer_id , customers.customer_details from customers  where  count ( customer_events.* )  >= 3  group by customers.customer_id "
  },
  {
    "NatSQL": "select customer_events.date_moved_in , customers.customer_id , customers.customer_details from customers "
  },
  {
    "NatSQL": "select customer_events.Customer_Event_ID , customer_events.property_id from customer_events  where  count ( customer_event_notes.* )  between 1 and 3  group by customer_events.Customer_Event_ID "
  },
  {
    "NatSQL": "select  distinct things.thing_id , things.Type_of_Thing_Code from timed_status_of_things  where  timed_status_of_things.Status_of_Thing_Code = \"关闭\"  or  timed_status_of_things.Date_and_Date < \"2017-06-19 02:59:21\" "
  },
  {
    "NatSQL": "select count (  distinct timed_locations_of_things.Location_Code )  from things  where  things.service_details = \"不满意的\" "
  },
  {
    "NatSQL": "select count (  distinct timed_status_of_things.Status_of_Thing_Code )  from timed_status_of_things "
  },
  {
    "NatSQL": "select organizations.organization_id from organizations  where  except_  @.@ is organizations.* "
  },
  {
    "NatSQL": "select max ( residents.date_moved_in )  from residents "
  },
  {
    "NatSQL": "select residents.other_details from residents  where  residents.other_details like \"女士\" "
  },
  {
    "NatSQL": "select customer_events.Customer_Event_ID , customer_events.date_moved_in , customer_events.property_id from customer_events "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  @.@ not in customer_events.* "
  },
  {
    "NatSQL": "select  distinct residents.date_moved_in from residents "
  },
  {
    "NatSQL": "select count ( school.* )  from school "
  },
  {
    "NatSQL": "select count ( school.* )  from school "
  },
  {
    "NatSQL": "select school.Location from school  order by school.Enrollment asc"
  },
  {
    "NatSQL": "select school.Location from school  order by school.Enrollment asc"
  },
  {
    "NatSQL": "select school.Location from school  order by school.Founded desc"
  },
  {
    "NatSQL": "select school.Location from school  order by school.Founded desc"
  },
  {
    "NatSQL": "select school.Enrollment from school  where  school.Denomination != \"天主教\" "
  },
  {
    "NatSQL": "select school.Enrollment from school  where  school.Denomination != \"天主教\" "
  },
  {
    "NatSQL": "select avg ( school.Enrollment )  from school "
  },
  {
    "NatSQL": "select avg ( school.Enrollment )  from school "
  },
  {
    "NatSQL": "select player.Team from player  order by player.Team asc"
  },
  {
    "NatSQL": "select player.Team from player  order by player.Team asc"
  },
  {
    "NatSQL": "select count (  distinct player.Position )  from player "
  },
  {
    "NatSQL": "select count (  distinct player.Position )  from player "
  },
  {
    "NatSQL": "select player.Team from player  order by player.Age desc limit 1"
  },
  {
    "NatSQL": "select player.Team from player  order by player.Age desc limit 1"
  },
  {
    "NatSQL": "select player.Team from player  order by player.Age desc limit 5"
  },
  {
    "NatSQL": "select player.Team from player  order by player.Age desc limit 5"
  },
  {
    "NatSQL": "select player.Team , school.Location from player "
  },
  {
    "NatSQL": "select player.Team , school.Location from player "
  },
  {
    "NatSQL": "select school.Location from player  where  count ( player.* )  > 1  group by player.School_ID "
  },
  {
    "NatSQL": "select school.Location from player  where  count ( player.* )  > 1  group by player.School_ID "
  },
  {
    "NatSQL": "select school.Denomination from player  group by player.School_ID  order by count ( player.* )  desc limit 1"
  },
  {
    "NatSQL": "select school.Denomination from player  group by player.School_ID  order by count ( player.* )  desc limit 1"
  },
  {
    "NatSQL": "select school.Location , school_details.Nickname from school "
  },
  {
    "NatSQL": "select school.Location , school_details.Nickname from school "
  },
  {
    "NatSQL": "select school.Denomination , count ( school.* )  from school  group by school.Denomination "
  },
  {
    "NatSQL": "select school.Denomination , count ( school.* )  from school  group by school.Denomination "
  },
  {
    "NatSQL": "select school.Denomination , count ( school.* )  from school  group by school.Denomination  order by count ( school.* )  desc"
  },
  {
    "NatSQL": "select school.Denomination , count ( school.* )  from school  group by school.Denomination  order by count ( school.* )  desc"
  },
  {
    "NatSQL": "select school.School_Colors from school  order by school.Enrollment desc limit 1"
  },
  {
    "NatSQL": "select school.School_Colors from school  order by school.Enrollment desc limit 1"
  },
  {
    "NatSQL": "select school.Location from school  where  @.@ not in player.* "
  },
  {
    "NatSQL": "select school.Location from school  where  @.@ not in player.* "
  },
  {
    "NatSQL": "select school.Denomination from school  where  school.Founded < 1890  and  school.Founded > 1900 "
  },
  {
    "NatSQL": "select school.Denomination from school  where  school.Founded < 1890  and  school.Founded > 1900 "
  },
  {
    "NatSQL": "select school_details.Nickname from school_details  where  school_details.Division != \"第一机构\" "
  },
  {
    "NatSQL": "select school_details.Nickname from school_details  where  school_details.Division != \"第一机构\" "
  },
  {
    "NatSQL": "select school.Denomination from school  where  count ( school.* )  > 1  group by school.Denomination "
  },
  {
    "NatSQL": "select school.Denomination from school  where  count ( school.* )  > 1  group by school.Denomination "
  },
  {
    "NatSQL": "select  distinct district.District_name from district  order by district.City_Area desc"
  },
  {
    "NatSQL": "select  distinct district.District_name from district  order by district.City_Area desc"
  },
  {
    "NatSQL": "select product.max_page_size from product  where  count ( product.* )  > 3  group by product.max_page_size "
  },
  {
    "NatSQL": "select product.max_page_size from product  where  count ( product.* )  > 3  group by product.max_page_size "
  },
  {
    "NatSQL": "select district.District_name , district.City_Population from district  where  district.City_Population between 200000 and 2000000 "
  },
  {
    "NatSQL": "select district.District_name , district.City_Population from district  where  district.City_Population between 200000 and 2000000 "
  },
  {
    "NatSQL": "select district.District_name from district  where  district.City_Area > 10  or  district.City_Population > 100000 "
  },
  {
    "NatSQL": "select district.District_name from district  where  district.City_Area > 10  or  district.City_Population > 100000 "
  },
  {
    "NatSQL": "select district.District_name from district  order by district.City_Population desc limit 1"
  },
  {
    "NatSQL": "select district.District_name from district  order by district.City_Population desc limit 1"
  },
  {
    "NatSQL": "select district.District_name from district  order by district.City_Area asc limit 1"
  },
  {
    "NatSQL": "select district.District_name from district  order by district.City_Area asc limit 1"
  },
  {
    "NatSQL": "select sum ( district.City_Population )  from district  order by district.City_Area desc limit 3"
  },
  {
    "NatSQL": "select sum ( district.City_Population )  from district  order by district.City_Area desc limit 3"
  },
  {
    "NatSQL": "select store.Type , count ( store.* )  from store  group by store.Type "
  },
  {
    "NatSQL": "select store.Type , count ( store.* )  from store  group by store.Type "
  },
  {
    "NatSQL": "select store.Store_Name from store  where  district.District_name = \"上城区\" "
  },
  {
    "NatSQL": "select store.Store_Name from store  where  district.District_name = \"上城区\" "
  },
  {
    "NatSQL": "select store.Store_Name from store  where  store_district.District_ID in district.District_ID  order by district.City_Population desc limit 1"
  },
  {
    "NatSQL": "select store.Store_Name from store  where  store_district.District_ID in district.District_ID  order by district.City_Population desc limit 1"
  },
  {
    "NatSQL": "select district.Headquartered_City from store  where  store.Store_Name = \"卡西欧\" "
  },
  {
    "NatSQL": "select district.Headquartered_City from store  where  store.Store_Name = \"卡西欧\" "
  },
  {
    "NatSQL": "select district.Headquartered_City , count ( store.* )  from store  group by district.Headquartered_City "
  },
  {
    "NatSQL": "select district.Headquartered_City , count ( store.* )  from store  group by district.Headquartered_City "
  },
  {
    "NatSQL": "select district.Headquartered_City from store  group by district.Headquartered_City  order by count ( store.* )  desc limit 1"
  },
  {
    "NatSQL": "select district.Headquartered_City from store  group by district.Headquartered_City  order by count ( store.* )  desc limit 1"
  },
  {
    "NatSQL": "select avg ( product.pages_per_minute_color )  from product "
  },
  {
    "NatSQL": "select avg ( product.pages_per_minute_color )  from product "
  },
  {
    "NatSQL": "select product.product from product  where  @.@ join store_product.*  and  store.Store_Name = \"安踏\" "
  },
  {
    "NatSQL": "select product.product from product  where  @.@ join store_product.*  and  store.Store_Name = \"安踏\" "
  },
  {
    "NatSQL": "select product.product from product  where  product.max_page_size = \"A4\"  and  product.pages_per_minute_color < 5 "
  },
  {
    "NatSQL": "select product.product from product  where  product.max_page_size = \"A4\"  and  product.pages_per_minute_color < 5 "
  },
  {
    "NatSQL": "select product.product from product  where  product.max_page_size = \"A4\"  or  product.pages_per_minute_color < 5 "
  },
  {
    "NatSQL": "select product.product from product  where  product.max_page_size = \"A4\"  or  product.pages_per_minute_color < 5 "
  },
  {
    "NatSQL": "select product.product from product  where  product.product like \"扫描仪\" "
  },
  {
    "NatSQL": "select product.product from product  where  product.product like \"扫描仪\" "
  },
  {
    "NatSQL": "select product.max_page_size from product  group by product.max_page_size  order by count ( product.* )  desc limit 1"
  },
  {
    "NatSQL": "select product.max_page_size from product  group by product.max_page_size  order by count ( product.* )  desc limit 1"
  },
  {
    "NatSQL": "select product.product from product  where  product.product != product.max_page_size  order by count ( product.* )  desc limit 1"
  },
  {
    "NatSQL": "select product.product from product  where  product.product != product.max_page_size  order by count ( product.* )  desc limit 1"
  },
  {
    "NatSQL": "select sum ( district.City_Population )  from district  where  @.@ > avg ( district.City_Area )  "
  },
  {
    "NatSQL": "select sum ( district.City_Population )  from district  where  @.@ > avg ( district.City_Area )  "
  },
  {
    "NatSQL": "select district.District_name from store  where  store.Type = \"大型商场\"  and  store.Type = \"便利店\" "
  },
  {
    "NatSQL": "select district.District_name from store  where  store.Type = \"大型商场\"  and  store.Type = \"便利店\" "
  },
  {
    "NatSQL": "select sum ( college.enr )  from college "
  },
  {
    "NatSQL": "select sum ( college.enr )  from college "
  },
  {
    "NatSQL": "select avg ( college.enr )  from college "
  },
  {
    "NatSQL": "select avg ( college.enr )  from college "
  },
  {
    "NatSQL": "select count ( college.* )  from college "
  },
  {
    "NatSQL": "select count ( college.* )  from college "
  },
  {
    "NatSQL": "select count ( player.* )  from player  where  player.HS > 1000 "
  },
  {
    "NatSQL": "select count ( player.* )  from player  where  player.HS > 1000 "
  },
  {
    "NatSQL": "select count ( college.* )  from college  where  college.enr > 15000 "
  },
  {
    "NatSQL": "select count ( college.* )  from college  where  college.enr > 15000 "
  },
  {
    "NatSQL": "select avg ( player.HS )  from player "
  },
  {
    "NatSQL": "select avg ( player.HS )  from player "
  },
  {
    "NatSQL": "select player.pName , player.HS from player  where  player.HS < 1500 "
  },
  {
    "NatSQL": "select player.pName , player.HS from player  where  player.HS < 1500 "
  },
  {
    "NatSQL": "select count (  distinct tryout.cName )  from tryout "
  },
  {
    "NatSQL": "select count (  distinct tryout.cName )  from tryout "
  },
  {
    "NatSQL": "select count (  distinct tryout.pPos )  from tryout "
  },
  {
    "NatSQL": "select count (  distinct tryout.pPos )  from tryout "
  },
  {
    "NatSQL": "select count ( tryout.* )  from tryout  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select count ( tryout.* )  from tryout  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select count ( tryout.* )  from tryout  where  tryout.pPos = \"守门员\" "
  },
  {
    "NatSQL": "select count ( tryout.* )  from tryout  where  tryout.pPos = \"守门员\" "
  },
  {
    "NatSQL": "select avg ( player.HS )  , max ( player.HS )  , min ( player.HS )  from player "
  },
  {
    "NatSQL": "select avg ( player.HS )  , max ( player.HS )  , min ( player.HS )  from player "
  },
  {
    "NatSQL": "select avg ( college.enr )  from college  where  college.state = \"河北\" "
  },
  {
    "NatSQL": "select avg ( college.enr )  from college  where  college.state = \"河北\" "
  },
  {
    "NatSQL": "select player.pName from player  where  player.HS between 500 and 1500 "
  },
  {
    "NatSQL": "select player.pName from player  where  player.HS between 500 and 1500 "
  },
  {
    "NatSQL": "select  distinct player.pName from player  where  player.pName like \"a\" "
  },
  {
    "NatSQL": "select  distinct player.pName from player  where  player.pName like \"a\" "
  },
  {
    "NatSQL": "select college.cName , college.enr from college  where  college.enr > 10000  and  college.state = \"江苏\" "
  },
  {
    "NatSQL": "select college.cName , college.enr from college  where  college.enr > 10000  and  college.state = \"江苏\" "
  },
  {
    "NatSQL": "select college.* from college  order by college.enr asc"
  },
  {
    "NatSQL": "select college.* from college  order by college.enr asc"
  },
  {
    "NatSQL": "select college.cName from college  where  college.enr > 18000  order by college.cName asc"
  },
  {
    "NatSQL": "select college.cName from college  where  college.enr > 18000  order by college.cName asc"
  },
  {
    "NatSQL": "select player.pName from player  where  player.yCard = \"确定\"  order by player.HS desc"
  },
  {
    "NatSQL": "select player.pName from player  where  player.yCard = \"确定\"  order by player.HS desc"
  },
  {
    "NatSQL": "select  distinct tryout.cName from tryout  order by tryout.cName asc"
  },
  {
    "NatSQL": "select  distinct tryout.cName from tryout  order by tryout.cName asc"
  },
  {
    "NatSQL": "select tryout.pPos from tryout  group by tryout.pPos  order by count ( tryout.* )  desc limit 1"
  },
  {
    "NatSQL": "select tryout.pPos from tryout  group by tryout.pPos  order by count ( tryout.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( tryout.* )  , tryout.cName from tryout  group by tryout.cName  order by count ( tryout.* )  desc"
  },
  {
    "NatSQL": "select count ( tryout.* )  , tryout.cName from tryout  group by tryout.cName  order by count ( tryout.* )  desc"
  },
  {
    "NatSQL": "select min ( player.HS )  , tryout.pPos from tryout  group by tryout.pPos "
  },
  {
    "NatSQL": "select min ( player.HS )  , tryout.pPos from tryout  group by tryout.pPos "
  },
  {
    "NatSQL": "select college.cName from college  order by college.enr desc limit 3"
  },
  {
    "NatSQL": "select college.cName from college  order by college.enr desc limit 3"
  },
  {
    "NatSQL": "select college.cName , college.state , min ( college.enr )  from college  group by college.state "
  },
  {
    "NatSQL": "select college.cName , college.state , min ( college.enr )  from college  group by college.state "
  },
  {
    "NatSQL": "select  distinct college.state from college  where  @.@ join tryout.* "
  },
  {
    "NatSQL": "select  distinct college.state from college  where  @.@ join tryout.* "
  },
  {
    "NatSQL": "select  distinct college.state from college  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select  distinct college.state from college  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select player.pName , tryout.cName from player  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select player.pName , tryout.cName from player  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select player.pName from player  where  @.@ join tryout.*  order by player.pName asc"
  },
  {
    "NatSQL": "select player.pName from player  where  @.@ join tryout.*  order by player.pName asc"
  },
  {
    "NatSQL": "select player.pName , player.HS from player  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select player.pName , player.HS from player  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select college.state from college  where  tryout.pPos = \"前锋\" "
  },
  {
    "NatSQL": "select college.state from college  where  tryout.pPos = \"前锋\" "
  },
  {
    "NatSQL": "select player.pName from player  where  tryout.decision = \"确定\"  and  tryout.pPos = \"前锋\" "
  },
  {
    "NatSQL": "select player.pName from player  where  tryout.decision = \"确定\"  and  tryout.pPos = \"前锋\" "
  },
  {
    "NatSQL": "select college.state from college  where  player.pName = \"小刚\" "
  },
  {
    "NatSQL": "select college.state from college  where  player.pName = \"小刚\" "
  },
  {
    "NatSQL": "select avg ( player.HS )  , max ( player.HS )  from player  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select avg ( player.HS )  , max ( player.HS )  from player  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select avg ( player.HS )  from player  where  tryout.decision = \"否定\" "
  },
  {
    "NatSQL": "select avg ( player.HS )  from player  where  tryout.decision = \"否定\" "
  },
  {
    "NatSQL": "select max ( player.HS )  , tryout.pPos from player  where  player.HS > 1000  group by tryout.pPos "
  },
  {
    "NatSQL": "select max ( player.HS )  , tryout.pPos from player  where  player.HS > 1000  group by tryout.pPos "
  },
  {
    "NatSQL": "select tryout.cName from tryout  where  player.pName like \"东\" "
  },
  {
    "NatSQL": "select tryout.cName from tryout  where  player.pName like \"东\" "
  },
  {
    "NatSQL": "select tryout.cName from tryout  where  tryout.decision = \"确定\"  and  tryout.pPos = \"守门员\" "
  },
  {
    "NatSQL": "select tryout.cName from tryout  where  tryout.decision = \"确定\"  and  tryout.pPos = \"守门员\" "
  },
  {
    "NatSQL": "select player.pName from tryout  where  tryout.cName in college.cName  order by college.enr desc limit 1"
  },
  {
    "NatSQL": "select player.pName from tryout  where  tryout.cName in college.cName  order by college.enr desc limit 1"
  },
  {
    "NatSQL": "select  distinct college.state , college.enr from college  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select  distinct college.state , college.enr from college  where  tryout.decision = \"确定\" "
  },
  {
    "NatSQL": "select college.cName from college  where  college.enr > 15000  and  college.state = \"江苏\"  or  college.enr < 13000  and  college.state = \"山东\" "
  },
  {
    "NatSQL": "select college.cName from college  where  college.enr > 15000  and  college.state = \"江苏\"  or  college.enr < 13000  and  college.state = \"山东\" "
  },
  {
    "NatSQL": "select tryout.cName from tryout  where  tryout.pPos = \"守门员\"  and  tryout.pPos = \"中场\" "
  },
  {
    "NatSQL": "select tryout.cName from tryout  where  tryout.pPos = \"守门员\"  and  tryout.pPos = \"中场\" "
  },
  {
    "NatSQL": "select college.state from college  where  tryout.pPos = \"守门员\"  and  tryout.pPos = \"中场\" "
  },
  {
    "NatSQL": "select college.state from college  where  tryout.pPos = \"守门员\"  and  tryout.pPos = \"中场\" "
  },
  {
    "NatSQL": "select count ( tryout.* )  from tryout  where  tryout.pPos = \"守门员\"  and  tryout.pPos = \"中场\" "
  },
  {
    "NatSQL": "select count ( tryout.* )  from tryout  where  tryout.pPos = \"守门员\"  and  tryout.pPos = \"中场\" "
  },
  {
    "NatSQL": "select tryout.cName from tryout  where  tryout.pPos = \"中场\"  and  tryout.pPos != \"守门员\" "
  },
  {
    "NatSQL": "select tryout.cName from tryout  where  tryout.pPos = \"中场\"  and  tryout.pPos != \"守门员\" "
  },
  {
    "NatSQL": "select college.state from college  where  tryout.pPos = \"中场\"  and  tryout.pPos != \"守门员\" "
  },
  {
    "NatSQL": "select college.state from college  where  tryout.pPos = \"中场\"  and  tryout.pPos != \"守门员\" "
  },
  {
    "NatSQL": "select count ( college.* )  from college  where  tryout.pPos = \"中场\"  and  tryout.pPos != \"守门员\" "
  },
  {
    "NatSQL": "select count ( college.* )  from college  where  tryout.pPos = \"中场\"  and  tryout.pPos != \"守门员\" "
  },
  {
    "NatSQL": "select  distinct college.state from college  where  @.@ < max ( college.enr )  "
  },
  {
    "NatSQL": "select  distinct college.state from college  where  @.@ < max ( college.enr )  "
  },
  {
    "NatSQL": "select  distinct college.cName from college  where  @.@ > min ( college.enr )   and  college.state = \"河北\" "
  },
  {
    "NatSQL": "select  distinct college.cName from college  where  @.@ > min ( college.enr )   and  college.state = \"河北\" "
  },
  {
    "NatSQL": "select college.cName from college  where  @.@ > max ( college.enr )   and  college.state = \"河北\" "
  },
  {
    "NatSQL": "select college.cName from college  where  @.@ > max ( college.enr )   and  college.state = \"河北\" "
  },
  {
    "NatSQL": "select sum ( college.enr )  from college  where  @.@ not in tryout.*  and  tryout.pPos = \"守门员\" "
  },
  {
    "NatSQL": "select sum ( college.enr )  from college  where  @.@ not in tryout.*  and  tryout.pPos = \"守门员\" "
  },
  {
    "NatSQL": "select count (  distinct college.state )  from college  where  @.@ > avg ( college.enr )  "
  },
  {
    "NatSQL": "select count (  distinct college.state )  from college  where  @.@ > avg ( college.enr )  "
  },
  {
    "NatSQL": "select count (  distinct college.state )  from college  where  @.@ < avg ( college.enr )  "
  },
  {
    "NatSQL": "select count (  distinct college.state )  from college  where  @.@ < avg ( college.enr )  "
  },
  {
    "NatSQL": "select count ( device.* )  from device "
  },
  {
    "NatSQL": "select count ( device.* )  from device "
  },
  {
    "NatSQL": "select device.Carrier from device  order by device.Carrier asc"
  },
  {
    "NatSQL": "select device.Carrier from device  order by device.Carrier asc"
  },
  {
    "NatSQL": "select device.Carrier from device  where  device.Software_Platform != \"安卓\" "
  },
  {
    "NatSQL": "select device.Carrier from device  where  device.Software_Platform != \"安卓\" "
  },
  {
    "NatSQL": "select shop.Shop_Name from shop  order by shop.Open_Year asc"
  },
  {
    "NatSQL": "select shop.Shop_Name from shop  order by shop.Open_Year asc"
  },
  {
    "NatSQL": "select avg ( stock.Quantity )  from stock "
  },
  {
    "NatSQL": "select avg ( stock.Quantity )  from stock "
  },
  {
    "NatSQL": "select shop.Shop_Name , shop.Location from shop  order by shop.Shop_Name asc"
  },
  {
    "NatSQL": "select shop.Shop_Name , shop.Location from shop  order by shop.Shop_Name asc"
  },
  {
    "NatSQL": "select count (  distinct device.Software_Platform )  from device "
  },
  {
    "NatSQL": "select count (  distinct device.Software_Platform )  from device "
  },
  {
    "NatSQL": "select shop.Open_Date , shop.Open_Year from shop  where  shop.Shop_Name = \"苹果\" "
  },
  {
    "NatSQL": "select shop.Open_Date , shop.Open_Year from shop  where  shop.Shop_Name = \"苹果\" "
  },
  {
    "NatSQL": "select shop.Shop_Name from shop  order by shop.Open_Year desc limit 1"
  },
  {
    "NatSQL": "select shop.Shop_Name from shop  order by shop.Open_Year desc limit 1"
  },
  {
    "NatSQL": "select shop.Shop_Name , device.Carrier from stock "
  },
  {
    "NatSQL": "select shop.Shop_Name , device.Carrier from stock "
  },
  {
    "NatSQL": "select shop.Shop_Name from stock  where  count ( stock.* )  > 1  group by stock.Shop_ID "
  },
  {
    "NatSQL": "select shop.Shop_Name from stock  where  count ( stock.* )  > 1  group by stock.Shop_ID "
  },
  {
    "NatSQL": "select shop.Shop_Name from stock  group by stock.Shop_ID  order by count ( stock.* )  desc limit 1"
  },
  {
    "NatSQL": "select shop.Shop_Name from stock  group by stock.Shop_ID  order by count ( stock.* )  desc limit 1"
  },
  {
    "NatSQL": "select shop.Shop_Name from stock  group by stock.Shop_ID  order by sum ( stock.Quantity )  desc limit 1"
  },
  {
    "NatSQL": "select shop.Shop_Name from stock  group by stock.Shop_ID  order by sum ( stock.Quantity )  desc limit 1"
  },
  {
    "NatSQL": "select device.Software_Platform , count ( device.* )  from device  group by device.Software_Platform "
  },
  {
    "NatSQL": "select device.Software_Platform , count ( device.* )  from device  group by device.Software_Platform "
  },
  {
    "NatSQL": "select device.Software_Platform from device  group by device.Software_Platform  order by count ( device.* )  desc"
  },
  {
    "NatSQL": "select device.Software_Platform from device  group by device.Software_Platform  order by count ( device.* )  desc"
  },
  {
    "NatSQL": "select device.Software_Platform from device  group by device.Software_Platform  order by count ( device.* )  desc limit 1"
  },
  {
    "NatSQL": "select device.Software_Platform from device  group by device.Software_Platform  order by count ( device.* )  desc limit 1"
  },
  {
    "NatSQL": "select shop.Shop_Name from shop  where  @.@ not in stock.* "
  },
  {
    "NatSQL": "select shop.Shop_Name from shop  where  @.@ not in stock.* "
  },
  {
    "NatSQL": "select shop.Location from shop  where  shop.Open_Year > 2012  and  shop.Open_Year < 2008 "
  },
  {
    "NatSQL": "select shop.Location from shop  where  shop.Open_Year > 2012  and  shop.Open_Year < 2008 "
  },
  {
    "NatSQL": "select device.Carrier from device  where  @.@ not in stock.* "
  },
  {
    "NatSQL": "select device.Carrier from device  where  @.@ not in stock.* "
  },
  {
    "NatSQL": "select device.Carrier from stock  where  count ( stock.* )  > 1  group by stock.Device_ID "
  },
  {
    "NatSQL": "select device.Carrier from stock  where  count ( stock.* )  > 1  group by stock.Device_ID "
  },
  {
    "NatSQL": "select count ( bookings.* )  from bookings "
  },
  {
    "NatSQL": "select count ( bookings.* )  from bookings "
  },
  {
    "NatSQL": "select bookings.Order_Date from bookings "
  },
  {
    "NatSQL": "select bookings.Order_Date from bookings "
  },
  {
    "NatSQL": "select bookings.Planned_Delivery_Date , bookings.Actual_Delivery_Date from bookings "
  },
  {
    "NatSQL": "select bookings.Planned_Delivery_Date , bookings.Actual_Delivery_Date from bookings "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select customers.Customer_Phone , customers.Customer_Email_Address from customers  where  customers.Customer_Name = \"小勇\" "
  },
  {
    "NatSQL": "select customers.Customer_Phone , customers.Customer_Email_Address from customers  where  customers.Customer_Name = \"小勇\" "
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Name from drama_workshop_groups "
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Name from drama_workshop_groups "
  },
  {
    "NatSQL": "select min ( invoices.Order_Quantity )  , avg ( invoices.Order_Quantity )  , max ( invoices.Order_Quantity )  from invoices "
  },
  {
    "NatSQL": "select min ( invoices.Order_Quantity )  , avg ( invoices.Order_Quantity )  , max ( invoices.Order_Quantity )  from invoices "
  },
  {
    "NatSQL": "select  distinct invoices.payment_method_code from invoices "
  },
  {
    "NatSQL": "select  distinct invoices.payment_method_code from invoices "
  },
  {
    "NatSQL": "select marketing_regions.Marketing_Region_Descriptrion from marketing_regions  where  marketing_regions.Marketing_Region_Name = \"中国\" "
  },
  {
    "NatSQL": "select marketing_regions.Marketing_Region_Descriptrion from marketing_regions  where  marketing_regions.Marketing_Region_Name = \"中国\" "
  },
  {
    "NatSQL": "select  distinct products.Product_Name from products  where  @.@ > avg ( products.Product_Price )  "
  },
  {
    "NatSQL": "select  distinct products.Product_Name from products  where  @.@ > avg ( products.Product_Price )  "
  },
  {
    "NatSQL": "select products.Product_Name from products  order by products.Product_Price desc limit 1"
  },
  {
    "NatSQL": "select products.Product_Name from products  order by products.Product_Price desc limit 1"
  },
  {
    "NatSQL": "select products.Product_Name from products  order by products.Product_Price asc"
  },
  {
    "NatSQL": "select products.Product_Name from products  order by products.Product_Price asc"
  },
  {
    "NatSQL": "select performers.Customer_Phone from performers  where  performers.Customer_Name = \"李红\" "
  },
  {
    "NatSQL": "select performers.Customer_Phone from performers  where  performers.Customer_Name = \"李红\" "
  },
  {
    "NatSQL": "select invoices.payment_method_code , count ( invoices.* )  from invoices  group by invoices.payment_method_code "
  },
  {
    "NatSQL": "select invoices.payment_method_code , count ( invoices.* )  from invoices  group by invoices.payment_method_code "
  },
  {
    "NatSQL": "select invoices.payment_method_code from invoices  group by invoices.payment_method_code  order by count ( invoices.* )  desc limit 1"
  },
  {
    "NatSQL": "select invoices.payment_method_code from invoices  group by invoices.payment_method_code  order by count ( invoices.* )  desc limit 1"
  },
  {
    "NatSQL": "select addresses.City_Town from addresses  where  stores.Store_Name = \"东方\" "
  },
  {
    "NatSQL": "select addresses.City_Town from addresses  where  stores.Store_Name = \"东方\" "
  },
  {
    "NatSQL": "select addresses.State_County from addresses  where  stores.Marketing_Region_Code = \"西南\" "
  },
  {
    "NatSQL": "select addresses.State_County from addresses  where  stores.Marketing_Region_Code = \"西南\" "
  },
  {
    "NatSQL": "select marketing_regions.Marketing_Region_Name from marketing_regions  where  stores.Store_Name = \"友谊商店\" "
  },
  {
    "NatSQL": "select marketing_regions.Marketing_Region_Name from marketing_regions  where  stores.Store_Name = \"友谊商店\" "
  },
  {
    "NatSQL": "select ref_service_types.Service_Type_Description from ref_service_types  where  services.Product_Price > 100 "
  },
  {
    "NatSQL": "select ref_service_types.Service_Type_Description from ref_service_types  where  services.Product_Price > 100 "
  },
  {
    "NatSQL": "select ref_service_types.Service_Type_Description , services.Service_Type_Code , count ( ref_service_types.* )  from ref_service_types  group by services.Service_Type_Code "
  },
  {
    "NatSQL": "select ref_service_types.Service_Type_Description , services.Service_Type_Code , count ( ref_service_types.* )  from ref_service_types  group by services.Service_Type_Code "
  },
  {
    "NatSQL": "select ref_service_types.Service_Type_Description , ref_service_types.Service_Type_Code from ref_service_types  group by ref_service_types.Service_Type_Code  order by count ( services.* )  desc limit 1"
  },
  {
    "NatSQL": "select ref_service_types.Service_Type_Description , ref_service_types.Service_Type_Code from ref_service_types  group by ref_service_types.Service_Type_Code  order by count ( services.* )  desc limit 1"
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Phone , drama_workshop_groups.Store_Email_Address from drama_workshop_groups  where  @.@ join services.* "
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Phone , drama_workshop_groups.Store_Email_Address from drama_workshop_groups  where  @.@ join services.* "
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Phone , drama_workshop_groups.Store_Email_Address from drama_workshop_groups  where  services.Product_Name = \"电影\" "
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Phone , drama_workshop_groups.Store_Email_Address from drama_workshop_groups  where  services.Product_Name = \"电影\" "
  },
  {
    "NatSQL": "select products.Product_Name , avg ( products.Product_Price )  from products  group by products.Product_Name "
  },
  {
    "NatSQL": "select products.Product_Name , avg ( products.Product_Price )  from products  group by products.Product_Name "
  },
  {
    "NatSQL": "select products.Product_Name from products  where  avg ( products.Product_Price )  < 1000000  group by products.Product_Name "
  },
  {
    "NatSQL": "select products.Product_Name from products  where  avg ( products.Product_Price )  < 1000000  group by products.Product_Name "
  },
  {
    "NatSQL": "select sum ( order_items.Order_Quantity )  from order_items  where  products.Product_Name = \"照片\" "
  },
  {
    "NatSQL": "select sum ( order_items.Order_Quantity )  from order_items  where  products.Product_Name = \"照片\" "
  },
  {
    "NatSQL": "select order_items.Other_Item_Details from order_items  where  products.Product_Price > 2000 "
  },
  {
    "NatSQL": "select order_items.Other_Item_Details from order_items  where  products.Product_Price > 2000 "
  },
  {
    "NatSQL": "select customer_orders.Actual_Delivery_Date from customer_orders  where  order_items.Order_Quantity = 1 "
  },
  {
    "NatSQL": "select customer_orders.Actual_Delivery_Date from customer_orders  where  order_items.Order_Quantity = 1 "
  },
  {
    "NatSQL": "select customer_orders.Order_Date from customer_orders  where  products.Product_Price > 1000 "
  },
  {
    "NatSQL": "select customer_orders.Order_Date from customer_orders  where  products.Product_Price > 1000 "
  },
  {
    "NatSQL": "select count (  distinct drama_workshop_groups.Currency_Code )  from drama_workshop_groups "
  },
  {
    "NatSQL": "select count (  distinct drama_workshop_groups.Currency_Code )  from drama_workshop_groups "
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Name from addresses  where  addresses.City_Town = \"嘉兴\" "
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Name from addresses  where  addresses.City_Town = \"嘉兴\" "
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Email_Address from addresses  where  addresses.State_County = \"黑龙江\" "
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Email_Address from addresses  where  addresses.State_County = \"黑龙江\" "
  },
  {
    "NatSQL": "select addresses.City_Town , count ( drama_workshop_groups.* )  from addresses  group by addresses.City_Town "
  },
  {
    "NatSQL": "select addresses.City_Town , count ( drama_workshop_groups.* )  from addresses  group by addresses.City_Town "
  },
  {
    "NatSQL": "select drama_workshop_groups.Marketing_Region_Code from drama_workshop_groups  group by drama_workshop_groups.Marketing_Region_Code  order by count ( drama_workshop_groups.* )  desc limit 1"
  },
  {
    "NatSQL": "select drama_workshop_groups.Marketing_Region_Code from drama_workshop_groups  group by drama_workshop_groups.Marketing_Region_Code  order by count ( drama_workshop_groups.* )  desc limit 1"
  },
  {
    "NatSQL": "select addresses.City_Town from addresses  where  @.@ join customers.*  except_  @.@ join performers.* "
  },
  {
    "NatSQL": "select addresses.City_Town from addresses  where  @.@ join customers.*  except_  @.@ join performers.* "
  },
  {
    "NatSQL": "select bookings.Status_Code from bookings  group by bookings.Status_Code  order by count ( bookings.* )  desc limit 1"
  },
  {
    "NatSQL": "select bookings.Status_Code from bookings  group by bookings.Status_Code  order by count ( bookings.* )  desc limit 1"
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Name from bookings  where  bookings.Status_Code = \"停止\" "
  },
  {
    "NatSQL": "select drama_workshop_groups.Store_Name from bookings  where  bookings.Status_Code = \"停止\" "
  },
  {
    "NatSQL": "select clients.Customer_Name from clients  where  except_  @.@ is bookings.* "
  },
  {
    "NatSQL": "select clients.Customer_Name from clients  where  except_  @.@ is bookings.* "
  },
  {
    "NatSQL": "select avg ( invoices.Order_Quantity )  from invoices  where  invoices.payment_method_code = \"信用卡\" "
  },
  {
    "NatSQL": "select avg ( invoices.Order_Quantity )  from invoices  where  invoices.payment_method_code = \"信用卡\" "
  },
  {
    "NatSQL": "select invoices.Product_ID from invoices  group by invoices.Product_ID  order by count ( invoices.* )  desc limit 1"
  },
  {
    "NatSQL": "select invoices.Product_ID from invoices  group by invoices.Product_ID  order by count ( invoices.* )  desc limit 1"
  },
  {
    "NatSQL": "select ref_service_types.Service_Type_Description from ref_service_types  where  services.Product_Name = \"照片\"  and  services.Product_Name = \"电影\" "
  },
  {
    "NatSQL": "select ref_service_types.Service_Type_Description from ref_service_types  where  services.Product_Name = \"照片\"  and  services.Product_Name = \"电影\" "
  },
  {
    "NatSQL": "select count ( band.* )  from band "
  },
  {
    "NatSQL": "select count ( band.* )  from band "
  },
  {
    "NatSQL": "select  distinct albums.Label from albums "
  },
  {
    "NatSQL": "select  distinct albums.Label from albums "
  },
  {
    "NatSQL": "select albums.* from albums  where  albums.Year = 2012 "
  },
  {
    "NatSQL": "select albums.* from albums  where  albums.Year = 2012 "
  },
  {
    "NatSQL": "select  distinct performance.StagePosition from performance  where  band.Firstname = \"俊杰\" "
  },
  {
    "NatSQL": "select  distinct performance.StagePosition from performance  where  band.Firstname = \"俊杰\" "
  },
  {
    "NatSQL": "select count ( songs.* )  from songs "
  },
  {
    "NatSQL": "select count ( songs.* )  from songs "
  },
  {
    "NatSQL": "select songs.Title from performance  where  @.@ join performance.*  and  band.Lastname = \"刘\" "
  },
  {
    "NatSQL": "select songs.Title from performance  where  @.@ join performance.*  and  band.Lastname = \"刘\" "
  },
  {
    "NatSQL": "select count ( band.* )  from performance  where  @.@ join performance.*  and  songs.Title = \"红玫瑰\" "
  },
  {
    "NatSQL": "select count ( band.* )  from performance  where  @.@ join performance.*  and  songs.Title = \"红玫瑰\" "
  },
  {
    "NatSQL": "select songs.Title from performance  where  @.@ join performance.*  and  band.Firstname = \"贯中\" "
  },
  {
    "NatSQL": "select songs.Title from performance  where  @.@ join performance.*  and  band.Firstname = \"贯中\" "
  },
  {
    "NatSQL": "select band.Firstname , band.Lastname from performance  where  @.@ join performance.*  and  songs.Title = \"红日\" "
  },
  {
    "NatSQL": "select band.Firstname , band.Lastname from performance  where  @.@ join performance.*  and  songs.Title = \"红日\" "
  },
  {
    "NatSQL": "select band.Firstname , band.Lastname from performance  where  songs.Title = \"红日\"  and  performance.StagePosition = \"后台\" "
  },
  {
    "NatSQL": "select band.Firstname , band.Lastname from performance  where  songs.Title = \"红日\"  and  performance.StagePosition = \"后台\" "
  },
  {
    "NatSQL": "select count (  distinct albums.Label )  from albums "
  },
  {
    "NatSQL": "select count (  distinct albums.Label )  from albums "
  },
  {
    "NatSQL": "select albums.Label from albums  group by albums.Label  order by count ( albums.* )  desc limit 1"
  },
  {
    "NatSQL": "select albums.Label from albums  group by albums.Label  order by count ( albums.* )  desc limit 1"
  },
  {
    "NatSQL": "select band.Lastname from performance  where  @.@ join performance.*  group by band.Lastname  order by count ( songs.* )  desc limit 1"
  },
  {
    "NatSQL": "select band.Lastname from performance  where  @.@ join performance.*  group by band.Lastname  order by count ( songs.* )  desc limit 1"
  },
  {
    "NatSQL": "select band.Lastname from performance  where  performance.StagePosition = \"后台\"  group by band.Lastname  order by count ( performance.* )  desc limit 1"
  },
  {
    "NatSQL": "select band.Lastname from performance  where  performance.StagePosition = \"后台\"  group by band.Lastname  order by count ( performance.* )  desc limit 1"
  },
  {
    "NatSQL": "select songs.Title from songs  where  songs.Title like \"这个\" "
  },
  {
    "NatSQL": "select songs.Title from songs  where  songs.Title like \"这个\" "
  },
  {
    "NatSQL": "select  distinct instruments.Instrument from instruments "
  },
  {
    "NatSQL": "select  distinct instruments.Instrument from instruments "
  },
  {
    "NatSQL": "select instruments.Instrument from performance  where  @.@ join performance.*  and  band.Lastname = \"刘\"  and  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select instruments.Instrument from performance  where  @.@ join performance.*  and  band.Lastname = \"刘\"  and  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select instruments.Instrument from instruments  group by instruments.Instrument  order by count ( instruments.* )  desc limit 1"
  },
  {
    "NatSQL": "select instruments.Instrument from instruments  group by instruments.Instrument  order by count ( instruments.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( instruments.* )  from instruments  where  instruments.Instrument = \"鼓\" "
  },
  {
    "NatSQL": "select count ( instruments.* )  from instruments  where  instruments.Instrument = \"鼓\" "
  },
  {
    "NatSQL": "select instruments.Instrument from instruments  where  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select instruments.Instrument from instruments  where  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select count (  distinct instruments.Instrument )  from instruments  where  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select count (  distinct instruments.Instrument )  from instruments  where  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select count (  distinct instruments.Instrument )  from instruments  where  band.Lastname = \"刘\" "
  },
  {
    "NatSQL": "select count (  distinct instruments.Instrument )  from instruments  where  band.Lastname = \"刘\" "
  },
  {
    "NatSQL": "select instruments.Instrument from instruments  where  band.Lastname = \"刘\" "
  },
  {
    "NatSQL": "select instruments.Instrument from instruments  where  band.Lastname = \"刘\" "
  },
  {
    "NatSQL": "select songs.Title from vocals  group by vocals.SongId  order by count ( vocals.* )  desc limit 1"
  },
  {
    "NatSQL": "select songs.Title from vocals  group by vocals.SongId  order by count ( vocals.* )  desc limit 1"
  },
  {
    "NatSQL": "select vocals.Type from vocals  group by vocals.Type  order by count ( vocals.* )  desc limit 1"
  },
  {
    "NatSQL": "select vocals.Type from vocals  group by vocals.Type  order by count ( vocals.* )  desc limit 1"
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  band.Lastname = \"刘\"  group by vocals.Type  order by count ( vocals.* )  desc limit 1"
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  band.Lastname = \"刘\"  group by vocals.Type  order by count ( vocals.* )  desc limit 1"
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select count ( vocals.* )  from vocals  where  songs.Title = \"波斯猫\" "
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  songs.Title = \"波斯猫\" "
  },
  {
    "NatSQL": "select count (  distinct songs.Title )  from vocals  where  vocals.Type = \"领唱\" "
  },
  {
    "NatSQL": "select count (  distinct songs.Title )  from vocals  where  vocals.Type = \"领唱\" "
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  band.Firstname = \"俊杰\"  and  songs.Title = \"江南\" "
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  band.Firstname = \"俊杰\"  and  songs.Title = \"江南\" "
  },
  {
    "NatSQL": "select  distinct songs.Title from vocals  where  vocals.Type != \"领唱\" "
  },
  {
    "NatSQL": "select  distinct songs.Title from vocals  where  vocals.Type != \"领唱\" "
  },
  {
    "NatSQL": "select  distinct vocals.Type from vocals "
  },
  {
    "NatSQL": "select  distinct vocals.Type from vocals "
  },
  {
    "NatSQL": "select albums.* from albums  where  albums.Year = 2010 "
  },
  {
    "NatSQL": "select albums.* from albums  where  albums.Year = 2010 "
  },
  {
    "NatSQL": "select band.Firstname , band.Lastname from performance  where  @.@ join performance.*  and  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select band.Firstname , band.Lastname from performance  where  @.@ join performance.*  and  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select band.Lastname from performance  where  @.@ join performance.*  group by band.Lastname  order by count ( songs.* )  desc limit 1"
  },
  {
    "NatSQL": "select band.Lastname from performance  where  @.@ join performance.*  group by band.Lastname  order by count ( songs.* )  desc limit 1"
  },
  {
    "NatSQL": "select instruments.Instrument from performance  where  @.@ join performance.*  and  band.Lastname = \"刘\"  and  songs.Title = \"红日\" "
  },
  {
    "NatSQL": "select instruments.Instrument from performance  where  @.@ join performance.*  and  band.Lastname = \"刘\"  and  songs.Title = \"红日\" "
  },
  {
    "NatSQL": "select count (  distinct instruments.Instrument )  from instruments  where  songs.Title = \"红日\" "
  },
  {
    "NatSQL": "select count (  distinct instruments.Instrument )  from instruments  where  songs.Title = \"红日\" "
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  songs.Title = \"红日\" "
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  songs.Title = \"红日\" "
  },
  {
    "NatSQL": "select count ( vocals.* )  from vocals  where  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select count ( vocals.* )  from vocals  where  songs.Title = \"冰雨\" "
  },
  {
    "NatSQL": "select count (  distinct songs.Title )  from vocals  where  vocals.Type = \"分享\" "
  },
  {
    "NatSQL": "select count (  distinct songs.Title )  from vocals  where  vocals.Type = \"分享\" "
  },
  {
    "NatSQL": "select  distinct songs.Title from songs  where  vocals.Type != \"后台\" "
  },
  {
    "NatSQL": "select  distinct songs.Title from songs  where  vocals.Type != \"后台\" "
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  band.Firstname = \"俊杰\"  group by vocals.Type  order by count ( vocals.* )  desc limit 1"
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  band.Firstname = \"俊杰\"  group by vocals.Type  order by count ( vocals.* )  desc limit 1"
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  band.Lastname = \"刘\"  and  songs.Title = \"说好的幸福呢\" "
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  band.Lastname = \"刘\"  and  songs.Title = \"说好的幸福呢\" "
  },
  {
    "NatSQL": "select band.Firstname from performance  where  @.@ join performance.*  group by band.Firstname  order by count ( songs.* )  desc limit 1"
  },
  {
    "NatSQL": "select band.Firstname from performance  where  @.@ join performance.*  group by band.Firstname  order by count ( songs.* )  desc limit 1"
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  band.Firstname = \"贯中\"  group by vocals.Type  order by count ( vocals.* )  desc limit 1"
  },
  {
    "NatSQL": "select vocals.Type from vocals  where  band.Firstname = \"贯中\"  group by vocals.Type  order by count ( vocals.* )  desc limit 1"
  },
  {
    "NatSQL": "select band.Firstname , band.Lastname from performance  where  songs.Title = \"说好的幸福呢\"  and  performance.StagePosition = \"后台\" "
  },
  {
    "NatSQL": "select band.Firstname , band.Lastname from performance  where  songs.Title = \"说好的幸福呢\"  and  performance.StagePosition = \"后台\" "
  },
  {
    "NatSQL": "select  distinct songs.Title from songs  where  vocals.Type != \"后台\" "
  },
  {
    "NatSQL": "select  distinct songs.Title from songs  where  vocals.Type != \"后台\" "
  },
  {
    "NatSQL": "select songs.Title from albums  where  albums.Title = \"十一月的肖邦\" "
  },
  {
    "NatSQL": "select songs.Title from albums  where  albums.Title = \"十一月的肖邦\" "
  },
  {
    "NatSQL": "select songs.Title from albums  where  albums.Label = \"环球音乐公司\" "
  },
  {
    "NatSQL": "select songs.Title from albums  where  albums.Label = \"环球音乐公司\" "
  },
  {
    "NatSQL": "select count (  distinct songs.Title )  from albums  where  albums.Type = \"我们的歌\" "
  },
  {
    "NatSQL": "select count (  distinct songs.Title )  from albums  where  albums.Type = \"我们的歌\" "
  },
  {
    "NatSQL": "select manufacturers.Founder from manufacturers  where  manufacturers.Name = \"索尼\" "
  },
  {
    "NatSQL": "select manufacturers.Founder from manufacturers  where  manufacturers.Name = \"索尼\" "
  },
  {
    "NatSQL": "select manufacturers.Headquarter from manufacturers  where  manufacturers.Founder = \"强东\" "
  },
  {
    "NatSQL": "select manufacturers.Headquarter from manufacturers  where  manufacturers.Founder = \"强东\" "
  },
  {
    "NatSQL": "select manufacturers.Name , manufacturers.Headquarter from manufacturers  order by manufacturers.Revenue desc"
  },
  {
    "NatSQL": "select manufacturers.Name , manufacturers.Headquarter from manufacturers  order by manufacturers.Revenue desc"
  },
  {
    "NatSQL": "select avg ( manufacturers.Revenue )  , max ( manufacturers.Revenue )  , sum ( manufacturers.Revenue )  from manufacturers "
  },
  {
    "NatSQL": "select avg ( manufacturers.Revenue )  , max ( manufacturers.Revenue )  , sum ( manufacturers.Revenue )  from manufacturers "
  },
  {
    "NatSQL": "select count ( manufacturers.* )  from manufacturers  where  manufacturers.Founder = \"林安\" "
  },
  {
    "NatSQL": "select count ( manufacturers.* )  from manufacturers  where  manufacturers.Founder = \"林安\" "
  },
  {
    "NatSQL": "select sum ( manufacturers.Revenue )  from manufacturers  where  manufacturers.Headquarter = \"郑州\" "
  },
  {
    "NatSQL": "select sum ( manufacturers.Revenue )  from manufacturers  where  manufacturers.Headquarter = \"郑州\" "
  },
  {
    "NatSQL": "select  distinct manufacturers.Headquarter from manufacturers "
  },
  {
    "NatSQL": "select  distinct manufacturers.Headquarter from manufacturers "
  },
  {
    "NatSQL": "select count ( manufacturers.* )  from manufacturers  where  manufacturers.Headquarter = \"日本\"  or  manufacturers.Headquarter = \"北京\" "
  },
  {
    "NatSQL": "select count ( manufacturers.* )  from manufacturers  where  manufacturers.Headquarter = \"日本\"  or  manufacturers.Headquarter = \"北京\" "
  },
  {
    "NatSQL": "select manufacturers.Founder from manufacturers  where  manufacturers.Name like \"少\" "
  },
  {
    "NatSQL": "select manufacturers.Founder from manufacturers  where  manufacturers.Name like \"少\" "
  },
  {
    "NatSQL": "select manufacturers.Name from manufacturers  where  manufacturers.Revenue between 100 and 150 "
  },
  {
    "NatSQL": "select manufacturers.Name from manufacturers  where  manufacturers.Revenue between 100 and 150 "
  },
  {
    "NatSQL": "select sum ( manufacturers.Revenue )  from manufacturers  where  manufacturers.Headquarter = \"日本\"  or  manufacturers.Headquarter = \"台湾\" "
  },
  {
    "NatSQL": "select sum ( manufacturers.Revenue )  from manufacturers  where  manufacturers.Headquarter = \"日本\"  or  manufacturers.Headquarter = \"台湾\" "
  },
  {
    "NatSQL": "select products.Name from products  where  manufacturers.Name = \"创造\"  and  manufacturers.Name = \"索尼\" "
  },
  {
    "NatSQL": "select products.Name from products  where  manufacturers.Name = \"创造\"  and  manufacturers.Name = \"索尼\" "
  },
  {
    "NatSQL": "select manufacturers.Name , manufacturers.Headquarter , manufacturers.Founder from manufacturers  order by manufacturers.Revenue desc limit 1"
  },
  {
    "NatSQL": "select manufacturers.Name , manufacturers.Headquarter , manufacturers.Founder from manufacturers  order by manufacturers.Revenue desc limit 1"
  },
  {
    "NatSQL": "select manufacturers.Name , manufacturers.Headquarter , manufacturers.Revenue from manufacturers  order by manufacturers.Revenue desc"
  },
  {
    "NatSQL": "select manufacturers.Name , manufacturers.Headquarter , manufacturers.Revenue from manufacturers  order by manufacturers.Revenue desc"
  },
  {
    "NatSQL": "select manufacturers.Name from manufacturers  where  @.@ > avg ( manufacturers.Revenue )  "
  },
  {
    "NatSQL": "select manufacturers.Name from manufacturers  where  @.@ > avg ( manufacturers.Revenue )  "
  },
  {
    "NatSQL": "select manufacturers.Name from manufacturers  where  @.@ < min ( manufacturers.Revenue )   and  manufacturers.Headquarter = \"郑州\" "
  },
  {
    "NatSQL": "select manufacturers.Name from manufacturers  where  @.@ < min ( manufacturers.Revenue )   and  manufacturers.Headquarter = \"郑州\" "
  },
  {
    "NatSQL": "select sum ( manufacturers.Revenue )  from manufacturers  where  @.@ > min ( manufacturers.Revenue )   and  manufacturers.Headquarter = \"郑州\" "
  },
  {
    "NatSQL": "select sum ( manufacturers.Revenue )  from manufacturers  where  @.@ > min ( manufacturers.Revenue )   and  manufacturers.Headquarter = \"郑州\" "
  },
  {
    "NatSQL": "select sum ( manufacturers.Revenue )  , manufacturers.Founder from manufacturers  group by manufacturers.Founder "
  },
  {
    "NatSQL": "select sum ( manufacturers.Revenue )  , manufacturers.Founder from manufacturers  group by manufacturers.Founder "
  },
  {
    "NatSQL": "select manufacturers.Name , max ( manufacturers.Revenue )  , manufacturers.Headquarter from manufacturers  group by manufacturers.Headquarter "
  },
  {
    "NatSQL": "select manufacturers.Name , max ( manufacturers.Revenue )  , manufacturers.Headquarter from manufacturers  group by manufacturers.Headquarter "
  },
  {
    "NatSQL": "select sum ( manufacturers.Revenue )  , manufacturers.Name from manufacturers  group by manufacturers.Name "
  },
  {
    "NatSQL": "select sum ( manufacturers.Revenue )  , manufacturers.Name from manufacturers  group by manufacturers.Name "
  },
  {
    "NatSQL": "select avg ( products.Price )  , manufacturers.Name from products  group by manufacturers.Name "
  },
  {
    "NatSQL": "select avg ( products.Price )  , manufacturers.Name from products  group by manufacturers.Name "
  },
  {
    "NatSQL": "select count (  distinct products.Name )  , manufacturers.Headquarter from products  group by manufacturers.Headquarter "
  },
  {
    "NatSQL": "select count (  distinct products.Name )  , manufacturers.Headquarter from products  group by manufacturers.Headquarter "
  },
  {
    "NatSQL": "select count (  distinct products.Name )  from products  where  @.@ not in products.Name  and  manufacturers.Name = \"索尼\" "
  },
  {
    "NatSQL": "select count (  distinct products.Name )  from products  where  @.@ not in products.Name  and  manufacturers.Name = \"索尼\" "
  },
  {
    "NatSQL": "select manufacturers.Name from manufacturers  where  except_  @.@ is manufacturers.*  and  products.Name = \"DVD播放机\" "
  },
  {
    "NatSQL": "select manufacturers.Name from manufacturers  where  except_  @.@ is manufacturers.*  and  products.Name = \"DVD播放机\" "
  },
  {
    "NatSQL": "select count ( products.* )  , manufacturers.Name from products  group by manufacturers.Name "
  },
  {
    "NatSQL": "select count ( products.* )  , manufacturers.Name from products  group by manufacturers.Name "
  },
  {
    "NatSQL": "select products.Name from products "
  },
  {
    "NatSQL": "select products.Name from products "
  },
  {
    "NatSQL": "select products.Name , products.Price from products "
  },
  {
    "NatSQL": "select products.Name , products.Price from products "
  },
  {
    "NatSQL": "select products.Name from products  where  products.Price <= 200 "
  },
  {
    "NatSQL": "select products.Name from products  where  products.Price <= 200 "
  },
  {
    "NatSQL": "select products.* from products  where  products.Price between 60 and 120 "
  },
  {
    "NatSQL": "select products.* from products  where  products.Price between 60 and 120 "
  },
  {
    "NatSQL": "select avg ( products.Price )  from products "
  },
  {
    "NatSQL": "select avg ( products.Price )  from products "
  },
  {
    "NatSQL": "select avg ( products.Price )  from products  where  products.Manufacturer = 2 "
  },
  {
    "NatSQL": "select avg ( products.Price )  from products  where  products.Manufacturer = 2 "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  products.Price >= 180 "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  products.Price >= 180 "
  },
  {
    "NatSQL": "select products.Name , products.Price from products  where  products.Price >= 180  order by products.Price , products.Name asc"
  },
  {
    "NatSQL": "select products.Name , products.Price from products  where  products.Price >= 180  order by products.Price , products.Name asc"
  },
  {
    "NatSQL": "select products.* from products  where  @.@ join manufacturers.* "
  },
  {
    "NatSQL": "select products.* from products  where  @.@ join manufacturers.* "
  },
  {
    "NatSQL": "select avg ( products.Price )  , products.Manufacturer from products  group by products.Manufacturer "
  },
  {
    "NatSQL": "select avg ( products.Price )  , products.Manufacturer from products  group by products.Manufacturer "
  },
  {
    "NatSQL": "select avg ( products.Price )  , manufacturers.Name from products  group by manufacturers.Name "
  },
  {
    "NatSQL": "select avg ( products.Price )  , manufacturers.Name from products  group by manufacturers.Name "
  },
  {
    "NatSQL": "select avg ( products.Price )  , manufacturers.Name from products  where  avg ( products.Price )  >= 150  group by manufacturers.Name "
  },
  {
    "NatSQL": "select avg ( products.Price )  , manufacturers.Name from products  where  avg ( products.Price )  >= 150  group by manufacturers.Name "
  },
  {
    "NatSQL": "select products.Name , products.Price from products  order by products.Price asc limit 1"
  },
  {
    "NatSQL": "select products.Name , products.Price from products  order by products.Price asc limit 1"
  },
  {
    "NatSQL": "select products.Name , max ( products.Price )  , manufacturers.Name from products  group by manufacturers.Name "
  },
  {
    "NatSQL": "select products.Name , max ( products.Price )  , manufacturers.Name from products  group by manufacturers.Name "
  },
  {
    "NatSQL": "select products.Code , products.Name , min ( products.Price )  from products  group by products.Name "
  },
  {
    "NatSQL": "select products.Code , products.Name , min ( products.Price )  from products  group by products.Name "
  },
  {
    "NatSQL": "select problem_log.problem_log_id from problem_log  order by problem_log.log_entry_date desc limit 1"
  },
  {
    "NatSQL": "select problem_log.problem_log_id from problem_log  order by problem_log.log_entry_date desc limit 1"
  },
  {
    "NatSQL": "select problem_log.problem_log_id , problem_log.problem_id from problem_log  order by problem_log.log_entry_date asc limit 1"
  },
  {
    "NatSQL": "select problem_log.problem_log_id , problem_log.problem_id from problem_log  order by problem_log.log_entry_date asc limit 1"
  },
  {
    "NatSQL": "select problem_log.problem_log_id , problem_log.log_entry_date from problem_log  where  problem_log.problem_id = 10 "
  },
  {
    "NatSQL": "select problem_log.problem_log_id , problem_log.log_entry_date from problem_log  where  problem_log.problem_id = 10 "
  },
  {
    "NatSQL": "select problem_log.problem_log_id , problem_log.log_entry_description from problem_log "
  },
  {
    "NatSQL": "select problem_log.problem_log_id , problem_log.log_entry_description from problem_log "
  },
  {
    "NatSQL": "select  distinct staff.staff_first_name , staff.staff_last_name from staff  where  problem_log.problem_id = 1 "
  },
  {
    "NatSQL": "select  distinct staff.staff_first_name , staff.staff_last_name from staff  where  problem_log.problem_id = 1 "
  },
  {
    "NatSQL": "select  distinct problem_log.problem_id , problem_log.problem_log_id from staff  where  staff.staff_first_name = \"马\"  and  staff.staff_last_name = \"军军\" "
  },
  {
    "NatSQL": "select  distinct problem_log.problem_id , problem_log.problem_log_id from staff  where  staff.staff_first_name = \"马\"  and  staff.staff_last_name = \"军军\" "
  },
  {
    "NatSQL": "select count ( problems.* )  from product  where  product.product_name = \"显示器\" "
  },
  {
    "NatSQL": "select count ( problems.* )  from product  where  product.product_name = \"显示器\" "
  },
  {
    "NatSQL": "select count ( problems.* )  , product.product_name from product  group by product.product_name  order by count ( problems.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( problems.* )  , product.product_name from product  group by product.product_name  order by count ( problems.* )  desc limit 1"
  },
  {
    "NatSQL": "select problems.problem_description from problems  where  staff.staff_first_name = \"梁\" "
  },
  {
    "NatSQL": "select problems.problem_description from problems  where  staff.staff_first_name = \"梁\" "
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  staff.staff_last_name = \"兰兰\" "
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  staff.staff_last_name = \"兰兰\" "
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  problems.date_problem_reported > \"1978-06-26\" "
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  problems.date_problem_reported > \"1978-06-26\" "
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  problems.date_problem_reported < \"1978-06-26\" "
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  problems.date_problem_reported < \"1978-06-26\" "
  },
  {
    "NatSQL": "select count ( problems.* )  , product.product_id from problems  group by product.product_id "
  },
  {
    "NatSQL": "select count ( problems.* )  , product.product_id from problems  group by product.product_id "
  },
  {
    "NatSQL": "select count ( problems.* )  , product.product_id from problems  where  problems.date_problem_reported > \"1986-11-13\"  group by product.product_id "
  },
  {
    "NatSQL": "select count ( problems.* )  , product.product_id from problems  where  problems.date_problem_reported > \"1986-11-13\"  group by product.product_id "
  },
  {
    "NatSQL": "select  distinct product.product_name from product  order by product.product_name asc"
  },
  {
    "NatSQL": "select  distinct product.product_name from product  order by product.product_name asc"
  },
  {
    "NatSQL": "select  distinct product.product_name from product  order by product.product_id asc"
  },
  {
    "NatSQL": "select  distinct product.product_name from product  order by product.product_id asc"
  },
  {
    "NatSQL": "select problems.product_id from problems  where  staff.staff_first_name = \"李\"  and  staff.staff_last_name = \"航\"  or  staff.staff_first_name = \"白\"  and  staff.staff_last_name = \"博文\" "
  },
  {
    "NatSQL": "select problems.product_id from problems  where  staff.staff_first_name = \"李\"  and  staff.staff_last_name = \"航\"  or  staff.staff_first_name = \"白\"  and  staff.staff_last_name = \"博文\" "
  },
  {
    "NatSQL": "select problems.product_id from problems  where  staff.staff_first_name = \"梁\"  and  staff.staff_last_name = \"天一\"  and  staff.staff_first_name = \"李红\"  and  staff.staff_last_name = \"军\" "
  },
  {
    "NatSQL": "select problems.product_id from problems  where  staff.staff_first_name = \"梁\"  and  staff.staff_last_name = \"天一\"  and  staff.staff_first_name = \"李红\"  and  staff.staff_last_name = \"军\" "
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  @.@ join staff.*  and  @.@ < min ( problems.date_problem_reported )   and  staff.staff_first_name = \"严\"  and  staff.staff_last_name = \"冰\" "
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  @.@ join staff.*  and  @.@ < min ( problems.date_problem_reported )   and  staff.staff_first_name = \"严\"  and  staff.staff_last_name = \"冰\" "
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  @.@ join staff.*  and  @.@ > max ( problems.date_problem_reported )   and  staff.staff_first_name = \"马\"  and  staff.staff_last_name = \"军军\" "
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  @.@ join staff.*  and  @.@ > max ( problems.date_problem_reported )   and  staff.staff_first_name = \"马\"  and  staff.staff_last_name = \"军军\" "
  },
  {
    "NatSQL": "select product.product_name from problems  group by product.product_name  order by count ( problems.* )  desc limit 3"
  },
  {
    "NatSQL": "select product.product_name from problems  group by product.product_name  order by count ( problems.* )  desc limit 3"
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  product.product_name = \"显示器\"  and  problems.date_problem_reported > \"1995\" "
  },
  {
    "NatSQL": "select problems.problem_id from problems  where  product.product_name = \"显示器\"  and  problems.date_problem_reported > \"1995\" "
  },
  {
    "NatSQL": "select staff.staff_first_name , staff.staff_last_name from problems  where  product.product_name = \"内存\"  and  product.product_name != \"硬盘\" "
  },
  {
    "NatSQL": "select staff.staff_first_name , staff.staff_last_name from problems  where  product.product_name = \"内存\"  and  product.product_name != \"硬盘\" "
  },
  {
    "NatSQL": "select product.product_name from problems  where  staff.staff_first_name = \"刘\"  and  staff.staff_last_name = \"兰兰\"  and  staff.staff_first_name = \"王\"  and  staff.staff_last_name = \"平之\" "
  },
  {
    "NatSQL": "select product.product_name from problems  where  staff.staff_first_name = \"刘\"  and  staff.staff_last_name = \"兰兰\"  and  staff.staff_first_name = \"王\"  and  staff.staff_last_name = \"平之\" "
  },
  {
    "NatSQL": "select count ( branch.* )  from branch  where  @.@ > avg ( branch.membership_amount )  "
  },
  {
    "NatSQL": "select count ( branch.* )  from branch  where  @.@ > avg ( branch.membership_amount )  "
  },
  {
    "NatSQL": "select branch.Name , branch.Address_road , branch.City from branch  order by branch.Open_year asc"
  },
  {
    "NatSQL": "select branch.Name , branch.Address_road , branch.City from branch  order by branch.Open_year asc"
  },
  {
    "NatSQL": "select branch.Name from branch  order by branch.membership_amount desc limit 3"
  },
  {
    "NatSQL": "select branch.Name from branch  order by branch.membership_amount desc limit 3"
  },
  {
    "NatSQL": "select  distinct branch.City from branch  where  branch.membership_amount >= 100 "
  },
  {
    "NatSQL": "select  distinct branch.City from branch  where  branch.membership_amount >= 100 "
  },
  {
    "NatSQL": "select branch.Open_year from branch  where  count ( branch.* )  >= 2  group by branch.Open_year "
  },
  {
    "NatSQL": "select branch.Open_year from branch  where  count ( branch.* )  >= 2  group by branch.Open_year "
  },
  {
    "NatSQL": "select min ( branch.membership_amount )  , max ( branch.membership_amount )  from branch  where  branch.Open_year = 2011  or  branch.City = \"北京\" "
  },
  {
    "NatSQL": "select min ( branch.membership_amount )  , max ( branch.membership_amount )  from branch  where  branch.Open_year = 2011  or  branch.City = \"北京\" "
  },
  {
    "NatSQL": "select branch.City , count ( branch.* )  from branch  where  branch.Open_year < 2010  group by branch.City "
  },
  {
    "NatSQL": "select branch.City , count ( branch.* )  from branch  where  branch.Open_year < 2010  group by branch.City "
  },
  {
    "NatSQL": "select count (  distinct member.Level )  from member "
  },
  {
    "NatSQL": "select count (  distinct member.Level )  from member "
  },
  {
    "NatSQL": "select member.Card_Number , member.Name , member.Hometown from member  order by member.Level desc"
  },
  {
    "NatSQL": "select member.Card_Number , member.Name , member.Hometown from member  order by member.Level desc"
  },
  {
    "NatSQL": "select member.Level from member  group by member.Level  order by count ( member.* )  desc limit 1"
  },
  {
    "NatSQL": "select member.Level from member  group by member.Level  order by count ( member.* )  desc limit 1"
  },
  {
    "NatSQL": "select member.Name , branch.Name from membership_register_branch  order by membership_register_branch.Register_Year asc"
  },
  {
    "NatSQL": "select member.Name , branch.Name from membership_register_branch  order by membership_register_branch.Register_Year asc"
  },
  {
    "NatSQL": "select branch.Name , count ( membership_register_branch.* )  from membership_register_branch  where  membership_register_branch.Register_Year > 2015  group by branch.Branch_ID "
  },
  {
    "NatSQL": "select branch.Name , membership_register_branch.Branch_ID from membership_register_branch  where  membership_register_branch.Register_Year > 2015  group by branch.Branch_ID "
  },
  {
    "NatSQL": "select member.Name from member  where  @.@ not in membership_register_branch.* "
  },
  {
    "NatSQL": "select member.Name from member  where  @.@ not in membership_register_branch.* "
  },
  {
    "NatSQL": "select branch.Name , branch.City from branch  where  @.@ not in membership_register_branch.* "
  },
  {
    "NatSQL": "select branch.Name , branch.City from branch  where  @.@ not in membership_register_branch.* "
  },
  {
    "NatSQL": "select branch.Name , branch.Open_year from membership_register_branch  where  membership_register_branch.Register_Year = 2016  group by branch.Branch_ID  order by count ( membership_register_branch.* )  desc limit 1"
  },
  {
    "NatSQL": "select branch.Name , branch.Open_year from membership_register_branch  where  membership_register_branch.Register_Year = 2016  group by branch.Branch_ID  order by count ( membership_register_branch.* )  desc limit 1"
  },
  {
    "NatSQL": "select member.Name , member.Hometown from membership_register_branch  where  membership_register_branch.Register_Year = 2016 "
  },
  {
    "NatSQL": "select member.Name , member.Hometown from membership_register_branch  where  membership_register_branch.Register_Year = 2016 "
  },
  {
    "NatSQL": "select branch.City from branch  where  branch.Open_year = 2001  and  branch.membership_amount > 100 "
  },
  {
    "NatSQL": "select branch.City from branch  where  branch.Open_year = 2001  and  branch.membership_amount > 100 "
  },
  {
    "NatSQL": "select branch.City from branch  where  except_  @.@ is branch.*  and  branch.membership_amount > 100 "
  },
  {
    "NatSQL": "select branch.City from branch  where  except_  @.@ is branch.*  and  branch.membership_amount > 100 "
  },
  {
    "NatSQL": "select sum ( purchase.Total_pounds )  from purchase  where  branch.City = \"北京\"  and  purchase.Year = 2018 "
  },
  {
    "NatSQL": "select sum ( purchase.Total_pounds )  from purchase  where  branch.City = \"北京\"  and  purchase.Year = 2018 "
  },
  {
    "NatSQL": "select count ( purchase.* )  from purchase  where  member.Level = 6 "
  },
  {
    "NatSQL": "select count ( purchase.* )  from purchase  where  member.Level = 6 "
  },
  {
    "NatSQL": "select branch.Name from membership_register_branch  where  member.Hometown = \"苏州，江苏\"  and  member.Hometown = \"泉州，福建\" "
  },
  {
    "NatSQL": "select branch.Name from membership_register_branch  where  member.Hometown = \"苏州，江苏\"  and  member.Hometown = \"泉州，福建\" "
  },
  {
    "NatSQL": "select member.Card_Number from member  where  member.Hometown like \"西安\" "
  },
  {
    "NatSQL": "select member.Card_Number from member  where  member.Hometown like \"西安\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student "
  },
  {
    "NatSQL": "select count ( student.* )  from student "
  },
  {
    "NatSQL": "select count ( voting_record.* )  from voting_record "
  },
  {
    "NatSQL": "select count ( voting_record.* )  from voting_record "
  },
  {
    "NatSQL": "select count (  distinct voting_record.President_Vote )  from voting_record "
  },
  {
    "NatSQL": "select count (  distinct voting_record.President_Vote )  from voting_record "
  },
  {
    "NatSQL": "select max ( student.Age )  from student "
  },
  {
    "NatSQL": "select max ( student.Age )  from student "
  },
  {
    "NatSQL": "select student.LName from student  where  student.Major = 50 "
  },
  {
    "NatSQL": "select student.LName from student  where  student.Major = 50 "
  },
  {
    "NatSQL": "select student.Fname from student  where  student.Age > 22 "
  },
  {
    "NatSQL": "select student.Fname from student  where  student.Age > 22 "
  },
  {
    "NatSQL": "select student.Major from student  where  student.Sex = \"男\" "
  },
  {
    "NatSQL": "select student.Major from student  where  student.Sex = \"男\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from student  where  student.Sex = \"F\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from student  where  student.Sex = \"F\" "
  },
  {
    "NatSQL": "select max ( student.Age )  , min ( student.Age )  from student  where  student.Major = 600 "
  },
  {
    "NatSQL": "select max ( student.Age )  , min ( student.Age )  from student  where  student.Major = 600 "
  },
  {
    "NatSQL": "select student.Advisor from student  where  student.city_code = \"武汉\" "
  },
  {
    "NatSQL": "select student.Advisor from student  where  student.city_code = \"武汉\" "
  },
  {
    "NatSQL": "select  distinct voting_record.Secretary_Vote from voting_record  where  voting_record.Election_Cycle = \"秋季\" "
  },
  {
    "NatSQL": "select  distinct voting_record.Secretary_Vote from voting_record  where  voting_record.Election_Cycle = \"秋季\" "
  },
  {
    "NatSQL": "select  distinct voting_record.President_Vote from voting_record  where  voting_record.Registration_Date = \"08/30/2015\" "
  },
  {
    "NatSQL": "select  distinct voting_record.President_Vote from voting_record  where  voting_record.Registration_Date = \"08/30/2015\" "
  },
  {
    "NatSQL": "select  distinct voting_record.Registration_Date , voting_record.Election_Cycle from voting_record "
  },
  {
    "NatSQL": "select  distinct voting_record.Registration_Date , voting_record.Election_Cycle from voting_record "
  },
  {
    "NatSQL": "select  distinct voting_record.President_Vote , voting_record.Vice_President_Vote from voting_record "
  },
  {
    "NatSQL": "select  distinct voting_record.President_Vote , voting_record.Vice_President_Vote from voting_record "
  },
  {
    "NatSQL": "select  distinct student.LName from student  where  @.@ join voting_record.* "
  },
  {
    "NatSQL": "select  distinct student.LName from student  where  @.@ join voting_record.* "
  },
  {
    "NatSQL": "select  distinct student.Fname from student  where  @.@ join voting_record.* "
  },
  {
    "NatSQL": "select  distinct student.Fname from student  where  @.@ join voting_record.* "
  },
  {
    "NatSQL": "select  distinct student.Age from student  where  voting_record.Election_Cycle = \"秋季\" "
  },
  {
    "NatSQL": "select  distinct student.Age from student  where  voting_record.Election_Cycle = \"秋季\" "
  },
  {
    "NatSQL": "select  distinct student.Advisor from student  where  voting_record.Election_Cycle = \"春天\" "
  },
  {
    "NatSQL": "select  distinct student.Advisor from student  where  voting_record.Election_Cycle = \"春天\" "
  },
  {
    "NatSQL": "select  distinct student.Major from student  where  @.@ join voting_record.* "
  },
  {
    "NatSQL": "select  distinct student.Major from student  where  @.@ join voting_record.* "
  },
  {
    "NatSQL": "select  distinct student.Fname , student.LName from student  where  @.@ join voting_record.*  and  student.Sex = \"F\" "
  },
  {
    "NatSQL": "select  distinct student.Fname , student.LName from student  where  @.@ join voting_record.*  and  student.Sex = \"F\" "
  },
  {
    "NatSQL": "select  distinct student.Fname , student.LName from student  where  @.@ join voting_record.*  and  student.Age = 18 "
  },
  {
    "NatSQL": "select  distinct student.Fname , student.LName from student  where  @.@ join voting_record.*  and  student.Age = 18 "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Sex = \"男\"  and  voting_record.Election_Cycle = \"秋季\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Sex = \"男\"  and  voting_record.Election_Cycle = \"秋季\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.city_code = \"上海\"  and  voting_record.Election_Cycle = \"春天\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.city_code = \"上海\"  and  voting_record.Election_Cycle = \"春天\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from student  where  student.city_code = \"上海\"  and  voting_record.Election_Cycle = \"春天\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from student  where  student.city_code = \"上海\"  and  voting_record.Election_Cycle = \"春天\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from student  where  student.Sex = \"F\"  and  voting_record.Election_Cycle = \"春天\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from student  where  student.Sex = \"F\"  and  voting_record.Election_Cycle = \"春天\" "
  },
  {
    "NatSQL": "select  distinct student.Fname from student  where  @.@ join voting_record.*  and  student.city_code != \"沪\" "
  },
  {
    "NatSQL": "select  distinct student.Fname from student  where  @.@ join voting_record.*  and  student.city_code != \"沪\" "
  },
  {
    "NatSQL": "select  distinct student.LName from student  where  @.@ join voting_record.*  and  student.Advisor != \"2192\" "
  },
  {
    "NatSQL": "select  distinct student.LName from student  where  @.@ join voting_record.*  and  student.Advisor != \"2192\" "
  },
  {
    "NatSQL": "select  distinct student.LName from student  where  @.@ join voting_record.*  and  student.Advisor = \"8741\" "
  },
  {
    "NatSQL": "select  distinct student.LName from student  where  @.@ join voting_record.*  and  student.Advisor = \"8741\" "
  },
  {
    "NatSQL": "select student.Advisor , count ( student.* )  from student  group by student.Advisor "
  },
  {
    "NatSQL": "select student.Advisor , count ( student.* )  from student  group by student.Advisor "
  },
  {
    "NatSQL": "select student.Advisor from student  where  count ( student.* )  > 2  group by student.Advisor "
  },
  {
    "NatSQL": "select student.Advisor from student  where  count ( student.* )  > 2  group by student.Advisor "
  },
  {
    "NatSQL": "select student.Major from student  where  count ( student.* )  < 3  group by student.Major "
  },
  {
    "NatSQL": "select student.Major from student  where  count ( student.* )  < 3  group by student.Major "
  },
  {
    "NatSQL": "select voting_record.Election_Cycle , count ( voting_record.* )  from voting_record  group by voting_record.Election_Cycle "
  },
  {
    "NatSQL": "select voting_record.Election_Cycle , count ( voting_record.* )  from voting_record  group by voting_record.Election_Cycle "
  },
  {
    "NatSQL": "select student.Major from student  group by student.Major  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Major from student  group by student.Major  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Major from student  where  student.Sex = \"F\"  group by student.Major  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Major from student  where  student.Sex = \"F\"  group by student.Major  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.city_code from student  group by student.city_code  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.city_code from student  group by student.city_code  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Advisor from student  where  count ( student.* )  > 2  group by student.Advisor "
  },
  {
    "NatSQL": "select student.Advisor from student  where  count ( student.* )  > 2  group by student.Advisor "
  },
  {
    "NatSQL": "select count ( products.* )  from products "
  },
  {
    "NatSQL": "select count ( products.* )  from products "
  },
  {
    "NatSQL": "select count ( ref_colors.* )  from ref_colors "
  },
  {
    "NatSQL": "select count ( ref_colors.* )  from ref_colors "
  },
  {
    "NatSQL": "select count ( characteristics.* )  from characteristics "
  },
  {
    "NatSQL": "select count ( characteristics.* )  from characteristics "
  },
  {
    "NatSQL": "select products.product_name , products.typical_buying_price from products "
  },
  {
    "NatSQL": "select products.product_name , products.typical_buying_price from products "
  },
  {
    "NatSQL": "select ref_colors.color_description from ref_colors "
  },
  {
    "NatSQL": "select ref_colors.color_description from ref_colors "
  },
  {
    "NatSQL": "select  distinct characteristics.characteristic_name from characteristics "
  },
  {
    "NatSQL": "select  distinct characteristics.characteristic_name from characteristics "
  },
  {
    "NatSQL": "select products.product_name from products  where  products.product_category_code = \"香料\" "
  },
  {
    "NatSQL": "select products.product_name from products  where  products.product_category_code = \"香料\" "
  },
  {
    "NatSQL": "select products.product_name , ref_colors.color_description , products.product_description from products  where  products.product_category_code = \"香草\" "
  },
  {
    "NatSQL": "select products.product_name , ref_colors.color_description , products.product_description from products  where  products.product_category_code = \"香草\" "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  products.product_category_code = \"种子\" "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  products.product_category_code = \"种子\" "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  products.product_category_code = \"香料\"  and  products.typical_buying_price > 1000 "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  products.product_category_code = \"香料\"  and  products.typical_buying_price > 1000 "
  },
  {
    "NatSQL": "select products.product_category_code , products.typical_buying_price from products  where  products.product_name = \"茴香\" "
  },
  {
    "NatSQL": "select products.product_category_code , products.typical_buying_price from products  where  products.product_name = \"茴香\" "
  },
  {
    "NatSQL": "select products.product_category_code from products  where  products.product_name = \"亚麻\" "
  },
  {
    "NatSQL": "select products.product_category_code from products  where  products.product_name = \"亚麻\" "
  },
  {
    "NatSQL": "select products.product_name from products  where  ref_colors.color_description = \"黄色\" "
  },
  {
    "NatSQL": "select products.product_name from products  where  ref_colors.color_description = \"黄色\" "
  },
  {
    "NatSQL": "select ref_product_categories.product_category_description from ref_product_categories  where  products.product_description like \"强\" "
  },
  {
    "NatSQL": "select ref_product_categories.product_category_description from ref_product_categories  where  products.product_description like \"强\" "
  },
  {
    "NatSQL": "select ref_colors.color_description from products  where  products.product_name = \"君子兰\" "
  },
  {
    "NatSQL": "select ref_colors.color_description from products  where  products.product_name = \"君子兰\" "
  },
  {
    "NatSQL": "select products.color_code , ref_colors.color_description from products  where  products.product_name = \"鼠标\" "
  },
  {
    "NatSQL": "select products.color_code , ref_colors.color_description from products  where  products.product_name = \"鼠标\" "
  },
  {
    "NatSQL": "select products.product_id , ref_colors.color_description from products  where  count ( product_characteristics.* )  >= 2  group by products.product_id "
  },
  {
    "NatSQL": "select products.product_id , ref_colors.color_description from products  where  count ( product_characteristics.* )  >= 2  group by products.product_id "
  },
  {
    "NatSQL": "select products.product_name from products  where  ref_colors.color_description = \"白色\" "
  },
  {
    "NatSQL": "select products.product_name from products  where  ref_colors.color_description = \"白色\" "
  },
  {
    "NatSQL": "select products.product_name , products.typical_buying_price , products.typical_selling_price from products  where  ref_colors.color_description = \"黄色\" "
  },
  {
    "NatSQL": "select products.product_name , products.typical_buying_price , products.typical_selling_price from products  where  ref_colors.color_description = \"黄色\" "
  },
  {
    "NatSQL": "select count ( product_characteristics.* )  from products  where  products.product_name = \"芝麻\" "
  },
  {
    "NatSQL": "select count ( product_characteristics.* )  from products  where  products.product_name = \"芝麻\" "
  },
  {
    "NatSQL": "select count (  distinct characteristics.characteristic_name )  from products  where  products.product_name = \"芝麻\" "
  },
  {
    "NatSQL": "select count (  distinct characteristics.characteristic_name )  from products  where  products.product_name = \"芝麻\" "
  },
  {
    "NatSQL": "select characteristics.characteristic_name from products  where  products.product_name = \"芝麻\" "
  },
  {
    "NatSQL": "select characteristics.characteristic_name from products  where  products.product_name = \"芝麻\" "
  },
  {
    "NatSQL": "select characteristics.characteristic_name , characteristics.characteristic_data_type from products  where  products.product_name = \"茴香\" "
  },
  {
    "NatSQL": "select characteristics.characteristic_name , characteristics.characteristic_data_type from products  where  products.product_name = \"茴香\" "
  },
  {
    "NatSQL": "select characteristics.characteristic_name from products  where  products.product_name = \"芝麻\"  and  characteristics.characteristic_type_code = \"等级\" "
  },
  {
    "NatSQL": "select characteristics.characteristic_name from products  where  products.product_name = \"芝麻\"  and  characteristics.characteristic_type_code = \"等级\" "
  },
  {
    "NatSQL": "select count ( characteristics.* )  from products  where  products.product_name = \"月桂树\" "
  },
  {
    "NatSQL": "select count ( characteristics.* )  from products  where  products.product_name = \"月桂树\" "
  },
  {
    "NatSQL": "select count ( characteristics.* )  from products  where  products.product_name = \"亚麻\" "
  },
  {
    "NatSQL": "select count ( characteristics.* )  from products  where  products.product_name = \"亚麻\" "
  },
  {
    "NatSQL": "select products.product_name from products  where  ref_colors.color_description = \"红色\"  and  characteristics.characteristic_name = \"快速\" "
  },
  {
    "NatSQL": "select products.product_name from products  where  ref_colors.color_description = \"红色\"  and  characteristics.characteristic_name = \"快速\" "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  characteristics.characteristic_name = \"热\" "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  characteristics.characteristic_name = \"热\" "
  },
  {
    "NatSQL": "select  distinct products.product_name from products  where  characteristics.characteristic_name = \"温暖\" "
  },
  {
    "NatSQL": "select  distinct products.product_name from products  where  characteristics.characteristic_name = \"温暖\" "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  ref_colors.color_description = \"红色\"  and  characteristics.characteristic_name = \"缓慢\" "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  ref_colors.color_description = \"红色\"  and  characteristics.characteristic_name = \"缓慢\" "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  ref_colors.color_description = \"白色\"  or  characteristics.characteristic_name = \"热\" "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  ref_colors.color_description = \"白色\"  or  characteristics.characteristic_name = \"热\" "
  },
  {
    "NatSQL": "select ref_product_categories.unit_of_measure from ref_product_categories  where  ref_product_categories.product_category_code = \"香草\" "
  },
  {
    "NatSQL": "select ref_product_categories.unit_of_measure from ref_product_categories  where  ref_product_categories.product_category_code = \"香草\" "
  },
  {
    "NatSQL": "select ref_product_categories.product_category_description from ref_product_categories  where  ref_product_categories.product_category_code = \"香料\" "
  },
  {
    "NatSQL": "select ref_product_categories.product_category_description from ref_product_categories  where  ref_product_categories.product_category_code = \"香料\" "
  },
  {
    "NatSQL": "select ref_product_categories.product_category_description , ref_product_categories.unit_of_measure from ref_product_categories  where  ref_product_categories.product_category_code = \"香草\" "
  },
  {
    "NatSQL": "select ref_product_categories.product_category_description , ref_product_categories.unit_of_measure from ref_product_categories  where  ref_product_categories.product_category_code = \"香草\" "
  },
  {
    "NatSQL": "select ref_product_categories.unit_of_measure from products  where  products.product_name = \"茴香\" "
  },
  {
    "NatSQL": "select ref_product_categories.unit_of_measure from products  where  products.product_name = \"茴香\" "
  },
  {
    "NatSQL": "select ref_product_categories.unit_of_measure , ref_product_categories.product_category_code from products  where  products.product_name = \"鼠标\" "
  },
  {
    "NatSQL": "select ref_product_categories.unit_of_measure , ref_product_categories.product_category_code from products  where  products.product_name = \"鼠标\" "
  },
  {
    "NatSQL": "select products.product_name from products  where  ref_colors.color_description = \"白色\"  and  ref_product_categories.unit_of_measure != \"一把\" "
  },
  {
    "NatSQL": "select products.product_name from products  where  ref_colors.color_description = \"白色\"  and  ref_product_categories.unit_of_measure != \"一把\" "
  },
  {
    "NatSQL": "select ref_colors.color_description from products  group by ref_colors.color_description  order by count ( products.* )  desc limit 1"
  },
  {
    "NatSQL": "select ref_colors.color_description from products  group by ref_colors.color_description  order by count ( products.* )  desc limit 1"
  },
  {
    "NatSQL": "select ref_colors.color_description from products  group by ref_colors.color_description  order by count ( products.* )  asc limit 1"
  },
  {
    "NatSQL": "select ref_colors.color_description from products  group by ref_colors.color_description  order by count ( products.* )  asc limit 1"
  },
  {
    "NatSQL": "select characteristics.characteristic_name from products  group by characteristics.characteristic_name  order by count ( products.* )  desc limit 1"
  },
  {
    "NatSQL": "select characteristics.characteristic_name from products  group by characteristics.characteristic_name  order by count ( products.* )  desc limit 1"
  },
  {
    "NatSQL": "select characteristics.characteristic_name , characteristics.other_characteristic_details , characteristics.characteristic_data_type from characteristics  where  except_  @.@ is product_characteristics.* "
  },
  {
    "NatSQL": "select characteristics.characteristic_name , characteristics.other_characteristic_details , characteristics.characteristic_data_type from characteristics  where  except_  @.@ is product_characteristics.* "
  },
  {
    "NatSQL": "select characteristics.characteristic_name from products  where  count ( products.* )  >= 2  group by characteristics.characteristic_name "
  },
  {
    "NatSQL": "select characteristics.characteristic_name from products  where  count ( products.* )  >= 2  group by characteristics.characteristic_name "
  },
  {
    "NatSQL": "select count ( ref_colors.* )  from ref_colors  where  @.@ not in products.* "
  },
  {
    "NatSQL": "select count ( ref_colors.* )  from ref_colors  where  @.@ not in products.* "
  },
  {
    "NatSQL": "select count ( event.* )  from event "
  },
  {
    "NatSQL": "select event.Name from event  order by event.Year desc"
  },
  {
    "NatSQL": "select event.Name from event  order by event.Year desc limit 1"
  },
  {
    "NatSQL": "select count ( stadium.* )  from stadium "
  },
  {
    "NatSQL": "select stadium.name from stadium  order by stadium.Capacity desc limit 1"
  },
  {
    "NatSQL": "select stadium.name from stadium  where  @.@ < avg ( stadium.Capacity )  "
  },
  {
    "NatSQL": "select stadium.Country from stadium  group by stadium.Country  order by count ( stadium.* )  desc limit 1"
  },
  {
    "NatSQL": "select stadium.Country from stadium  where  count ( stadium.* )  <= 3  group by stadium.Country "
  },
  {
    "NatSQL": "select stadium.Country from stadium  where  stadium.Capacity > 60000  and  stadium.Capacity < 50000 "
  },
  {
    "NatSQL": "select count (  distinct stadium.City )  from stadium  where  stadium.Opening_year < 2006 "
  },
  {
    "NatSQL": "select stadium.Country , count ( stadium.* )  from stadium  group by stadium.Country "
  },
  {
    "NatSQL": "select stadium.Country from stadium  where  except_  @.@ is stadium.*  and  stadium.Opening_year > 2006 "
  },
  {
    "NatSQL": "select count ( stadium.* )  from stadium  where  stadium.Country != \"俄罗斯\" "
  },
  {
    "NatSQL": "select swimmer.name from swimmer  order by swimmer.meter_100 asc"
  },
  {
    "NatSQL": "select count (  distinct swimmer.Nationality )  from swimmer "
  },
  {
    "NatSQL": "select swimmer.Nationality , count ( swimmer.* )  from swimmer  where  count ( swimmer.* )  > 1  group by swimmer.Nationality "
  },
  {
    "NatSQL": "select swimmer.meter_200 , swimmer.meter_300 from swimmer  where  swimmer.Nationality = \"澳大利亚\" "
  },
  {
    "NatSQL": "select swimmer.name from swimmer  where  record.Result = \"胜利\" "
  },
  {
    "NatSQL": "select stadium.name from stadium  group by event.Stadium_ID  order by count ( event.* )  desc limit 1"
  },
  {
    "NatSQL": "select stadium.name , stadium.Capacity from stadium  where  event.Name = \"世界杯\" "
  },
  {
    "NatSQL": "select stadium.name from stadium  where  @.@ not in event.* "
  },
  {
    "NatSQL": "select swimmer.name from swimmer  group by record.Swimmer_ID  order by count ( record.* )  desc limit 1"
  },
  {
    "NatSQL": "select swimmer.name from swimmer  where  count ( record.* )  >= 2  group by record.Swimmer_ID "
  },
  {
    "NatSQL": "select swimmer.name , swimmer.Nationality from swimmer  where  record.Result = \"胜利\"  and  count ( swimmer.* )  > 1  group by record.Swimmer_ID "
  },
  {
    "NatSQL": "select swimmer.name from swimmer  where  @.@ not in record.* "
  },
  {
    "NatSQL": "select swimmer.name from swimmer  where  record.Result = \"胜利\"  and  record.Result = \"输\" "
  },
  {
    "NatSQL": "select stadium.name from swimmer  where  swimmer.Nationality = \"澳大利亚\" "
  },
  {
    "NatSQL": "select stadium.name from record  group by event.Stadium_ID  order by count ( record.* )  desc limit 1"
  },
  {
    "NatSQL": "select swimmer.* from swimmer "
  },
  {
    "NatSQL": "select avg ( stadium.Capacity )  from stadium  where  stadium.Opening_year = 2005 "
  },
  {
    "NatSQL": "select count ( railway.* )  from railway "
  },
  {
    "NatSQL": "select railway.Builder from railway  order by railway.Builder asc"
  },
  {
    "NatSQL": "select railway.Wheels , railway.Location from railway "
  },
  {
    "NatSQL": "select max ( manager.Level )  from manager  where  manager.Country != \"澳大利亚\" "
  },
  {
    "NatSQL": "select avg ( manager.Age )  from manager "
  },
  {
    "NatSQL": "select manager.Name from manager  order by manager.Level asc"
  },
  {
    "NatSQL": "select train.Name , train.Arrival from train "
  },
  {
    "NatSQL": "select manager.Name from manager  order by manager.Age desc limit 1"
  },
  {
    "NatSQL": "select train.Name , railway.Location from railway "
  },
  {
    "NatSQL": "select railway.Builder from railway  where  train.Name = \"和谐号\" "
  },
  {
    "NatSQL": "select railway.Railway_ID , railway.Location from railway  where  count ( train.* )  > 1  group by train.Railway_ID "
  },
  {
    "NatSQL": "select railway.Railway_ID , railway.Builder from railway  group by train.Railway_ID  order by count ( train.* )  desc limit 1"
  },
  {
    "NatSQL": "select railway.Builder , count ( railway.* )  from railway  group by railway.Builder "
  },
  {
    "NatSQL": "select railway.Builder from railway  group by railway.Builder  order by count ( railway.* )  desc limit 1"
  },
  {
    "NatSQL": "select railway.Location , count ( railway.* )  from railway  group by railway.Location "
  },
  {
    "NatSQL": "select railway.Location from railway  where  count ( railway.* )  > 1  group by railway.Location "
  },
  {
    "NatSQL": "select railway.ObjectNumber from railway  where  @.@ not in train.* "
  },
  {
    "NatSQL": "select manager.Country from manager  where  manager.Age > 50  and  manager.Age < 46 "
  },
  {
    "NatSQL": "select  distinct manager.Country from manager "
  },
  {
    "NatSQL": "select manager.Working_year_starts from manager  order by manager.Level desc"
  },
  {
    "NatSQL": "select manager.Country from manager  where  manager.Age > 50  or  manager.Age < 46 "
  },
  {
    "NatSQL": "select count ( addresses.* )  from addresses  where  addresses.country = \"中国\" "
  },
  {
    "NatSQL": "select  distinct addresses.city from addresses "
  },
  {
    "NatSQL": "select addresses.state_province_county , count ( addresses.* )  from addresses  group by addresses.state_province_county "
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_phone from customers  where  @.@ not in customer_address_history.* "
  },
  {
    "NatSQL": "select customers.customer_name from customers  group by customers.customer_id  order by count ( customer_orders.* )  desc limit 1"
  },
  {
    "NatSQL": "select products.product_type_code from products  where  count ( products.* )  >= 2  group by products.product_type_code "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  customer_orders.order_status_code = \"完成\"  and  customer_orders.order_status_code = \"部分\" "
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_phone , customers.payment_method_code from customers  order by customers.customer_number desc"
  },
  {
    "NatSQL": "select products.product_name , sum ( order_items.order_quantity )  from products  group by products.product_id "
  },
  {
    "NatSQL": "select min ( products.product_price )  , max ( products.product_price )  , avg ( products.product_price )  from products "
  },
  {
    "NatSQL": "select count ( products.* )  from products  where  @.@ > avg ( products.product_price )  "
  },
  {
    "NatSQL": "select customers.customer_name , addresses.city , customer_address_history.date_from , customer_address_history.date_to from customer_address_history "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  customers.payment_method_code = \"信用卡\"  and  count ( customer_orders.* )  > 2  group by customers.customer_id "
  },
  {
    "NatSQL": "select customers.customer_name , customers.customer_phone from customers  group by customers.customer_id  order by sum ( order_items.order_quantity )  desc limit 1"
  },
  {
    "NatSQL": "select products.product_type_code , products.product_name from products  where  products.product_price > 1000  or  products.product_price < 500 "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  dorm.gender = \"F\" "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  dorm.gender = \"F\" "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  dorm.student_capacity > 300 "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  dorm.student_capacity > 300 "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Sex = \"F\"  and  student.Age < 25 "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  student.Sex = \"F\"  and  student.Age < 25 "
  },
  {
    "NatSQL": "select student.Fname from student  where  student.Age > 20 "
  },
  {
    "NatSQL": "select student.Fname from student  where  student.Age > 20 "
  },
  {
    "NatSQL": "select student.Fname from student  where  student.city_code = \"天津\"  and  student.Age between 20 and 25 "
  },
  {
    "NatSQL": "select student.Fname from student  where  student.city_code = \"天津\"  and  student.Age between 20 and 25 "
  },
  {
    "NatSQL": "select count ( dorm.* )  from dorm "
  },
  {
    "NatSQL": "select count ( dorm.* )  from dorm "
  },
  {
    "NatSQL": "select count ( dorm_amenity.* )  from dorm_amenity "
  },
  {
    "NatSQL": "select count ( dorm_amenity.* )  from dorm_amenity "
  },
  {
    "NatSQL": "select sum ( dorm.student_capacity )  from dorm "
  },
  {
    "NatSQL": "select sum ( dorm.student_capacity )  from dorm "
  },
  {
    "NatSQL": "select count ( student.* )  from student "
  },
  {
    "NatSQL": "select count ( student.* )  from student "
  },
  {
    "NatSQL": "select avg ( student.Age )  , student.city_code from student  group by student.city_code "
  },
  {
    "NatSQL": "select avg ( student.Age )  , student.city_code from student  group by student.city_code "
  },
  {
    "NatSQL": "select avg ( dorm.student_capacity )  , sum ( dorm.student_capacity )  from dorm  where  dorm.gender = \"X\" "
  },
  {
    "NatSQL": "select avg ( dorm.student_capacity )  , sum ( dorm.student_capacity )  from dorm  where  dorm.gender = \"X\" "
  },
  {
    "NatSQL": "select count (  distinct has_amenity.dormid )  from has_amenity "
  },
  {
    "NatSQL": "select count (  distinct has_amenity.dormid )  from has_amenity "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  @.@ not in has_amenity.* "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  @.@ not in has_amenity.* "
  },
  {
    "NatSQL": "select count (  distinct dorm.gender )  from dorm "
  },
  {
    "NatSQL": "select count (  distinct dorm.gender )  from dorm "
  },
  {
    "NatSQL": "select dorm.student_capacity , dorm.gender from dorm  where  dorm.dorm_name like \"慧\" "
  },
  {
    "NatSQL": "select dorm.student_capacity , dorm.gender from dorm  where  dorm.dorm_name like \"慧\" "
  },
  {
    "NatSQL": "select dorm.dorm_name , dorm.gender from dorm  where  dorm.student_capacity > 300  or  dorm.student_capacity < 100 "
  },
  {
    "NatSQL": "select dorm.dorm_name , dorm.gender from dorm  where  dorm.student_capacity > 300  or  dorm.student_capacity < 100 "
  },
  {
    "NatSQL": "select count (  distinct student.Major )  , count (  distinct student.city_code )  from student "
  },
  {
    "NatSQL": "select count (  distinct student.Major )  , count (  distinct student.city_code )  from student "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  dorm_amenity.amenity_name = \"客厅\"  and  dorm_amenity.amenity_name = \"自习室\" "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  dorm_amenity.amenity_name = \"客厅\"  and  dorm_amenity.amenity_name = \"自习室\" "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  dorm_amenity.amenity_name = \"客厅\"  and  dorm_amenity.amenity_name != \"自习室\" "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  dorm_amenity.amenity_name = \"客厅\"  and  dorm_amenity.amenity_name != \"自习室\" "
  },
  {
    "NatSQL": "select student.LName from student  where  student.Sex = \"F\"  and  student.city_code = \"武汉\"  or  student.Sex = \"男\"  and  student.Age < 20 "
  },
  {
    "NatSQL": "select student.LName from student  where  student.Sex = \"F\"  and  student.city_code = \"武汉\"  or  student.Sex = \"男\"  and  student.Age < 20 "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  order by dorm.student_capacity desc limit 1"
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  order by dorm.student_capacity desc limit 1"
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm_amenity  order by dorm_amenity.amenity_name asc"
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm_amenity  order by dorm_amenity.amenity_name asc"
  },
  {
    "NatSQL": "select student.city_code from student  group by student.city_code  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.city_code from student  group by student.city_code  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  @.@ < avg ( student.Age )  "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  @.@ < avg ( student.Age )  "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  student.city_code != \"香港\"  order by student.Age asc"
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  student.city_code != \"香港\"  order by student.Age asc"
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm_amenity  where  dorm.dorm_name = \"礼堂\"  order by dorm_amenity.amenity_name asc"
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm_amenity  where  dorm.dorm_name = \"礼堂\"  order by dorm_amenity.amenity_name asc"
  },
  {
    "NatSQL": "select count ( dorm.* )  , sum ( dorm.student_capacity )  , dorm.gender from dorm  group by dorm.gender "
  },
  {
    "NatSQL": "select count ( dorm.* )  , sum ( dorm.student_capacity )  , dorm.gender from dorm  group by dorm.gender "
  },
  {
    "NatSQL": "select avg ( student.Age )  , max ( student.Age )  , student.Sex from student  group by student.Sex "
  },
  {
    "NatSQL": "select avg ( student.Age )  , max ( student.Age )  , student.Sex from student  group by student.Sex "
  },
  {
    "NatSQL": "select count ( student.* )  , student.Major from student  group by student.Major "
  },
  {
    "NatSQL": "select count ( student.* )  , student.Major from student  group by student.Major "
  },
  {
    "NatSQL": "select count ( student.* )  , avg ( student.Age )  , student.city_code from student  group by student.city_code "
  },
  {
    "NatSQL": "select count ( student.* )  , avg ( student.Age )  , student.city_code from student  group by student.city_code "
  },
  {
    "NatSQL": "select count ( student.* )  , avg ( student.Age )  , student.city_code from student  where  student.Sex = \"男\"  group by student.city_code "
  },
  {
    "NatSQL": "select count ( student.* )  , avg ( student.Age )  , student.city_code from student  where  student.Sex = \"男\"  group by student.city_code "
  },
  {
    "NatSQL": "select count ( student.* )  , student.city_code from student  where  count ( student.* )  > 1  group by student.city_code "
  },
  {
    "NatSQL": "select count ( student.* )  , student.city_code from student  where  count ( student.* )  > 1  group by student.city_code "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  @.@ != student.Major  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  @.@ != student.Major  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( student.* )  , student.Sex from student  where  @.@ > avg ( student.Age )   group by student.Sex "
  },
  {
    "NatSQL": "select count ( student.* )  , student.Sex from student  where  @.@ > avg ( student.Age )   group by student.Sex "
  },
  {
    "NatSQL": "select avg ( student.Age )  , dorm.dorm_name from student  group by dorm.dorm_name "
  },
  {
    "NatSQL": "select avg ( student.Age )  , dorm.dorm_name from student  group by dorm.dorm_name "
  },
  {
    "NatSQL": "select count ( has_amenity.* )  , dorm.dormid from dorm  where  dorm.student_capacity > 100  group by dorm.dormid "
  },
  {
    "NatSQL": "select count ( has_amenity.* )  , dorm.dormid from dorm  where  dorm.student_capacity > 100  group by dorm.dormid "
  },
  {
    "NatSQL": "select count ( student.* )  , dorm.dorm_name from student  where  student.Age > 20  group by dorm.dorm_name "
  },
  {
    "NatSQL": "select count ( student.* )  , dorm.dorm_name from student  where  student.Age > 20  group by dorm.dorm_name "
  },
  {
    "NatSQL": "select student.Fname from student  where  dorm.dorm_name = \"大礼堂\" "
  },
  {
    "NatSQL": "select student.Fname from student  where  dorm.dorm_name = \"大礼堂\" "
  },
  {
    "NatSQL": "select avg ( student.Age )  from student  where  @.@ = max ( dorm.student_capacity )  "
  },
  {
    "NatSQL": "select avg ( student.Age )  from student  where  @.@ = max ( dorm.student_capacity )  "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  dorm.gender = \"男\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  dorm.gender = \"男\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  dorm.dorm_name = \"大礼堂\"  and  student.Sex = \"F\" "
  },
  {
    "NatSQL": "select count ( student.* )  from student  where  dorm.dorm_name = \"大礼堂\"  and  student.Sex = \"F\" "
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm  where  dorm.dorm_name = \"大礼堂\" "
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm  where  dorm.dorm_name = \"大礼堂\" "
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm  where  dorm.dorm_name = \"大礼堂\"  order by dorm_amenity.amenity_name asc"
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm  where  dorm.dorm_name = \"大礼堂\"  order by dorm_amenity.amenity_name asc"
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm_amenity  group by has_amenity.amenid  order by count ( has_amenity.* )  desc limit 1"
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm_amenity  group by has_amenity.amenid  order by count ( has_amenity.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Fname from student  where  @.@ in dorm.*  order by count ( dorm_amenity.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Fname from student  where  @.@ in lives_in.dormid  order by count ( dorm_amenity.* )  desc limit 1"
  },
  {
    "NatSQL": "select dorm.dorm_name , dorm.student_capacity from dorm  group by has_amenity.dormid  order by count ( dorm_amenity.* )  asc limit 1"
  },
  {
    "NatSQL": "select dorm.dorm_name , dorm.student_capacity from dorm  group by has_amenity.dormid  order by count ( dorm_amenity.* )  asc limit 1"
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  except_  @.@ is has_amenity.*  and  dorm_amenity.amenity_name = \"客厅\" "
  },
  {
    "NatSQL": "select dorm.dorm_name from dorm  where  except_  @.@ is has_amenity.*  and  dorm_amenity.amenity_name = \"客厅\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  @.@ join lives_in.*  and  @.@ in has_amenity.dormid  and  dorm_amenity.amenity_name = \"客厅\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  where  @.@ join lives_in.*  and  @.@ in has_amenity.dormid  and  dorm_amenity.amenity_name = \"客厅\" "
  },
  {
    "NatSQL": "select student.Fname , student.Age from student  where  @.@ join lives_in.*  and  @.@ not in has_amenity.dormid  and  dorm_amenity.amenity_name = \"客厅\" "
  },
  {
    "NatSQL": "select student.Fname , student.Age from student  where  @.@ join lives_in.*  and  @.@ not in has_amenity.dormid  and  dorm_amenity.amenity_name = \"客厅\" "
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm  where  @.@ join lives_in.*  and  student.LName = \"帅\" "
  },
  {
    "NatSQL": "select dorm_amenity.amenity_name from dorm  where  @.@ join lives_in.*  and  student.LName = \"帅\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select customers.email_address , customers.phone_number from customers  order by customers.email_address , customers.phone_number asc"
  },
  {
    "NatSQL": "select customers.email_address , customers.phone_number from customers  order by customers.email_address , customers.phone_number asc"
  },
  {
    "NatSQL": "select customers.town_city from customers  where  customers.customer_type_code = \"良好信用评级\"  group by customers.town_city  order by count ( customers.* )  asc limit 1"
  },
  {
    "NatSQL": "select customers.town_city from customers  where  customers.customer_type_code = \"良好信用评级\"  group by customers.town_city  order by count ( customers.* )  asc limit 1"
  },
  {
    "NatSQL": "select products.product_name , count ( complaints.* )  from products  group by products.product_name "
  },
  {
    "NatSQL": "select products.product_name , count ( complaints.* )  from products  group by products.product_name "
  },
  {
    "NatSQL": "select customers.email_address from customers  group by customers.customer_id  order by count ( complaints.* )  asc limit 1"
  },
  {
    "NatSQL": "select customers.email_address from customers  group by customers.customer_id  order by count ( complaints.* )  asc limit 1"
  },
  {
    "NatSQL": "select  distinct products.product_name from products  group by customers.customer_id  order by count ( customers.* )  asc limit 1"
  },
  {
    "NatSQL": "select  distinct products.product_name from products  group by customers.customer_id  order by count ( customers.* )  asc limit 1"
  },
  {
    "NatSQL": "select customers.phone_number from customers  order by complaints.date_complaint_raised desc limit 1"
  },
  {
    "NatSQL": "select customers.phone_number from customers  order by complaints.date_complaint_raised desc limit 1"
  },
  {
    "NatSQL": "select customers.email_address , customers.phone_number from customers  where  @.@ not in complaints.* "
  },
  {
    "NatSQL": "select customers.email_address , customers.phone_number from customers  where  @.@ not in complaints.* "
  },
  {
    "NatSQL": "select customers.phone_number from customers  where  union_  @.@ is staff.* "
  },
  {
    "NatSQL": "select customers.phone_number from customers  where  union_  @.@ is staff.* "
  },
  {
    "NatSQL": "select products.product_description from products  where  products.product_name = \"巧克力\" "
  },
  {
    "NatSQL": "select products.product_description from products  where  products.product_name = \"巧克力\" "
  },
  {
    "NatSQL": "select products.product_name , products.product_category_code from products  order by products.product_price desc limit 1"
  },
  {
    "NatSQL": "select products.product_name , products.product_category_code from products  order by products.product_price desc limit 1"
  },
  {
    "NatSQL": "select products.product_price from products  where  @.@ not in complaints.* "
  },
  {
    "NatSQL": "select products.product_price from products  where  @.@ not in complaints.* "
  },
  {
    "NatSQL": "select avg ( products.product_price )  , products.product_category_code from products  group by products.product_category_code "
  },
  {
    "NatSQL": "select avg ( products.product_price )  , products.product_category_code from products  group by products.product_category_code "
  },
  {
    "NatSQL": "select staff.last_name from staff  order by products.product_price asc limit 1"
  },
  {
    "NatSQL": "select staff.last_name from staff  order by products.product_price asc limit 1"
  },
  {
    "NatSQL": "select complaints.complaint_status_code from complaints  where  count ( complaints.* )  > 3  group by complaints.complaint_status_code "
  },
  {
    "NatSQL": "select complaints.complaint_status_code from complaints  where  count ( complaints.* )  > 3  group by complaints.complaint_status_code "
  },
  {
    "NatSQL": "select staff.last_name from staff  where  staff.email_address like \"%westlake%\" "
  },
  {
    "NatSQL": "select staff.last_name from staff  where  staff.email_address like \"%westlake%\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  group by customers.customer_type_code  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  group by customers.customer_type_code  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select staff.last_name from staff  order by complaints.date_complaint_raised asc limit 1"
  },
  {
    "NatSQL": "select staff.last_name from staff  order by complaints.date_complaint_raised asc limit 1"
  },
  {
    "NatSQL": "select count (  distinct complaints.complaint_type_code )  from complaints "
  },
  {
    "NatSQL": "select count (  distinct complaints.complaint_type_code )  from complaints "
  },
  {
    "NatSQL": "select customers.address_line_1 , customers.address_line_2 from customers  where  customers.email_address = \"vbogisich@qq.org\" "
  },
  {
    "NatSQL": "select customers.address_line_1 , customers.address_line_2 from customers  where  customers.email_address = \"vbogisich@qq.org\" "
  },
  {
    "NatSQL": "select complaints.complaint_status_code , count ( complaints.* )  from complaints  where  complaints.complaint_type_code = \"产品故障\"  group by complaints.complaint_status_code "
  },
  {
    "NatSQL": "select complaints.complaint_status_code , count ( complaints.* )  from complaints  where  complaints.complaint_type_code = \"产品故障\"  group by complaints.complaint_status_code "
  },
  {
    "NatSQL": "select staff.first_name from staff  group by complaints.staff_id  order by count ( complaints.* )  asc limit 5"
  },
  {
    "NatSQL": "select staff.first_name from staff  group by complaints.staff_id  order by count ( complaints.* )  asc limit 5"
  },
  {
    "NatSQL": "select customers.state from customers  group by customers.state  order by count ( customers.* )  asc limit 1"
  },
  {
    "NatSQL": "select customers.state from customers  group by customers.state  order by count ( customers.* )  asc limit 1"
  },
  {
    "NatSQL": "select count ( submission.* )  from submission "
  },
  {
    "NatSQL": "select count ( submission.* )  from submission "
  },
  {
    "NatSQL": "select submission.Author from submission  order by submission.Scores asc"
  },
  {
    "NatSQL": "select submission.Author from submission  order by submission.Scores asc"
  },
  {
    "NatSQL": "select submission.Author , submission.College from submission "
  },
  {
    "NatSQL": "select submission.Author , submission.College from submission "
  },
  {
    "NatSQL": "select submission.Author from submission  where  submission.College = \"浙江\"  or  submission.College = \"南京\" "
  },
  {
    "NatSQL": "select submission.Author from submission  where  submission.College = \"浙江\"  or  submission.College = \"南京\" "
  },
  {
    "NatSQL": "select avg ( submission.Scores )  from submission "
  },
  {
    "NatSQL": "select avg ( submission.Scores )  from submission "
  },
  {
    "NatSQL": "select submission.Author from submission  order by submission.Scores desc limit 1"
  },
  {
    "NatSQL": "select submission.Author from submission  order by submission.Scores desc limit 1"
  },
  {
    "NatSQL": "select submission.College , count ( submission.* )  from submission  group by submission.College "
  },
  {
    "NatSQL": "select submission.College , count ( submission.* )  from submission  group by submission.College "
  },
  {
    "NatSQL": "select submission.College from submission  group by submission.College  order by count ( submission.* )  desc limit 1"
  },
  {
    "NatSQL": "select submission.College from submission  group by submission.College  order by count ( submission.* )  desc limit 1"
  },
  {
    "NatSQL": "select submission.College from submission  where  submission.Scores > 90  and  submission.Scores < 80 "
  },
  {
    "NatSQL": "select submission.College from submission  where  submission.Scores > 90  and  submission.Scores < 80 "
  },
  {
    "NatSQL": "select submission.Author , acceptance.Result from acceptance "
  },
  {
    "NatSQL": "select submission.Author , acceptance.Result from acceptance "
  },
  {
    "NatSQL": "select acceptance.Result from acceptance  order by submission.Scores desc limit 1"
  },
  {
    "NatSQL": "select acceptance.Result from acceptance  order by submission.Scores desc limit 1"
  },
  {
    "NatSQL": "select submission.Author , count (  distinct acceptance.Workshop_ID )  from acceptance  group by submission.Author "
  },
  {
    "NatSQL": "select submission.Author , count (  distinct acceptance.Workshop_ID )  from acceptance  group by submission.Author "
  },
  {
    "NatSQL": "select submission.Author from acceptance  where  count (  distinct acceptance.Workshop_ID )  > 1  group by submission.Author "
  },
  {
    "NatSQL": "select submission.Author from acceptance  where  count (  distinct acceptance.Workshop_ID )  > 1  group by submission.Author "
  },
  {
    "NatSQL": "select workshop.Date , workshop.Venue from workshop  order by workshop.Venue asc"
  },
  {
    "NatSQL": "select workshop.Date , workshop.Venue from workshop  order by workshop.Venue asc"
  },
  {
    "NatSQL": "select submission.Author from submission  where  @.@ not in acceptance.* "
  },
  {
    "NatSQL": "select submission.Author from submission  where  @.@ not in acceptance.* "
  },
  {
    "NatSQL": "select count ( investors.* )  from investors "
  },
  {
    "NatSQL": "select investors.Investor_details from investors "
  },
  {
    "NatSQL": "select  distinct lots.lot_details from lots "
  },
  {
    "NatSQL": "select max ( transactions.amount_of_transaction )  from transactions "
  },
  {
    "NatSQL": "select transactions.date_of_transaction , transactions.share_count from transactions "
  },
  {
    "NatSQL": "select sum ( transactions.share_count )  from transactions "
  },
  {
    "NatSQL": "select transactions.transaction_id from transactions  where  transactions.transaction_type_code = \"PUR\" "
  },
  {
    "NatSQL": "select transactions.date_of_transaction from transactions  where  transactions.transaction_type_code = \"销售中\" "
  },
  {
    "NatSQL": "select avg ( transactions.amount_of_transaction )  from transactions  where  transactions.transaction_type_code = \"销售中\" "
  },
  {
    "NatSQL": "select ref_transaction_types.transaction_type_description from ref_transaction_types  where  ref_transaction_types.transaction_type_code = \"PUR\" "
  },
  {
    "NatSQL": "select min ( transactions.amount_of_transaction )  from transactions  where  transactions.transaction_type_code = \"PUR\"  and  transactions.share_count > 50 "
  },
  {
    "NatSQL": "select max ( transactions.share_count )  from transactions  where  transactions.amount_of_transaction < 10000 "
  },
  {
    "NatSQL": "select transactions.date_of_transaction from transactions  where  transactions.share_count > 100  or  transactions.amount_of_transaction > 1000 "
  },
  {
    "NatSQL": "select ref_transaction_types.transaction_type_description , transactions.date_of_transaction from ref_transaction_types  where  transactions.share_count < 10 "
  },
  {
    "NatSQL": "select investors.Investor_details from investors  where  transactions.share_count > 100 "
  },
  {
    "NatSQL": "select count (  distinct transactions.transaction_type_code )  from transactions "
  },
  {
    "NatSQL": "select lots.lot_details , lots.investor_id from lots "
  },
  {
    "NatSQL": "select lots.lot_details from investors  where  investors.Investor_details = \"l\" "
  },
  {
    "NatSQL": "select purchases.purchase_details from purchases  where  transactions.amount_of_transaction > 10000 "
  },
  {
    "NatSQL": "select sales.sales_details , transactions.date_of_transaction from sales  where  transactions.amount_of_transaction < 3000 "
  },
  {
    "NatSQL": "select lots.lot_details from lots  where  @.@ join transactions_lots.*  and  transactions.share_count < 50 "
  },
  {
    "NatSQL": "select lots.lot_details from lots  where  @.@ join transactions_lots.*  and  transactions.share_count > 100  and  transactions.transaction_type_code = \"PUR\" "
  },
  {
    "NatSQL": "select transactions.transaction_type_code , avg ( transactions.amount_of_transaction )  from transactions  group by transactions.transaction_type_code "
  },
  {
    "NatSQL": "select transactions.transaction_type_code , max ( transactions.share_count )  , min ( transactions.share_count )  from transactions  group by transactions.transaction_type_code "
  },
  {
    "NatSQL": "select transactions.investor_id , avg ( transactions.share_count )  from transactions  group by transactions.investor_id "
  },
  {
    "NatSQL": "select transactions.investor_id , avg ( transactions.share_count )  from transactions  group by transactions.investor_id  order by avg ( transactions.share_count )  asc"
  },
  {
    "NatSQL": "select transactions.investor_id , avg ( transactions.amount_of_transaction )  from transactions  group by transactions.investor_id "
  },
  {
    "NatSQL": "select transactions_lots.lot_id , avg ( transactions.amount_of_transaction )  from transactions  group by transactions_lots.lot_id "
  },
  {
    "NatSQL": "select transactions_lots.lot_id , avg ( transactions.amount_of_transaction )  from transactions  group by transactions_lots.lot_id  order by avg ( transactions.amount_of_transaction )  asc"
  },
  {
    "NatSQL": "select transactions.investor_id , count ( transactions.* )  from transactions  where  transactions.transaction_type_code = \"销售中\"  group by transactions.investor_id "
  },
  {
    "NatSQL": "select transactions.investor_id , count ( transactions.* )  from transactions  group by transactions.investor_id "
  },
  {
    "NatSQL": "select transactions.transaction_type_code from transactions  group by transactions.transaction_type_code  order by count ( transactions.* )  asc limit 1"
  },
  {
    "NatSQL": "select transactions.transaction_type_code from transactions  group by transactions.transaction_type_code  order by count ( transactions.* )  desc limit 1"
  },
  {
    "NatSQL": "select ref_transaction_types.transaction_type_description from ref_transaction_types  group by ref_transaction_types.transaction_type_code  order by count ( transactions.* )  desc limit 1"
  },
  {
    "NatSQL": "select investors.investor_id , investors.Investor_details from investors  group by transactions.investor_id  order by count ( transactions.* )  desc limit 1"
  },
  {
    "NatSQL": "select investors.investor_id , investors.Investor_details from investors  group by transactions.investor_id  order by count ( transactions.* )  desc limit 1"
  },
  {
    "NatSQL": "select investors.investor_id from investors  where  count ( transactions.* )  >= 2  group by transactions.investor_id "
  },
  {
    "NatSQL": "select investors.investor_id , investors.Investor_details from investors  where  transactions.transaction_type_code = \"销售中\"  and  count ( investors.* )  >= 2  group by transactions.investor_id "
  },
  {
    "NatSQL": "select transactions.date_of_transaction from transactions  where  transactions.share_count >= 100  or  transactions.amount_of_transaction >= 100 "
  },
  {
    "NatSQL": "select sales.sales_details from sales  where  union_  @.@ is purchases.* "
  },
  {
    "NatSQL": "select lots.lot_details from lots  where  except_  @.@ is transactions_lots.* "
  },
  {
    "NatSQL": "select count ( hotels.* )  from hotels "
  },
  {
    "NatSQL": "select count ( hotels.* )  from hotels "
  },
  {
    "NatSQL": "select hotels.price_range from hotels "
  },
  {
    "NatSQL": "select hotels.price_range from hotels "
  },
  {
    "NatSQL": "select  distinct locations.Location_Name from locations "
  },
  {
    "NatSQL": "select  distinct locations.Location_Name from locations "
  },
  {
    "NatSQL": "select staff.Name , staff.Other_Details from staff "
  },
  {
    "NatSQL": "select staff.Name , staff.Other_Details from staff "
  },
  {
    "NatSQL": "select visitors.Tourist_Details from visitors "
  },
  {
    "NatSQL": "select visitors.Tourist_Details from visitors "
  },
  {
    "NatSQL": "select hotels.price_range from hotels  where  hotels.star_rating_code = \"5\" "
  },
  {
    "NatSQL": "select hotels.price_range from hotels  where  hotels.star_rating_code = \"5\" "
  },
  {
    "NatSQL": "select avg ( hotels.price_range )  from hotels  where  hotels.star_rating_code = \"5\"  and  hotels.pets_allowed_yn = 1 "
  },
  {
    "NatSQL": "select avg ( hotels.price_range )  from hotels  where  hotels.star_rating_code = \"5\"  and  hotels.pets_allowed_yn = 1 "
  },
  {
    "NatSQL": "select locations.Address from locations  where  locations.Location_Name = \"国家艺术馆\" "
  },
  {
    "NatSQL": "select locations.Address from locations  where  locations.Location_Name = \"国家艺术馆\" "
  },
  {
    "NatSQL": "select locations.Other_Details from locations  where  locations.Location_Name = \"国家艺术馆\" "
  },
  {
    "NatSQL": "select locations.Other_Details from locations  where  locations.Location_Name = \"国家艺术馆\" "
  },
  {
    "NatSQL": "select locations.Location_Name from locations  where  locations.Location_Name like \"%大厦%\" "
  },
  {
    "NatSQL": "select locations.Location_Name from locations  where  locations.Location_Name like \"%大厦%\" "
  },
  {
    "NatSQL": "select count (  distinct photos.Name )  from photos "
  },
  {
    "NatSQL": "select count (  distinct photos.Name )  from photos "
  },
  {
    "NatSQL": "select  distinct visits.Visit_Date from visits "
  },
  {
    "NatSQL": "select  distinct visits.Visit_Date from visits "
  },
  {
    "NatSQL": "select tourist_attractions.Name from tourist_attractions  where  tourist_attractions.How_to_Get_There = \"公共汽车\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from tourist_attractions  where  tourist_attractions.How_to_Get_There = \"公共汽车\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name , tourist_attractions.Opening_Hours from tourist_attractions  where  tourist_attractions.How_to_Get_There = \"公共汽车\"  or  tourist_attractions.How_to_Get_There = \"步行\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name , tourist_attractions.Opening_Hours from tourist_attractions  where  tourist_attractions.How_to_Get_There = \"公共汽车\"  or  tourist_attractions.How_to_Get_There = \"步行\" "
  },
  {
    "NatSQL": "select ref_hotel_star_ratings.star_rating_description from hotels  where  hotels.price_range > 10000 "
  },
  {
    "NatSQL": "select ref_hotel_star_ratings.star_rating_description from hotels  where  hotels.price_range > 10000 "
  },
  {
    "NatSQL": "select museums.Museum_Details , tourist_attractions.Opening_Hours from museums "
  },
  {
    "NatSQL": "select museums.Museum_Details , tourist_attractions.Opening_Hours from museums "
  },
  {
    "NatSQL": "select tourist_attractions.Name from photos  where  photos.Name = \"游戏1\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from photos  where  photos.Name = \"游戏1\" "
  },
  {
    "NatSQL": "select photos.Name , photos.Description from photos  where  tourist_attractions.Name = \"电影城\" "
  },
  {
    "NatSQL": "select photos.Name , photos.Description from photos  where  tourist_attractions.Name = \"电影城\" "
  },
  {
    "NatSQL": "select royal_family.Royal_Family_Details , tourist_attractions.How_to_Get_There from royal_family "
  },
  {
    "NatSQL": "select royal_family.Royal_Family_Details , tourist_attractions.How_to_Get_There from royal_family "
  },
  {
    "NatSQL": "select shops.Shop_Details from shops  where  tourist_attractions.How_to_Get_There = \"步行\" "
  },
  {
    "NatSQL": "select shops.Shop_Details from shops  where  tourist_attractions.How_to_Get_There = \"步行\" "
  },
  {
    "NatSQL": "select staff.Name from staff  where  tourist_attractions.Name = \"故宫博物院\" "
  },
  {
    "NatSQL": "select staff.Name from staff  where  tourist_attractions.Name = \"故宫博物院\" "
  },
  {
    "NatSQL": "select street_markets.Market_Details from street_markets  where  tourist_attractions.How_to_Get_There = \"步行\"  or  tourist_attractions.How_to_Get_There = \"公共汽车\" "
  },
  {
    "NatSQL": "select street_markets.Market_Details from street_markets  where  tourist_attractions.How_to_Get_There = \"步行\"  or  tourist_attractions.How_to_Get_There = \"公共汽车\" "
  },
  {
    "NatSQL": "select visits.Visit_Date , visits.Visit_Details from visitors  where  visitors.Tourist_Details = \"维华\" "
  },
  {
    "NatSQL": "select visits.Visit_Date , visits.Visit_Details from visitors  where  visitors.Tourist_Details = \"维华\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from tourist_attractions  where  visitors.Tourist_Details = \"维华\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from tourist_attractions  where  visitors.Tourist_Details = \"维华\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name , visits.Visit_Date from tourist_attractions  where  visitors.Tourist_Details = \"维华\"  or  visitors.Tourist_Details = \"安然\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name , visits.Visit_Date from tourist_attractions  where  visitors.Tourist_Details = \"维华\"  or  visitors.Tourist_Details = \"安然\" "
  },
  {
    "NatSQL": "select hotels.star_rating_code , avg ( hotels.price_range )  from hotels  group by hotels.star_rating_code "
  },
  {
    "NatSQL": "select hotels.star_rating_code , avg ( hotels.price_range )  from hotels  group by hotels.star_rating_code "
  },
  {
    "NatSQL": "select hotels.pets_allowed_yn , avg ( hotels.price_range )  from hotels  group by hotels.pets_allowed_yn "
  },
  {
    "NatSQL": "select hotels.pets_allowed_yn , avg ( hotels.price_range )  from hotels  group by hotels.pets_allowed_yn "
  },
  {
    "NatSQL": "select hotels.hotel_id , hotels.star_rating_code from hotels  order by hotels.price_range asc"
  },
  {
    "NatSQL": "select hotels.hotel_id , hotels.star_rating_code from hotels  order by hotels.price_range asc"
  },
  {
    "NatSQL": "select hotels.other_hotel_details from hotels  order by hotels.price_range desc limit 3"
  },
  {
    "NatSQL": "select hotels.other_hotel_details from hotels  order by hotels.price_range desc limit 3"
  },
  {
    "NatSQL": "select hotels.other_hotel_details , hotels.star_rating_code from hotels  order by hotels.price_range asc limit 3"
  },
  {
    "NatSQL": "select hotels.other_hotel_details , hotels.star_rating_code from hotels  order by hotels.price_range asc limit 3"
  },
  {
    "NatSQL": "select tourist_attractions.How_to_Get_There from tourist_attractions  group by tourist_attractions.How_to_Get_There  order by count ( tourist_attractions.* )  desc limit 1"
  },
  {
    "NatSQL": "select tourist_attractions.How_to_Get_There from tourist_attractions  group by tourist_attractions.How_to_Get_There  order by count ( tourist_attractions.* )  desc limit 1"
  },
  {
    "NatSQL": "select ref_attraction_types.Attraction_Type_Description , tourist_attractions.Attraction_Type_Code from ref_attraction_types  group by tourist_attractions.Attraction_Type_Code  order by count ( ref_attraction_types.* )  desc limit 1"
  },
  {
    "NatSQL": "select ref_attraction_types.Attraction_Type_Description , tourist_attractions.Attraction_Type_Code from ref_attraction_types  group by tourist_attractions.Attraction_Type_Code  order by count ( ref_attraction_types.* )  desc limit 1"
  },
  {
    "NatSQL": "select tourist_attractions.How_to_Get_There , count ( tourist_attractions.* )  from tourist_attractions  group by tourist_attractions.How_to_Get_There "
  },
  {
    "NatSQL": "select tourist_attractions.How_to_Get_There , count ( tourist_attractions.* )  from tourist_attractions  group by tourist_attractions.How_to_Get_There "
  },
  {
    "NatSQL": "select tourist_attractions.Name , tourist_attractions.Tourist_Attraction_ID , count ( visits.* )  from tourist_attractions  group by visits.Tourist_Attraction_ID "
  },
  {
    "NatSQL": "select tourist_attractions.Name , tourist_attractions.Tourist_Attraction_ID , count ( visits.* )  from tourist_attractions  group by visits.Tourist_Attraction_ID "
  },
  {
    "NatSQL": "select tourist_attractions.Name , tourist_attractions.Tourist_Attraction_ID from tourist_attractions  where  count ( visits.* )  >= 2  group by visits.Tourist_Attraction_ID "
  },
  {
    "NatSQL": "select tourist_attractions.Name , tourist_attractions.Tourist_Attraction_ID from tourist_attractions  where  count ( visits.* )  >= 2  group by visits.Tourist_Attraction_ID "
  },
  {
    "NatSQL": "select tourist_attractions.Name , tourist_attractions.Tourist_Attraction_ID from tourist_attractions  where  count ( visits.* )  <= 1  group by visits.Tourist_Attraction_ID "
  },
  {
    "NatSQL": "select tourist_attractions.Name , tourist_attractions.Tourist_Attraction_ID from tourist_attractions  where  count ( visits.* )  <= 1  group by visits.Tourist_Attraction_ID "
  },
  {
    "NatSQL": "select tourist_attractions.Name from locations  where  locations.Address = \"石象路7号\"  or  tourist_attractions.How_to_Get_There = \"步行\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from locations  where  locations.Address = \"石象路7号\"  or  tourist_attractions.How_to_Get_There = \"步行\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from tourist_attractions  where  features.Feature_Details = \"park\"  or  features.Feature_Details = \"shopping\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from tourist_attractions  where  features.Feature_Details = \"park\"  or  features.Feature_Details = \"shopping\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from locations  where  locations.Address = \"长江路292号\"  or  tourist_attractions.How_to_Get_There = \"公共汽车\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from locations  where  locations.Address = \"长江路292号\"  or  tourist_attractions.How_to_Get_There = \"公共汽车\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from tourist_attractions  where  visitors.Tourist_Details = \"维华\"  and  visitors.Tourist_Details = \"慧兰\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from tourist_attractions  where  visitors.Tourist_Details = \"维华\"  and  visitors.Tourist_Details = \"慧兰\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from tourist_attractions  where  visitors.Tourist_Details = \"李强\"  and  visitors.Tourist_Details != \"张颖\" "
  },
  {
    "NatSQL": "select tourist_attractions.Name from tourist_attractions  where  visitors.Tourist_Details = \"李强\"  and  visitors.Tourist_Details != \"张颖\" "
  },
  {
    "NatSQL": "select count ( visitors.* )  from visitors  where  @.@ not in visits.* "
  },
  {
    "NatSQL": "select count ( visitors.* )  from visitors  where  @.@ not in visits.* "
  },
  {
    "NatSQL": "select count ( video_games.* )  from video_games "
  },
  {
    "NatSQL": "select count ( video_games.* )  from video_games "
  },
  {
    "NatSQL": "select count (  distinct video_games.GType )  from video_games "
  },
  {
    "NatSQL": "select count (  distinct video_games.GType )  from video_games "
  },
  {
    "NatSQL": "select  distinct video_games.GType from video_games "
  },
  {
    "NatSQL": "select  distinct video_games.GType from video_games "
  },
  {
    "NatSQL": "select video_games.GName , video_games.GType from video_games  order by video_games.GName asc"
  },
  {
    "NatSQL": "select video_games.GName , video_games.GType from video_games  order by video_games.GName asc"
  },
  {
    "NatSQL": "select video_games.GName from video_games  where  video_games.GType = \"收集卡片\" "
  },
  {
    "NatSQL": "select video_games.GName from video_games  where  video_games.GType = \"收集卡片\" "
  },
  {
    "NatSQL": "select video_games.GType from video_games  where  video_games.GName = \"使命召唤\" "
  },
  {
    "NatSQL": "select video_games.GType from video_games  where  video_games.GName = \"使命召唤\" "
  },
  {
    "NatSQL": "select count ( video_games.* )  from video_games  where  video_games.GType = \"大型多人在线游戏\" "
  },
  {
    "NatSQL": "select count ( video_games.* )  from video_games  where  video_games.GType = \"大型多人在线游戏\" "
  },
  {
    "NatSQL": "select video_games.GType , count ( video_games.* )  from video_games  group by video_games.GType "
  },
  {
    "NatSQL": "select video_games.GType , count ( video_games.* )  from video_games  group by video_games.GType "
  },
  {
    "NatSQL": "select video_games.GType from video_games  group by video_games.GType  order by count ( video_games.* )  desc limit 1"
  },
  {
    "NatSQL": "select video_games.GType from video_games  group by video_games.GType  order by count ( video_games.* )  desc limit 1"
  },
  {
    "NatSQL": "select video_games.GType from video_games  group by video_games.GType  order by count ( video_games.* )  asc limit 1"
  },
  {
    "NatSQL": "select video_games.GType from video_games  group by video_games.GType  order by count ( video_games.* )  asc limit 1"
  },
  {
    "NatSQL": "select student.StuID from student  where  student.city_code = \"慧园\" "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.city_code = \"慧园\" "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Advisor = 1121 "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Advisor = 1121 "
  },
  {
    "NatSQL": "select student.Fname from student  where  student.Major = 600 "
  },
  {
    "NatSQL": "select student.Fname from student  where  student.Major = 600 "
  },
  {
    "NatSQL": "select student.Major , avg ( student.Age )  , min ( student.Age )  , max ( student.Age )  from student  group by student.Major "
  },
  {
    "NatSQL": "select student.Major , avg ( student.Age )  , min ( student.Age )  , max ( student.Age )  from student  group by student.Major "
  },
  {
    "NatSQL": "select student.Advisor from student  where  count ( student.* )  >= 2  group by student.Advisor "
  },
  {
    "NatSQL": "select student.Advisor from student  where  count ( student.* )  >= 2  group by student.Advisor "
  },
  {
    "NatSQL": "select count (  distinct sportsinfo.SportName )  from sportsinfo "
  },
  {
    "NatSQL": "select count (  distinct sportsinfo.SportName )  from sportsinfo "
  },
  {
    "NatSQL": "select count (  distinct sportsinfo.StuID )  from sportsinfo "
  },
  {
    "NatSQL": "select count (  distinct sportsinfo.StuID )  from sportsinfo "
  },
  {
    "NatSQL": "select sportsinfo.StuID from sportsinfo  where  sportsinfo.OnScholarship = \"Y\" "
  },
  {
    "NatSQL": "select sportsinfo.StuID from sportsinfo  where  sportsinfo.OnScholarship = \"Y\" "
  },
  {
    "NatSQL": "select student.LName from sportsinfo  where  sportsinfo.OnScholarship = \"Y\" "
  },
  {
    "NatSQL": "select student.LName from sportsinfo  where  sportsinfo.OnScholarship = \"Y\" "
  },
  {
    "NatSQL": "select sum ( sportsinfo.GamesPlayed )  from sportsinfo "
  },
  {
    "NatSQL": "select sum ( sportsinfo.GamesPlayed )  from sportsinfo "
  },
  {
    "NatSQL": "select sum ( sportsinfo.GamesPlayed )  from sportsinfo  where  sportsinfo.SportName = \"足球\"  and  sportsinfo.OnScholarship = \"Y\" "
  },
  {
    "NatSQL": "select sum ( sportsinfo.GamesPlayed )  from sportsinfo  where  sportsinfo.SportName = \"足球\"  and  sportsinfo.OnScholarship = \"Y\" "
  },
  {
    "NatSQL": "select sportsinfo.SportName , count ( sportsinfo.* )  from sportsinfo  group by sportsinfo.SportName "
  },
  {
    "NatSQL": "select sportsinfo.SportName , count ( sportsinfo.* )  from sportsinfo  group by sportsinfo.SportName "
  },
  {
    "NatSQL": "select sportsinfo.StuID , count ( sportsinfo.* )  , sum ( sportsinfo.GamesPlayed )  from sportsinfo  group by sportsinfo.StuID "
  },
  {
    "NatSQL": "select sportsinfo.StuID , count ( sportsinfo.* )  , sum ( sportsinfo.GamesPlayed )  from sportsinfo  group by sportsinfo.StuID "
  },
  {
    "NatSQL": "select sportsinfo.StuID from sportsinfo  where  sum ( sportsinfo.HoursPerWeek )  > 10  group by sportsinfo.StuID "
  },
  {
    "NatSQL": "select sportsinfo.StuID from sportsinfo  where  sum ( sportsinfo.HoursPerWeek )  > 10  group by sportsinfo.StuID "
  },
  {
    "NatSQL": "select student.Fname , student.LName from sportsinfo  group by sportsinfo.StuID  order by count ( sportsinfo.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Fname , student.LName from sportsinfo  group by sportsinfo.StuID  order by count ( sportsinfo.* )  desc limit 1"
  },
  {
    "NatSQL": "select sportsinfo.SportName from sportsinfo  where  sportsinfo.OnScholarship = \"Y\"  group by sportsinfo.SportName  order by count ( sportsinfo.* )  desc limit 1"
  },
  {
    "NatSQL": "select sportsinfo.SportName from sportsinfo  where  sportsinfo.OnScholarship = \"Y\"  group by sportsinfo.SportName  order by count ( sportsinfo.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.StuID from student  where  except_  @.@ is sportsinfo.* "
  },
  {
    "NatSQL": "select student.StuID from student  where  except_  @.@ is sportsinfo.* "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Major = 600  and  sportsinfo.OnScholarship = \"Y\" "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Major = 600  and  sportsinfo.OnScholarship = \"Y\" "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Sex = \"F\"  and  @.@ in sportsinfo.*  and  sportsinfo.SportName = \"足球\" "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Sex = \"F\"  and  @.@ in sportsinfo.*  and  sportsinfo.SportName = \"足球\" "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Sex = \"M\"  except_  sportsinfo.SportName = \"足球\" "
  },
  {
    "NatSQL": "select student.StuID from student  where  student.Sex = \"M\"  except_  sportsinfo.SportName = \"足球\" "
  },
  {
    "NatSQL": "select sum ( sportsinfo.HoursPerWeek )  , sum ( sportsinfo.GamesPlayed )  from sportsinfo  where  student.Fname = \"江城\"  and  student.LName = \"韩\" "
  },
  {
    "NatSQL": "select sum ( sportsinfo.HoursPerWeek )  , sum ( sportsinfo.GamesPlayed )  from sportsinfo  where  student.Fname = \"江城\"  and  student.LName = \"韩\" "
  },
  {
    "NatSQL": "select sum ( sportsinfo.HoursPerWeek )  , sum ( sportsinfo.GamesPlayed )  from sportsinfo  where  student.Age < 20 "
  },
  {
    "NatSQL": "select sum ( sportsinfo.HoursPerWeek )  , sum ( sportsinfo.GamesPlayed )  from sportsinfo  where  student.Age < 20 "
  },
  {
    "NatSQL": "select count (  distinct plays_games.StuID )  from plays_games "
  },
  {
    "NatSQL": "select count (  distinct plays_games.StuID )  from plays_games "
  },
  {
    "NatSQL": "select student.StuID from student  where  except_  @.@ is plays_games.* "
  },
  {
    "NatSQL": "select student.StuID from student  where  except_  @.@ is plays_games.* "
  },
  {
    "NatSQL": "select sportsinfo.StuID from sportsinfo  where  intersect_  @.@ is plays_games.* "
  },
  {
    "NatSQL": "select sportsinfo.StuID from sportsinfo  where  intersect_  @.@ is plays_games.* "
  },
  {
    "NatSQL": "select plays_games.GameID , sum ( plays_games.Hours_Played )  from plays_games  group by plays_games.GameID "
  },
  {
    "NatSQL": "select plays_games.GameID , sum ( plays_games.Hours_Played )  from plays_games  group by plays_games.GameID "
  },
  {
    "NatSQL": "select plays_games.StuID , sum ( plays_games.Hours_Played )  from plays_games  group by plays_games.StuID "
  },
  {
    "NatSQL": "select plays_games.StuID , sum ( plays_games.Hours_Played )  from plays_games  group by plays_games.StuID "
  },
  {
    "NatSQL": "select video_games.GName from plays_games  group by plays_games.GameID  order by sum ( plays_games.Hours_Played )  desc limit 1"
  },
  {
    "NatSQL": "select video_games.GName from plays_games  group by plays_games.GameID  order by sum ( plays_games.Hours_Played )  desc limit 1"
  },
  {
    "NatSQL": "select video_games.GName from plays_games  where  sum ( plays_games.Hours_Played )  >= 1000  group by plays_games.GameID "
  },
  {
    "NatSQL": "select video_games.GName from plays_games  where  sum ( plays_games.Hours_Played )  >= 1000  group by plays_games.GameID "
  },
  {
    "NatSQL": "select video_games.GName from plays_games  where  student.LName = \"张\"  and  student.Fname = \"晴\" "
  },
  {
    "NatSQL": "select video_games.GName from plays_games  where  student.LName = \"张\"  and  student.Fname = \"晴\" "
  },
  {
    "NatSQL": "select student.LName , student.Fname from sportsinfo  where  sportsinfo.SportName = \"足球\"  or  sportsinfo.SportName = \"曲棍球\" "
  },
  {
    "NatSQL": "select student.LName , student.Fname from sportsinfo  where  sportsinfo.SportName = \"足球\"  or  sportsinfo.SportName = \"曲棍球\" "
  },
  {
    "NatSQL": "select student.Fname , student.Age from student  where  @.@ in sportsinfo.StuID  and  sportsinfo.SportName = \"足球\"  and  sportsinfo.SportName = \"曲棍球\" "
  },
  {
    "NatSQL": "select student.Fname , student.Age from student  where  @.@ in sportsinfo.StuID  and  sportsinfo.SportName = \"足球\"  and  sportsinfo.SportName = \"曲棍球\" "
  },
  {
    "NatSQL": "select student.LName , student.Sex from student  where  @.@ in plays_games.StuID  and  video_games.GName = \"使命召唤\"  and  video_games.GName = \"绝地求生\" "
  },
  {
    "NatSQL": "select student.LName , student.Sex from student  where  @.@ in plays_games.StuID  and  video_games.GName = \"使命召唤\"  and  video_games.GName = \"绝地求生\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers "
  },
  {
    "NatSQL": "select customers.customer_name from customers "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select avg ( order_items.order_quantity )  from order_items "
  },
  {
    "NatSQL": "select avg ( order_items.order_quantity )  from order_items "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  customers.payment_method = \"现金\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  customers.payment_method = \"现金\" "
  },
  {
    "NatSQL": "select customers.date_became_customer from customers  where  customers.customer_id between 10 and 20 "
  },
  {
    "NatSQL": "select customers.date_became_customer from customers  where  customers.customer_id between 10 and 20 "
  },
  {
    "NatSQL": "select customers.payment_method from customers  group by customers.payment_method  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.payment_method from customers  group by customers.payment_method  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  @.@ = customers.payment_method  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  @.@ = customers.payment_method  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct customers.payment_method from customers "
  },
  {
    "NatSQL": "select  distinct customers.payment_method from customers "
  },
  {
    "NatSQL": "select  distinct products.product_details from products "
  },
  {
    "NatSQL": "select  distinct products.product_details from products "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  customers.customer_name like \"%少奇%\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  customers.customer_name like \"%少奇%\" "
  },
  {
    "NatSQL": "select products.product_details from products  where  products.product_details like \"%拿铁%\"  or  products.product_details like \"%美式咖啡%\" "
  },
  {
    "NatSQL": "select products.product_details from products  where  products.product_details like \"%拿铁%\"  or  products.product_details like \"%美式咖啡%\" "
  },
  {
    "NatSQL": "select addresses.address_content from customers  where  customers.customer_name = \"王俊元\" "
  },
  {
    "NatSQL": "select addresses.address_content from customers  where  customers.customer_name = \"王俊元\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  addresses.city = \"西安\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  addresses.city = \"西安\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  addresses.state_province_county = \"河北\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  addresses.state_province_county = \"河北\" "
  },
  {
    "NatSQL": "select addresses.city from addresses  where  @.@ not in addresses.city  and  @.@ join customers.* "
  },
  {
    "NatSQL": "select addresses.city from addresses  where  @.@ not in addresses.city  and  @.@ join customers.* "
  },
  {
    "NatSQL": "select addresses.city from customers  group by addresses.city  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select addresses.city from customers  group by addresses.city  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct addresses.city from addresses "
  },
  {
    "NatSQL": "select  distinct addresses.city from addresses "
  },
  {
    "NatSQL": "select addresses.city from addresses  where  addresses.zip_postcode = 255 "
  },
  {
    "NatSQL": "select addresses.city from addresses  where  addresses.zip_postcode = 255 "
  },
  {
    "NatSQL": "select addresses.state_province_county , addresses.country from addresses  where  addresses.zip_postcode like \"%4%\" "
  },
  {
    "NatSQL": "select addresses.state_province_county , addresses.country from addresses  where  addresses.zip_postcode like \"%4%\" "
  },
  {
    "NatSQL": "select addresses.country from addresses  where  count ( addresses.address_id )  > 4  group by addresses.country "
  },
  {
    "NatSQL": "select addresses.country from addresses  where  count ( addresses.address_id )  > 4  group by addresses.country "
  },
  {
    "NatSQL": "select customer_contact_channels.channel_code from customer_contact_channels  where  count ( customer_contact_channels.customer_id )  < 5  group by customer_contact_channels.channel_code "
  },
  {
    "NatSQL": "select customer_contact_channels.channel_code from customer_contact_channels  where  count ( customer_contact_channels.customer_id )  < 5  group by customer_contact_channels.channel_code "
  },
  {
    "NatSQL": "select  distinct customer_contact_channels.channel_code from customers  where  customers.customer_name = \"杨超越\" "
  },
  {
    "NatSQL": "select  distinct customer_contact_channels.channel_code from customers  where  customers.customer_name = \"杨超越\" "
  },
  {
    "NatSQL": "select max ( customer_contact_channels.active_to_date )  from customers  where  customers.customer_name = \"杨超越\" "
  },
  {
    "NatSQL": "select max ( customer_contact_channels.active_to_date )  from customers  where  customers.customer_name = \"杨超越\" "
  },
  {
    "NatSQL": "select avg ( customer_contact_channels.active_to_date - customer_contact_channels.active_from_date )  from customer_contact_channels "
  },
  {
    "NatSQL": "select avg ( customer_contact_channels.active_to_date - customer_contact_channels.active_from_date )  from customer_contact_channels "
  },
  {
    "NatSQL": "select customer_contact_channels.channel_code , customer_contact_channels.contact_number from customer_contact_channels  order by customer_contact_channels.active_to_date desc limit 1"
  },
  {
    "NatSQL": "select customer_contact_channels.channel_code , customer_contact_channels.contact_number from customer_contact_channels  order by customer_contact_channels.active_to_date desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name , customer_contact_channels.active_from_date from customers  where  customer_contact_channels.channel_code = \"Email\" "
  },
  {
    "NatSQL": "select customers.customer_name , customer_contact_channels.active_from_date from customers  where  customer_contact_channels.channel_code = \"Email\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  @.@ = max ( order_items.order_quantity )  "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  @.@ = max ( order_items.order_quantity )  "
  },
  {
    "NatSQL": "select customers.customer_name from customers  group by customers.customer_name  order by sum ( order_items.order_quantity )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name from customers  group by customers.customer_name  order by sum ( order_items.order_quantity )  desc limit 1"
  },
  {
    "NatSQL": "select customers.payment_method from customers  group by customers.customer_name  order by sum ( order_items.order_quantity )  asc limit 1"
  },
  {
    "NatSQL": "select customers.payment_method from customers  group by customers.customer_name  order by sum ( order_items.order_quantity )  asc limit 1"
  },
  {
    "NatSQL": "select count (  distinct order_items.product_id )  from customers  where  customers.customer_name = \"路一鸣\" "
  },
  {
    "NatSQL": "select count (  distinct order_items.product_id )  from customers  where  customers.customer_name = \"路一鸣\" "
  },
  {
    "NatSQL": "select sum ( order_items.order_quantity )  from customers  where  customers.customer_name = \"路一鸣\" "
  },
  {
    "NatSQL": "select sum ( order_items.order_quantity )  from customers  where  customers.customer_name = \"路一鸣\" "
  },
  {
    "NatSQL": "select count (  distinct customer_orders.customer_id )  from customer_orders  where  customer_orders.order_status = \"取消\" "
  },
  {
    "NatSQL": "select count (  distinct customer_orders.customer_id )  from customer_orders  where  customer_orders.order_status = \"取消\" "
  },
  {
    "NatSQL": "select count ( customer_orders.* )  from customer_orders  where  customer_orders.order_details = \"第二次\" "
  },
  {
    "NatSQL": "select count ( customer_orders.* )  from customer_orders  where  customer_orders.order_details = \"第二次\" "
  },
  {
    "NatSQL": "select customers.customer_name , customer_orders.order_date from customers  where  customer_orders.order_status = \"运送\" "
  },
  {
    "NatSQL": "select customers.customer_name , customer_orders.order_date from customers  where  customer_orders.order_status = \"运送\" "
  },
  {
    "NatSQL": "select sum ( order_items.order_quantity )  from customer_orders  where  customer_orders.order_status = \"取消\" "
  },
  {
    "NatSQL": "select sum ( order_items.order_quantity )  from customer_orders  where  customer_orders.order_status = \"取消\" "
  },
  {
    "NatSQL": "select sum ( order_items.order_quantity )  from customer_orders  where  customer_orders.order_date < \"2018～03-17 07:13:53\" "
  },
  {
    "NatSQL": "select sum ( order_items.order_quantity )  from customer_orders  where  customer_orders.order_date < \"2018～03-17 07:13:53\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  order by customer_orders.order_date desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name from customers  order by customer_orders.order_date desc limit 1"
  },
  {
    "NatSQL": "select products.product_details from order_items  group by order_items.product_id  order by count ( order_items.* )  desc limit 1"
  },
  {
    "NatSQL": "select products.product_details from order_items  group by order_items.product_id  order by count ( order_items.* )  desc limit 1"
  },
  {
    "NatSQL": "select products.product_details , products.product_id from order_items  group by order_items.product_id  order by sum ( order_items.order_quantity )  asc limit 1"
  },
  {
    "NatSQL": "select products.product_details , products.product_id from order_items  group by order_items.product_id  order by sum ( order_items.order_quantity )  asc limit 1"
  },
  {
    "NatSQL": "select addresses.address_content from addresses  where  addresses.city = \"大理\"  and  addresses.state_province_county = \"云南\"  or  addresses.city = \"银川\"  and  addresses.state_province_county = \"宁夏\" "
  },
  {
    "NatSQL": "select addresses.address_content from addresses  where  addresses.city = \"大理\"  and  addresses.state_province_county = \"云南\"  or  addresses.city = \"银川\"  and  addresses.state_province_county = \"宁夏\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  customers.payment_method != \"现金\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  customers.payment_method != \"现金\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  except_  @.@ is customer_orders.*  and  products.product_details = \"拿铁\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  except_  @.@ is customer_orders.*  and  products.product_details = \"拿铁\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  except_  @.@ is customer_orders.* "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  except_  @.@ is customer_orders.* "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  products.product_details = \"拿铁\"  and  products.product_details = \"美式咖啡\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  products.product_details = \"拿铁\"  and  products.product_details = \"美式咖啡\" "
  },
  {
    "NatSQL": "select count ( artist.* )  from artist "
  },
  {
    "NatSQL": "select count ( artist.* )  from artist "
  },
  {
    "NatSQL": "select artist.Age from artist "
  },
  {
    "NatSQL": "select artist.Age from artist "
  },
  {
    "NatSQL": "select avg ( artist.Age )  from artist "
  },
  {
    "NatSQL": "select avg ( artist.Age )  from artist "
  },
  {
    "NatSQL": "select artist.Famous_Title from artist  where  artist.Artist = \"徐悲鸿\" "
  },
  {
    "NatSQL": "select artist.Famous_Title from artist  where  artist.Artist = \"徐悲鸿\" "
  },
  {
    "NatSQL": "select  distinct artist.Famous_Release_date from artist "
  },
  {
    "NatSQL": "select  distinct artist.Famous_Release_date from artist "
  },
  {
    "NatSQL": "select music_festival.Date_of_ceremony , music_festival.Result from music_festival "
  },
  {
    "NatSQL": "select music_festival.Date_of_ceremony , music_festival.Result from music_festival "
  },
  {
    "NatSQL": "select music_festival.Category from music_festival  where  music_festival.Result = \"已获奖\" "
  },
  {
    "NatSQL": "select music_festival.Category from music_festival  where  music_festival.Result = \"已获奖\" "
  },
  {
    "NatSQL": "select max ( volume.Weeks_on_Top )  , min ( volume.Weeks_on_Top )  from volume "
  },
  {
    "NatSQL": "select max ( volume.Weeks_on_Top )  , min ( volume.Weeks_on_Top )  from volume "
  },
  {
    "NatSQL": "select volume.Song from volume  where  volume.Weeks_on_Top > 1 "
  },
  {
    "NatSQL": "select volume.Song from volume  where  volume.Weeks_on_Top > 1 "
  },
  {
    "NatSQL": "select volume.Song from volume  order by volume.Song asc"
  },
  {
    "NatSQL": "select volume.Song from volume  order by volume.Song asc"
  },
  {
    "NatSQL": "select count (  distinct volume.Artist_ID )  from volume "
  },
  {
    "NatSQL": "select count (  distinct volume.Artist_ID )  from volume "
  },
  {
    "NatSQL": "select music_festival.Date_of_ceremony from music_festival  where  volume.Weeks_on_Top > 2 "
  },
  {
    "NatSQL": "select music_festival.Date_of_ceremony from music_festival  where  volume.Weeks_on_Top > 2 "
  },
  {
    "NatSQL": "select volume.Song from music_festival  where  music_festival.Result = \"提名\" "
  },
  {
    "NatSQL": "select volume.Song from music_festival  where  music_festival.Result = \"提名\" "
  },
  {
    "NatSQL": "select volume.Issue_Date from artist  where  artist.Artist = \"张敬轩\" "
  },
  {
    "NatSQL": "select volume.Issue_Date from artist  where  artist.Artist = \"张敬轩\" "
  },
  {
    "NatSQL": "select volume.Song from artist  where  artist.Age >= 32 "
  },
  {
    "NatSQL": "select volume.Song from artist  where  artist.Age >= 32 "
  },
  {
    "NatSQL": "select avg ( volume.Weeks_on_Top )  from artist  where  artist.Age <= 25 "
  },
  {
    "NatSQL": "select avg ( volume.Weeks_on_Top )  from artist  where  artist.Age <= 25 "
  },
  {
    "NatSQL": "select artist.Famous_Title from artist  where  volume.Weeks_on_Top > 2 "
  },
  {
    "NatSQL": "select artist.Famous_Title from artist  where  volume.Weeks_on_Top > 2 "
  },
  {
    "NatSQL": "select artist.Famous_Title , artist.Age from artist  order by artist.Age desc"
  },
  {
    "NatSQL": "select artist.Famous_Title , artist.Age from artist  order by artist.Age desc"
  },
  {
    "NatSQL": "select artist.Famous_Release_date from artist  order by artist.Age desc limit 1"
  },
  {
    "NatSQL": "select artist.Famous_Release_date from artist  order by artist.Age desc limit 1"
  },
  {
    "NatSQL": "select music_festival.Category , count ( music_festival.* )  from music_festival  group by music_festival.Category "
  },
  {
    "NatSQL": "select music_festival.Category , count ( music_festival.* )  from music_festival  group by music_festival.Category "
  },
  {
    "NatSQL": "select music_festival.Result from music_festival  group by music_festival.Result  order by count ( music_festival.* )  desc limit 1"
  },
  {
    "NatSQL": "select music_festival.Result from music_festival  group by music_festival.Result  order by count ( music_festival.* )  desc limit 1"
  },
  {
    "NatSQL": "select music_festival.Category from music_festival  where  count ( music_festival.* )  > 1  group by music_festival.Category "
  },
  {
    "NatSQL": "select music_festival.Category from music_festival  where  count ( music_festival.* )  > 1  group by music_festival.Category "
  },
  {
    "NatSQL": "select volume.Song from volume  order by volume.Weeks_on_Top desc limit 1"
  },
  {
    "NatSQL": "select volume.Song from volume  order by volume.Weeks_on_Top desc limit 1"
  },
  {
    "NatSQL": "select artist.Famous_Title from artist  where  @.@ not in volume.* "
  },
  {
    "NatSQL": "select artist.Famous_Title from artist  where  @.@ not in volume.* "
  },
  {
    "NatSQL": "select artist.Famous_Title from artist  where  volume.Weeks_on_Top > 2  and  volume.Weeks_on_Top < 2 "
  },
  {
    "NatSQL": "select artist.Famous_Title from artist  where  volume.Weeks_on_Top > 2  and  volume.Weeks_on_Top < 2 "
  },
  {
    "NatSQL": "select music_festival.Date_of_ceremony from music_festival  where  music_festival.Category = \"金曲奖\"  and  music_festival.Result = \"已获奖\" "
  },
  {
    "NatSQL": "select music_festival.Date_of_ceremony from music_festival  where  music_festival.Category = \"金曲奖\"  and  music_festival.Result = \"已获奖\" "
  },
  {
    "NatSQL": "select volume.Issue_Date from volume  order by volume.Weeks_on_Top asc limit 1"
  },
  {
    "NatSQL": "select volume.Issue_Date from volume  order by volume.Weeks_on_Top asc limit 1"
  },
  {
    "NatSQL": "select count (  distinct volume.Artist_ID )  from volume "
  },
  {
    "NatSQL": "select count (  distinct volume.Artist_ID )  from volume "
  },
  {
    "NatSQL": "select music_festival.Result , count ( music_festival.* )  from music_festival  group by music_festival.Result  order by count ( music_festival.* )  desc"
  },
  {
    "NatSQL": "select music_festival.Result , count ( music_festival.* )  from music_festival  group by music_festival.Result  order by count ( music_festival.* )  desc"
  },
  {
    "NatSQL": "select volume.Issue_Date from artist  where  artist.Age <= 23 "
  },
  {
    "NatSQL": "select volume.Issue_Date from artist  where  artist.Age <= 23 "
  },
  {
    "NatSQL": "select count ( roller_coaster.* )  from roller_coaster "
  },
  {
    "NatSQL": "select roller_coaster.Name from roller_coaster  order by roller_coaster.Length asc"
  },
  {
    "NatSQL": "select roller_coaster.Length , roller_coaster.Height from roller_coaster "
  },
  {
    "NatSQL": "select country.Name from country  where  country.Languages != \"德语\" "
  },
  {
    "NatSQL": "select roller_coaster.Status from roller_coaster  where  roller_coaster.Length > 3300  or  roller_coaster.Height > 100 "
  },
  {
    "NatSQL": "select roller_coaster.Speed from roller_coaster  order by roller_coaster.Length desc limit 1"
  },
  {
    "NatSQL": "select avg ( roller_coaster.Speed )  from roller_coaster "
  },
  {
    "NatSQL": "select roller_coaster.Status , count ( roller_coaster.* )  from roller_coaster  group by roller_coaster.Status "
  },
  {
    "NatSQL": "select roller_coaster.Status from roller_coaster  group by roller_coaster.Status  order by count ( roller_coaster.* )  desc limit 1"
  },
  {
    "NatSQL": "select roller_coaster.Status from roller_coaster  where  count ( roller_coaster.* )  > 2  group by roller_coaster.Status "
  },
  {
    "NatSQL": "select roller_coaster.Park from roller_coaster  order by roller_coaster.Speed desc limit 1"
  },
  {
    "NatSQL": "select roller_coaster.Name , country.Name from country "
  },
  {
    "NatSQL": "select country.Name from country  where  count ( roller_coaster.* )  > 1  group by country.Name "
  },
  {
    "NatSQL": "select country.Name , country.Population from country  order by roller_coaster.Height desc limit 1"
  },
  {
    "NatSQL": "select country.Name , avg ( roller_coaster.Speed )  from country  group by country.Name "
  },
  {
    "NatSQL": "select count ( country.* )  from country  where  @.@ not in roller_coaster.*  and  roller_coaster.Length > 3000 "
  },
  {
    "NatSQL": "select country.Name , country.Area , country.Population from country  where  roller_coaster.Speed > 60  and  roller_coaster.Speed < 55 "
  },
  {
    "NatSQL": "select count (  distinct captain.Rank )  from captain "
  },
  {
    "NatSQL": "select count (  distinct captain.Rank )  from captain "
  },
  {
    "NatSQL": "select count ( captain.* )  , captain.Rank from captain  group by captain.Rank "
  },
  {
    "NatSQL": "select count ( captain.* )  , captain.Rank from captain  group by captain.Rank "
  },
  {
    "NatSQL": "select count ( captain.* )  , captain.Rank from captain  where  captain.age < 50  group by captain.Rank "
  },
  {
    "NatSQL": "select count ( captain.* )  , captain.Rank from captain  where  captain.age < 50  group by captain.Rank "
  },
  {
    "NatSQL": "select captain.Name from captain  order by captain.age desc"
  },
  {
    "NatSQL": "select captain.Name from captain  order by captain.age desc"
  },
  {
    "NatSQL": "select captain.Name , captain.Class , captain.Rank from captain "
  },
  {
    "NatSQL": "select captain.Name , captain.Class , captain.Rank from captain "
  },
  {
    "NatSQL": "select captain.Rank from captain  group by captain.Rank  order by count ( captain.* )  desc limit 1"
  },
  {
    "NatSQL": "select captain.Rank from captain  group by captain.Rank  order by count ( captain.* )  desc limit 1"
  },
  {
    "NatSQL": "select captain.Class from captain  where  count ( captain.* )  > 2  group by captain.Class "
  },
  {
    "NatSQL": "select captain.Class from captain  where  count ( captain.* )  > 2  group by captain.Class "
  },
  {
    "NatSQL": "select captain.Name from captain  where  captain.Rank = \"少尉\"  or  captain.Rank = \"中尉\" "
  },
  {
    "NatSQL": "select captain.Name from captain  where  captain.Rank = \"少尉\"  or  captain.Rank = \"中尉\" "
  },
  {
    "NatSQL": "select avg ( captain.age )  , min ( captain.age )  , captain.Class from captain  group by captain.Class "
  },
  {
    "NatSQL": "select avg ( captain.age )  , min ( captain.age )  , captain.Class from captain  group by captain.Class "
  },
  {
    "NatSQL": "select captain.Rank from captain  where  captain.Class = \"切割机\"  and  captain.Class = \"武装纵帆船\" "
  },
  {
    "NatSQL": "select captain.Rank from captain  where  captain.Class = \"切割机\"  and  captain.Class = \"武装纵帆船\" "
  },
  {
    "NatSQL": "select captain.Rank from captain  where  except_  @.@ is captain.*  and  captain.Class = \"第三级船的线路类\" "
  },
  {
    "NatSQL": "select captain.Rank from captain  where  except_  @.@ is captain.*  and  captain.Class = \"第三级船的线路类\" "
  },
  {
    "NatSQL": "select captain.Name from captain  order by captain.age asc limit 1"
  },
  {
    "NatSQL": "select captain.Name from captain  order by captain.age asc limit 1"
  },
  {
    "NatSQL": "select count ( ship.* )  from ship "
  },
  {
    "NatSQL": "select count ( ship.* )  from ship "
  },
  {
    "NatSQL": "select ship.Name , ship.Type , ship.Flag from ship  order by ship.Built_Year desc limit 1"
  },
  {
    "NatSQL": "select ship.Name , ship.Type , ship.Flag from ship  order by ship.Built_Year desc limit 1"
  },
  {
    "NatSQL": "select count ( ship.* )  , ship.Flag from ship  group by ship.Flag "
  },
  {
    "NatSQL": "select count ( ship.* )  , ship.Flag from ship  group by ship.Flag "
  },
  {
    "NatSQL": "select ship.Flag from ship  group by ship.Flag  order by count ( ship.* )  desc limit 1"
  },
  {
    "NatSQL": "select ship.Flag from ship  group by ship.Flag  order by count ( ship.* )  desc limit 1"
  },
  {
    "NatSQL": "select ship.Name from ship  order by ship.Built_Year , ship.Class asc"
  },
  {
    "NatSQL": "select ship.Name from ship  order by ship.Built_Year , ship.Class asc"
  },
  {
    "NatSQL": "select ship.Type from ship  where  ship.Flag = \"巴拿马\"  and  ship.Flag = \"马耳他\" "
  },
  {
    "NatSQL": "select ship.Type from ship  where  ship.Flag = \"巴拿马\"  and  ship.Flag = \"马耳他\" "
  },
  {
    "NatSQL": "select ship.Built_Year from ship  group by ship.Built_Year  order by count ( ship.* )  desc limit 1"
  },
  {
    "NatSQL": "select ship.Built_Year from ship  group by ship.Built_Year  order by count ( ship.* )  desc limit 1"
  },
  {
    "NatSQL": "select ship.Name from ship  where  count ( captain.* )  > 1  group by captain.Ship_ID "
  },
  {
    "NatSQL": "select ship.Name from ship  where  count ( captain.* )  > 1  group by captain.Ship_ID "
  },
  {
    "NatSQL": "select ship.Name , ship.Class from ship  where  @.@ not in captain.* "
  },
  {
    "NatSQL": "select ship.Name , ship.Class from ship  where  @.@ not in captain.* "
  },
  {
    "NatSQL": "select ship.Name from ship  order by captain.age asc limit 1"
  },
  {
    "NatSQL": "select ship.Name from ship  order by captain.age asc limit 1"
  },
  {
    "NatSQL": "select ship.Name , ship.Flag from ship  where  @.@ not in captain.*  and  captain.Rank = \"中尉\" "
  },
  {
    "NatSQL": "select ship.Name , ship.Flag from ship  where  @.@ not in captain.*  and  captain.Rank = \"中尉\" "
  },
  {
    "NatSQL": "select ship.Name from ship  where  captain.Rank = \"少尉\"  and  captain.Rank = \"中尉\" "
  },
  {
    "NatSQL": "select ship.Name from ship  where  captain.Rank = \"少尉\"  and  captain.Rank = \"中尉\" "
  },
  {
    "NatSQL": "select hosting_city.Host_City from hosting_city  order by hosting_city.Year desc limit 1"
  },
  {
    "NatSQL": "select hosting_city.Host_City from hosting_city  order by hosting_city.Year desc limit 1"
  },
  {
    "NatSQL": "select match.Match_ID from match  where  match.Competition = \"1994年世界杯资格赛\" "
  },
  {
    "NatSQL": "select match.Match_ID from match  where  match.Competition = \"1994年世界杯资格赛\" "
  },
  {
    "NatSQL": "select city.City from city  where  hosting_city.Year > 2010 "
  },
  {
    "NatSQL": "select city.City from city  where  hosting_city.Year > 2010 "
  },
  {
    "NatSQL": "select city.City from city  group by hosting_city.Host_City  order by count ( hosting_city.* )  desc limit 1"
  },
  {
    "NatSQL": "select city.City from city  group by hosting_city.Host_City  order by count ( hosting_city.* )  desc limit 1"
  },
  {
    "NatSQL": "select match.Venue from city  where  city.City = \"南京 (江苏)\"  and  match.Competition = \"1994年世界杯资格赛\" "
  },
  {
    "NatSQL": "select match.Venue from city  where  city.City = \"南京 (江苏)\"  and  match.Competition = \"1994年世界杯资格赛\" "
  },
  {
    "NatSQL": "select temperature.Jan from city  where  city.City = \"上海\" "
  },
  {
    "NatSQL": "select temperature.Jan from city  where  city.City = \"上海\" "
  },
  {
    "NatSQL": "select hosting_city.Year from city  where  city.City = \"台州 (浙江)\" "
  },
  {
    "NatSQL": "select hosting_city.Year from city  where  city.City = \"台州 (浙江)\" "
  },
  {
    "NatSQL": "select city.City from city  order by city.Regional_Population desc limit 3"
  },
  {
    "NatSQL": "select city.City from city  order by city.Regional_Population desc limit 3"
  },
  {
    "NatSQL": "select city.City , city.GDP from city  order by city.GDP asc limit 1"
  },
  {
    "NatSQL": "select city.City , city.GDP from city  order by city.GDP asc limit 1"
  },
  {
    "NatSQL": "select city.City from city  order by temperature.Feb desc limit 1"
  },
  {
    "NatSQL": "select city.City from city  order by temperature.Feb desc limit 1"
  },
  {
    "NatSQL": "select city.City from city  where  temperature.Mar < temperature.Jul  or  temperature.Mar > temperature.Oct "
  },
  {
    "NatSQL": "select city.City from city  where  temperature.Mar < temperature.Jul  or  temperature.Mar > temperature.Oct "
  },
  {
    "NatSQL": "select city.City from city  where  temperature.Mar < temperature.Jul  and  @.@ join hosting_city.* "
  },
  {
    "NatSQL": "select city.City from city  where  temperature.Mar < temperature.Jul  and  @.@ join hosting_city.* "
  },
  {
    "NatSQL": "select city.City from city  where  temperature.Mar < temperature.Dec  except_  @.@ join hosting_city.* "
  },
  {
    "NatSQL": "select city.City from city  where  temperature.Mar < temperature.Dec  except_  @.@ join hosting_city.* "
  },
  {
    "NatSQL": "select city.City from city  where  temperature.Feb > temperature.Jun  or  @.@ join hosting_city.* "
  },
  {
    "NatSQL": "select city.City from city  where  temperature.Feb > temperature.Jun  or  @.@ join hosting_city.* "
  },
  {
    "NatSQL": "select city.City from city  where  city.Regional_Population > 10000000 "
  },
  {
    "NatSQL": "select city.City from city  where  city.Regional_Population > 10000000 "
  },
  {
    "NatSQL": "select city.City from city  where  city.Regional_Population > 10000000  or  city.Regional_Population < 5000000 "
  },
  {
    "NatSQL": "select city.City from city  where  city.Regional_Population > 10000000  or  city.Regional_Population < 5000000 "
  },
  {
    "NatSQL": "select count ( match.* )  , match.Competition from match  group by match.Competition "
  },
  {
    "NatSQL": "select count ( match.* )  , match.Competition from match  group by match.Competition "
  },
  {
    "NatSQL": "select match.Venue from match  order by match.Date desc"
  },
  {
    "NatSQL": "select match.Venue from match  order by match.Date desc"
  },
  {
    "NatSQL": "select city.GDP from city  order by city.Regional_Population desc limit 1"
  },
  {
    "NatSQL": "select city.GDP from city  order by city.Regional_Population desc limit 1"
  },
  {
    "NatSQL": "select city.GDP , city.Regional_Population from city  where  count ( hosting_city.* )  > 1  group by hosting_city.Host_City "
  },
  {
    "NatSQL": "select city.GDP , city.Regional_Population from city  where  count ( hosting_city.* )  > 1  group by hosting_city.Host_City "
  },
  {
    "NatSQL": "select individuals.individual_first_name , individuals.individual_middle_name , individuals.individual_last_name from individuals  order by individuals.individual_last_name asc"
  },
  {
    "NatSQL": "select individuals.individual_first_name , individuals.individual_middle_name , individuals.individual_last_name from individuals  order by individuals.individual_last_name asc"
  },
  {
    "NatSQL": "select  distinct forms.form_type_code from forms "
  },
  {
    "NatSQL": "select  distinct forms.form_type_code from forms "
  },
  {
    "NatSQL": "select forms.form_name from forms  group by party_forms.form_id  order by count ( party_forms.* )  desc limit 1"
  },
  {
    "NatSQL": "select forms.form_name from forms  group by party_forms.form_id  order by count ( party_forms.* )  desc limit 1"
  },
  {
    "NatSQL": "select parties.payment_method_code , parties.party_phone from parties  where  parties.party_email = \"enrico09@example.com\" "
  },
  {
    "NatSQL": "select parties.payment_method_code , parties.party_phone from parties  where  parties.party_email = \"enrico09@example.com\" "
  },
  {
    "NatSQL": "select parties.party_email from parties  where  @.@ = party_forms.form_id  order by count ( party_forms.* )  desc limit 1"
  },
  {
    "NatSQL": "select parties.party_email from parties  where  @.@ = party_forms.form_id  order by count ( party_forms.* )  desc limit 1"
  },
  {
    "NatSQL": "select organizations.organization_name from organizations  order by organizations.date_formed asc"
  },
  {
    "NatSQL": "select organizations.organization_name from organizations  order by organizations.date_formed asc"
  },
  {
    "NatSQL": "select organizations.organization_name from organizations  order by organizations.date_formed desc limit 1"
  },
  {
    "NatSQL": "select organizations.organization_name from organizations  order by organizations.date_formed desc limit 1"
  },
  {
    "NatSQL": "select individuals.individual_last_name from organizations  where  organizations.organization_name = \"民进党\"  order by organization_contact_individuals.date_contact_to desc limit 1"
  },
  {
    "NatSQL": "select individuals.individual_last_name from organizations  where  organizations.organization_name = \"民进党\"  order by organization_contact_individuals.date_contact_to desc limit 1"
  },
  {
    "NatSQL": "select individuals.individual_last_name from organizations  where  @.@ = max ( organizations.uk_vat_number )   order by organization_contact_individuals.date_contact_to asc limit 1"
  },
  {
    "NatSQL": "select individuals.individual_last_name from organizations  where  @.@ = max ( organizations.uk_vat_number )   order by organization_contact_individuals.date_contact_to asc limit 1"
  },
  {
    "NatSQL": "select count ( services.* )  from services "
  },
  {
    "NatSQL": "select count ( services.* )  from services "
  },
  {
    "NatSQL": "select services.service_name from services  where  except_  @.@ is party_services.* "
  },
  {
    "NatSQL": "select services.service_name from services  where  except_  @.@ is party_services.* "
  },
  {
    "NatSQL": "select addresses.town_city from addresses  where  union_  @.@ is addresses.* "
  },
  {
    "NatSQL": "select addresses.town_city from addresses  where  union_  @.@ is addresses.* "
  },
  {
    "NatSQL": "select count ( addresses.* )  from addresses  where  addresses.state_province_county = \"河北\" "
  },
  {
    "NatSQL": "select count ( addresses.* )  from addresses  where  addresses.state_province_county = \"河北\" "
  },
  {
    "NatSQL": "select parties.payment_method_code from parties  where  count ( parties.* )  > 3  group by parties.payment_method_code "
  },
  {
    "NatSQL": "select parties.payment_method_code from parties  where  count ( parties.* )  > 3  group by parties.payment_method_code "
  },
  {
    "NatSQL": "select organizations.organization_name from organizations  where  organizations.organization_name like \"%组织%\" "
  },
  {
    "NatSQL": "select organizations.organization_name from organizations  where  organizations.organization_name like \"%组织%\" "
  },
  {
    "NatSQL": "select count (  distinct parties.payment_method_code )  from parties "
  },
  {
    "NatSQL": "select count (  distinct parties.payment_method_code )  from parties "
  },
  {
    "NatSQL": "select parties.party_email from parties  group by parties.party_email  order by count ( party_services.* )  desc limit 1"
  },
  {
    "NatSQL": "select parties.party_email from parties  group by parties.party_email  order by count ( party_services.* )  desc limit 1"
  },
  {
    "NatSQL": "select addresses.state_province_county from addresses  where  addresses.line_1_number_building like \"%石龙山街18号%\" "
  },
  {
    "NatSQL": "select addresses.state_province_county from addresses  where  addresses.line_1_number_building like \"%石龙山街18号%\" "
  },
  {
    "NatSQL": "select organizations.organization_name from organizations  group by organizations.organization_name  order by count ( organization_contact_individuals.* )  desc limit 1"
  },
  {
    "NatSQL": "select organizations.organization_name from organizations  group by organizations.organization_name  order by count ( organization_contact_individuals.* )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct individuals.individual_last_name from individuals  where  @.@ join organization_contact_individuals.* "
  },
  {
    "NatSQL": "select  distinct individuals.individual_last_name from individuals  where  @.@ join organization_contact_individuals.* "
  },
  {
    "NatSQL": "select count ( driver.* )  from driver "
  },
  {
    "NatSQL": "select driver.Name , driver.Home_city , driver.Age from driver "
  },
  {
    "NatSQL": "select driver.Party , count ( driver.* )  from driver  group by driver.Party "
  },
  {
    "NatSQL": "select driver.Name from driver  order by driver.Age desc"
  },
  {
    "NatSQL": "select  distinct driver.Home_city from driver "
  },
  {
    "NatSQL": "select driver.Home_city from driver  group by driver.Home_city  order by count ( driver.* )  desc limit 1"
  },
  {
    "NatSQL": "select driver.Party from driver  where  driver.Home_city = \"苏州\"  and  driver.Age > 40 "
  },
  {
    "NatSQL": "select driver.Home_city from driver  where  driver.Age > 40  and  count ( driver.* )  >= 2  group by driver.Home_city "
  },
  {
    "NatSQL": "select driver.Home_city from driver  where  except_  @.@ is driver.*  and  driver.Age > 40 "
  },
  {
    "NatSQL": "select driver.Name from driver  where  @.@ not in school_bus.* "
  },
  {
    "NatSQL": "select school.Type from school  where  count ( school.* )  = 2  group by school.Type "
  },
  {
    "NatSQL": "select school.School , driver.Name from school_bus "
  },
  {
    "NatSQL": "select max ( school_bus.Years_Working )  , min ( school_bus.Years_Working )  , avg ( school_bus.Years_Working )  from school_bus "
  },
  {
    "NatSQL": "select school.School , school.Type from school  where  @.@ not in school_bus.* "
  },
  {
    "NatSQL": "select school.Type , count ( school_bus.* )  from school_bus  group by school.Type "
  },
  {
    "NatSQL": "select count ( driver.* )  from driver  where  driver.Home_city = \"苏州\"  or  driver.Age < 40 "
  },
  {
    "NatSQL": "select driver.Name from driver  where  driver.Home_city = \"苏州\"  and  driver.Age < 40 "
  },
  {
    "NatSQL": "select driver.Name from driver  order by school_bus.Years_Working desc limit 1"
  },
  {
    "NatSQL": "select count ( flight.* )  from flight  where  flight.Velocity > 200 "
  },
  {
    "NatSQL": "select flight.Vehicle_Flight_number , flight.Date , flight.Pilot from flight  order by flight.Altitude asc"
  },
  {
    "NatSQL": "select airport.id , airport.Country , airport.City , airport.name from airport  order by airport.name asc"
  },
  {
    "NatSQL": "select max ( operate_company.Group_Equity_Shareholding )  from operate_company "
  },
  {
    "NatSQL": "select avg ( flight.Velocity )  from flight  where  flight.Pilot = \"刘明\" "
  },
  {
    "NatSQL": "select operate_company.name , operate_company.Type from operate_company  where  @.@ join flight.* "
  },
  {
    "NatSQL": "select airport.name from airport  where  airport.Country != \"冰岛\" "
  },
  {
    "NatSQL": "select  distinct operate_company.Type from operate_company  where  flight.Velocity < 200 "
  },
  {
    "NatSQL": "select operate_company.id , operate_company.name from operate_company  where  count ( flight.* )  > 1  group by operate_company.id "
  },
  {
    "NatSQL": "select airport.id , airport.name , airport.IATA from airport  group by flight.id  order by count ( flight.* )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct flight.Pilot from airport  where  airport.Country = \"中国\"  or  airport.name = \"宝安机场\" "
  },
  {
    "NatSQL": "select operate_company.Type , count ( operate_company.* )  from operate_company  group by operate_company.Type  order by count ( operate_company.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( airport.* )  from airport  where  @.@ not in flight.*  and  flight.Pilot = \"杨雄\" "
  },
  {
    "NatSQL": "select flight.Pilot from operate_company  where  operate_company.Principal_activities = \"货物\"  and  operate_company.Principal_activities = \"餐饮服务\" "
  },
  {
    "NatSQL": "select airport.name from airport  where  airport.name like \"%国际%\" "
  },
  {
    "NatSQL": "select airport.id , count ( operate_company.* )  from operate_company  group by airport.id "
  },
  {
    "NatSQL": "select count ( airport.* )  , airport.Country from airport  group by airport.Country "
  },
  {
    "NatSQL": "select airport.Country from airport  where  count ( airport.* )  > 2  group by airport.Country "
  },
  {
    "NatSQL": "select flight.Pilot from flight  group by flight.Pilot  order by count ( flight.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( accounts.* )  from accounts "
  },
  {
    "NatSQL": "select count ( accounts.* )  from accounts "
  },
  {
    "NatSQL": "select accounts.Account_ID , accounts.Account_Details from accounts "
  },
  {
    "NatSQL": "select accounts.Account_ID , accounts.Account_Details from accounts "
  },
  {
    "NatSQL": "select count ( statements.* )  from statements "
  },
  {
    "NatSQL": "select count ( statements.* )  from statements "
  },
  {
    "NatSQL": "select statements.Statement_ID , statements.Statement_Details from statements "
  },
  {
    "NatSQL": "select statements.Statement_ID , statements.Statement_Details from statements "
  },
  {
    "NatSQL": "select accounts.Statement_ID , statements.Statement_Details , accounts.Account_Details from accounts "
  },
  {
    "NatSQL": "select accounts.Statement_ID , statements.Statement_Details , accounts.Account_Details from accounts "
  },
  {
    "NatSQL": "select accounts.Statement_ID , count ( accounts.* )  from accounts  group by accounts.Statement_ID "
  },
  {
    "NatSQL": "select accounts.Statement_ID , count ( accounts.* )  from accounts  group by accounts.Statement_ID "
  },
  {
    "NatSQL": "select statements.Statement_ID , statements.Statement_Details from accounts  group by accounts.Statement_ID  order by count ( accounts.* )  desc limit 1"
  },
  {
    "NatSQL": "select statements.Statement_ID , statements.Statement_Details from accounts  group by accounts.Statement_ID  order by count ( accounts.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( documents.* )  from documents "
  },
  {
    "NatSQL": "select count ( documents.* )  from documents "
  },
  {
    "NatSQL": "select documents.Document_Type_Code , documents.Document_Name , documents.Document_Description from documents  where  documents.Document_Name = \"齐军的简历\"  or  documents.Document_Name = \"御书\" "
  },
  {
    "NatSQL": "select documents.Document_Type_Code , documents.Document_Name , documents.Document_Description from documents  where  documents.Document_Name = \"齐军的简历\"  or  documents.Document_Name = \"御书\" "
  },
  {
    "NatSQL": "select documents.Document_ID , documents.Document_Name from documents "
  },
  {
    "NatSQL": "select documents.Document_ID , documents.Document_Name from documents "
  },
  {
    "NatSQL": "select documents.Document_Name , documents.Document_ID from documents  where  documents.Document_Type_Code = \"BK\" "
  },
  {
    "NatSQL": "select documents.Document_Name , documents.Document_ID from documents  where  documents.Document_Type_Code = \"BK\" "
  },
  {
    "NatSQL": "select count ( documents.* )  , documents.Project_ID from documents  where  documents.Document_Type_Code = \"BK\"  group by documents.Project_ID "
  },
  {
    "NatSQL": "select count ( documents.* )  , documents.Project_ID from documents  where  documents.Document_Type_Code = \"BK\"  group by documents.Project_ID "
  },
  {
    "NatSQL": "select documents.Document_Name , documents.Document_Date from documents  where  projects.Project_Details = \"图数据库项目\" "
  },
  {
    "NatSQL": "select documents.Document_Name , documents.Document_Date from documents  where  projects.Project_Details = \"图数据库项目\" "
  },
  {
    "NatSQL": "select documents.Project_ID , count ( documents.* )  from documents  group by documents.Project_ID "
  },
  {
    "NatSQL": "select documents.Project_ID , count ( documents.* )  from documents  group by documents.Project_ID "
  },
  {
    "NatSQL": "select documents.Project_ID from documents  group by documents.Project_ID  order by count ( documents.* )  asc limit 1"
  },
  {
    "NatSQL": "select documents.Project_ID from documents  group by documents.Project_ID  order by count ( documents.* )  asc limit 1"
  },
  {
    "NatSQL": "select documents.Project_ID from documents  where  count ( documents.* )  >= 2  group by documents.Project_ID "
  },
  {
    "NatSQL": "select documents.Project_ID from documents  where  count ( documents.* )  >= 2  group by documents.Project_ID "
  },
  {
    "NatSQL": "select documents.Document_Type_Code , count ( documents.* )  from documents  group by documents.Document_Type_Code "
  },
  {
    "NatSQL": "select documents.Document_Type_Code , count ( documents.* )  from documents  group by documents.Document_Type_Code "
  },
  {
    "NatSQL": "select documents.Document_Type_Code from documents  group by documents.Document_Type_Code  order by count ( documents.* )  desc limit 1"
  },
  {
    "NatSQL": "select documents.Document_Type_Code from documents  group by documents.Document_Type_Code  order by count ( documents.* )  desc limit 1"
  },
  {
    "NatSQL": "select documents.Document_Type_Code from documents  where  count ( documents.* )  < 3  group by documents.Document_Type_Code "
  },
  {
    "NatSQL": "select documents.Document_Type_Code from documents  where  count ( documents.* )  < 3  group by documents.Document_Type_Code "
  },
  {
    "NatSQL": "select statements.Statement_Details , documents.Document_Name from statements  where  statements.Statement_Details = \"个人计划\" "
  },
  {
    "NatSQL": "select statements.Statement_Details , documents.Document_Name from statements  where  statements.Statement_Details = \"私有项目\" "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Code , ref_document_types.Document_Type_Name , ref_document_types.Document_Type_Description from ref_document_types "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Code , ref_document_types.Document_Type_Name , ref_document_types.Document_Type_Description from ref_document_types "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Description from ref_document_types  where  ref_document_types.Document_Type_Name = \"电影\" "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Description from ref_document_types  where  ref_document_types.Document_Type_Name = \"电影\" "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Name , ref_document_types.Document_Type_Description , documents.Document_Date from ref_document_types "
  },
  {
    "NatSQL": "select ref_document_types.Document_Type_Name , ref_document_types.Document_Type_Description , documents.Document_Date from ref_document_types "
  },
  {
    "NatSQL": "select count ( projects.* )  from projects "
  },
  {
    "NatSQL": "select count ( projects.* )  from projects "
  },
  {
    "NatSQL": "select projects.Project_ID , projects.Project_Details from projects "
  },
  {
    "NatSQL": "select projects.Project_ID , projects.Project_Details from projects "
  },
  {
    "NatSQL": "select projects.Project_ID , projects.Project_Details from projects  where  count ( documents.* )  > 2  group by projects.Project_ID "
  },
  {
    "NatSQL": "select projects.Project_ID , projects.Project_Details from projects  where  count ( documents.* )  > 2  group by projects.Project_ID "
  },
  {
    "NatSQL": "select projects.Project_Details from projects  where  documents.Document_Name = \"御书\" "
  },
  {
    "NatSQL": "select projects.Project_Details from projects  where  documents.Document_Name = \"御书\" "
  },
  {
    "NatSQL": "select count ( ref_budget_codes.* )  from ref_budget_codes "
  },
  {
    "NatSQL": "select count ( ref_budget_codes.* )  from ref_budget_codes "
  },
  {
    "NatSQL": "select ref_budget_codes.Budget_Type_Code , ref_budget_codes.Budget_Type_Description from ref_budget_codes "
  },
  {
    "NatSQL": "select ref_budget_codes.Budget_Type_Code , ref_budget_codes.Budget_Type_Description from ref_budget_codes "
  },
  {
    "NatSQL": "select ref_budget_codes.Budget_Type_Description from ref_budget_codes  where  ref_budget_codes.Budget_Type_Code = \"org\" "
  },
  {
    "NatSQL": "select ref_budget_codes.Budget_Type_Description from ref_budget_codes  where  ref_budget_codes.Budget_Type_Code = \"org\" "
  },
  {
    "NatSQL": "select count ( documents_with_expenses.* )  from documents_with_expenses "
  },
  {
    "NatSQL": "select count ( documents_with_expenses.* )  from documents_with_expenses "
  },
  {
    "NatSQL": "select documents_with_expenses.Document_ID from documents_with_expenses  where  documents_with_expenses.Budget_Type_Code = \"SF\" "
  },
  {
    "NatSQL": "select documents_with_expenses.Document_ID from documents_with_expenses  where  documents_with_expenses.Budget_Type_Code = \"SF\" "
  },
  {
    "NatSQL": "select ref_budget_codes.Budget_Type_Code , ref_budget_codes.Budget_Type_Description , documents_with_expenses.Document_ID from documents_with_expenses "
  },
  {
    "NatSQL": "select ref_budget_codes.Budget_Type_Code , ref_budget_codes.Budget_Type_Description , documents_with_expenses.Document_ID from documents_with_expenses "
  },
  {
    "NatSQL": "select documents_with_expenses.Document_ID from documents_with_expenses  where  ref_budget_codes.Budget_Type_Description = \"政府\" "
  },
  {
    "NatSQL": "select documents_with_expenses.Document_ID from documents_with_expenses  where  ref_budget_codes.Budget_Type_Description = \"政府\" "
  },
  {
    "NatSQL": "select documents_with_expenses.Budget_Type_Code , count ( documents_with_expenses.* )  from documents_with_expenses  group by documents_with_expenses.Budget_Type_Code "
  },
  {
    "NatSQL": "select documents_with_expenses.Budget_Type_Code , count ( documents_with_expenses.* )  from documents_with_expenses  group by documents_with_expenses.Budget_Type_Code "
  },
  {
    "NatSQL": "select documents_with_expenses.Budget_Type_Code from documents_with_expenses  group by documents_with_expenses.Budget_Type_Code  order by count ( documents_with_expenses.* )  desc limit 1"
  },
  {
    "NatSQL": "select documents_with_expenses.Budget_Type_Code from documents_with_expenses  group by documents_with_expenses.Budget_Type_Code  order by count ( documents_with_expenses.* )  desc limit 1"
  },
  {
    "NatSQL": "select documents.Document_ID from documents  where  except_  @.@ is documents_with_expenses.* "
  },
  {
    "NatSQL": "select documents.Document_ID from documents  where  except_  @.@ is documents_with_expenses.* "
  },
  {
    "NatSQL": "select documents.Document_ID from documents  where  documents.Document_Type_Code = \"CV\"  and  @.@ not in documents_with_expenses.* "
  },
  {
    "NatSQL": "select documents.Document_ID from documents  where  documents.Document_Type_Code = \"CV\"  and  @.@ not in documents_with_expenses.* "
  },
  {
    "NatSQL": "select documents.Document_ID from documents  where  @.@ join documents_with_expenses.*  and  documents.Document_Name like \"%年%\" "
  },
  {
    "NatSQL": "select documents.Document_ID from documents  where  @.@ join documents_with_expenses.*  and  documents.Document_Name like \"%年%\" "
  },
  {
    "NatSQL": "select count ( documents.* )  from documents  where  @.@ not in documents_with_expenses.* "
  },
  {
    "NatSQL": "select count ( documents.* )  from documents  where  @.@ not in documents_with_expenses.* "
  },
  {
    "NatSQL": "select documents.Document_Date from documents  where  documents_with_expenses.Budget_Type_Code = \"GV\"  and  documents_with_expenses.Budget_Type_Code = \"SF\" "
  },
  {
    "NatSQL": "select documents.Document_Date from documents  where  documents_with_expenses.Budget_Type_Code = \"GV\"  and  documents_with_expenses.Budget_Type_Code = \"SF\" "
  },
  {
    "NatSQL": "select max ( accounts.Account_Details )  from accounts  where  union_  @.@ is accounts.*  and  accounts.Account_Details like \"%5%\" "
  },
  {
    "NatSQL": "select max ( accounts.Account_Details )  from accounts  where  union_  @.@ is accounts.*  and  accounts.Account_Details like \"%5%\" "
  },
  {
    "NatSQL": "select count ( scientists.* )  from scientists "
  },
  {
    "NatSQL": "select count ( scientists.* )  from scientists "
  },
  {
    "NatSQL": "select sum ( projects.Hours )  from projects "
  },
  {
    "NatSQL": "select sum ( projects.Hours )  from projects "
  },
  {
    "NatSQL": "select count (  distinct assignedto.Scientist )  from assignedto "
  },
  {
    "NatSQL": "select count (  distinct assignedto.Scientist )  from assignedto "
  },
  {
    "NatSQL": "select count (  distinct projects.Name )  from projects "
  },
  {
    "NatSQL": "select count (  distinct projects.Name )  from projects "
  },
  {
    "NatSQL": "select avg ( projects.Hours )  from projects "
  },
  {
    "NatSQL": "select avg ( projects.Hours )  from projects "
  },
  {
    "NatSQL": "select projects.Name from projects  order by projects.Hours desc limit 1"
  },
  {
    "NatSQL": "select projects.Name from projects  order by projects.Hours desc limit 1"
  },
  {
    "NatSQL": "select projects.Name from projects  where  @.@ > avg ( projects.Hours )  "
  },
  {
    "NatSQL": "select projects.Name from projects  where  @.@ > avg ( projects.Hours )  "
  },
  {
    "NatSQL": "select projects.Name , projects.Hours from projects  group by assignedto.Project  order by count ( assignedto.* )  desc limit 1"
  },
  {
    "NatSQL": "select projects.Name , projects.Hours from projects  group by assignedto.Project  order by count ( assignedto.* )  desc limit 1"
  },
  {
    "NatSQL": "select projects.Name from assignedto  where  scientists.Name like \"%曹%\" "
  },
  {
    "NatSQL": "select projects.Name from assignedto  where  scientists.Name like \"%曹%\" "
  },
  {
    "NatSQL": "select sum ( projects.Hours )  from assignedto  where  scientists.Name = \"李文军\"  or  scientists.Name = \"张智名\" "
  },
  {
    "NatSQL": "select sum ( projects.Hours )  from assignedto  where  scientists.Name = \"李文军\"  or  scientists.Name = \"张智名\" "
  },
  {
    "NatSQL": "select projects.Name from projects  where  projects.Hours between 100 and 300 "
  },
  {
    "NatSQL": "select projects.Name from projects  where  projects.Hours between 100 and 300 "
  },
  {
    "NatSQL": "select scientists.Name from assignedto  where  projects.Name = \"东电西输\"  and  projects.Name = \"南水北调\" "
  },
  {
    "NatSQL": "select scientists.Name from assignedto  where  projects.Name = \"东电西输\"  and  projects.Name = \"南水北调\" "
  },
  {
    "NatSQL": "select scientists.Name from scientists  order by scientists.Name asc"
  },
  {
    "NatSQL": "select scientists.Name from scientists  order by scientists.Name asc"
  },
  {
    "NatSQL": "select count ( assignedto.* )  , projects.Name from projects  group by projects.Name "
  },
  {
    "NatSQL": "select count ( assignedto.* )  , projects.Name from projects  group by projects.Name "
  },
  {
    "NatSQL": "select count ( assignedto.* )  , projects.Name from projects  where  projects.Hours > 300  group by projects.Name "
  },
  {
    "NatSQL": "select count ( assignedto.* )  , projects.Name from projects  where  projects.Hours > 300  group by projects.Name "
  },
  {
    "NatSQL": "select count ( assignedto.* )  , scientists.Name from scientists  group by scientists.Name "
  },
  {
    "NatSQL": "select count ( assignedto.* )  , scientists.Name from scientists  group by scientists.Name "
  },
  {
    "NatSQL": "select scientists.SSN , scientists.Name from assignedto  where  @.@ = max ( projects.Hours )  "
  },
  {
    "NatSQL": "select scientists.SSN , scientists.Name from assignedto  where  @.@ = max ( projects.Hours )  "
  },
  {
    "NatSQL": "select scientists.Name from assignedto  where  @.@ join assignedto.* "
  },
  {
    "NatSQL": "select scientists.Name from assignedto  where  @.@ join assignedto.* "
  },
  {
    "NatSQL": "select projects.Name from projects  where  @.@ not in assignedto.* "
  },
  {
    "NatSQL": "select projects.Name from projects  where  @.@ not in assignedto.* "
  },
  {
    "NatSQL": "select scientists.Name from scientists  where  @.@ not in assignedto.* "
  },
  {
    "NatSQL": "select scientists.Name from scientists  where  @.@ not in assignedto.* "
  },
  {
    "NatSQL": "select count ( scientists.* )  from scientists  where  @.@ not in assignedto.* "
  },
  {
    "NatSQL": "select count ( scientists.* )  from scientists  where  @.@ not in assignedto.* "
  },
  {
    "NatSQL": "select scientists.Name from scientists  where  except_  @.@ is assignedto.*  and  @.@ = max ( projects.Hours )  "
  },
  {
    "NatSQL": "select scientists.Name from scientists  where  except_  @.@ is assignedto.*  and  @.@ = max ( projects.Hours )  "
  },
  {
    "NatSQL": "select scientists.Name , projects.Name , projects.Hours from scientists  order by projects.Name , scientists.Name asc"
  },
  {
    "NatSQL": "select scientists.Name , projects.Name , projects.Hours from scientists  order by projects.Name , scientists.Name asc"
  },
  {
    "NatSQL": "select projects.Name , scientists.Name from assignedto  where  @.@ = min ( projects.Hours )  "
  },
  {
    "NatSQL": "select projects.Name , scientists.Name from assignedto  where  @.@ = min ( projects.Hours )  "
  },
  {
    "NatSQL": "select wine.Name from wine  order by wine.Score asc limit 1"
  },
  {
    "NatSQL": "select wine.Name from wine  order by wine.Score asc limit 1"
  },
  {
    "NatSQL": "select wine.Winery from wine  order by wine.Score asc limit 1"
  },
  {
    "NatSQL": "select wine.Winery from wine  order by wine.Score asc limit 1"
  },
  {
    "NatSQL": "select wine.Name from wine  where  wine.Year = \"2008\" "
  },
  {
    "NatSQL": "select wine.Name from wine  where  wine.Year = \"2008\" "
  },
  {
    "NatSQL": "select wine.Grape , wine.Appelation from wine "
  },
  {
    "NatSQL": "select wine.Grape , wine.Appelation from wine "
  },
  {
    "NatSQL": "select wine.Name , wine.Score from wine "
  },
  {
    "NatSQL": "select wine.Name , wine.Score from wine "
  },
  {
    "NatSQL": "select appellations.Area , appellations.County from appellations "
  },
  {
    "NatSQL": "select appellations.Area , appellations.County from appellations "
  },
  {
    "NatSQL": "select wine.Price from wine  where  wine.Year < 2010 "
  },
  {
    "NatSQL": "select wine.Price from wine  where  wine.Year < 2010 "
  },
  {
    "NatSQL": "select wine.Name from wine  where  wine.Score > 90 "
  },
  {
    "NatSQL": "select wine.Name from wine  where  wine.Score > 90 "
  },
  {
    "NatSQL": "select  distinct wine.Name from grapes  where  grapes.Color = \"Red\" "
  },
  {
    "NatSQL": "select  distinct wine.Name from grapes  where  grapes.Color = \"Red\" "
  },
  {
    "NatSQL": "select  distinct wine.Name from appellations  where  appellations.Area = \"西北部\" "
  },
  {
    "NatSQL": "select  distinct wine.Name from appellations  where  appellations.Area = \"西北部\" "
  },
  {
    "NatSQL": "select count ( wine.* )  from wine  where  wine.Winery = \"王朝葡萄酒厂\" "
  },
  {
    "NatSQL": "select count ( wine.* )  from wine  where  wine.Winery = \"王朝葡萄酒厂\" "
  },
  {
    "NatSQL": "select count ( appellations.* )  from appellations  where  appellations.County = \"通化\" "
  },
  {
    "NatSQL": "select count ( appellations.* )  from appellations  where  appellations.County = \"通化\" "
  },
  {
    "NatSQL": "select avg ( wine.Price )  from appellations  where  appellations.County = \"张掖\" "
  },
  {
    "NatSQL": "select avg ( wine.Price )  from appellations  where  appellations.County = \"张掖\" "
  },
  {
    "NatSQL": "select wine.Name , wine.Score from grapes  where  grapes.Color = \"白\" "
  },
  {
    "NatSQL": "select wine.Name , wine.Score from grapes  where  grapes.Color = \"白\" "
  },
  {
    "NatSQL": "select max ( wine.Price )  from appellations  where  appellations.Area = \"东南\"  and  wine.Year < 2005 "
  },
  {
    "NatSQL": "select max ( wine.Price )  from appellations  where  appellations.Area = \"东南\"  and  wine.Year < 2005 "
  },
  {
    "NatSQL": "select  distinct grapes.Grape from grapes  where  grapes.Color = \"白\"  and  wine.Score > 90 "
  },
  {
    "NatSQL": "select  distinct grapes.Grape from grapes  where  grapes.Color = \"白\"  and  wine.Score > 90 "
  },
  {
    "NatSQL": "select wine.Name from grapes  where  grapes.Color = \"红\"  and  wine.Price > 50 "
  },
  {
    "NatSQL": "select wine.Name from grapes  where  grapes.Color = \"红\"  and  wine.Price > 50 "
  },
  {
    "NatSQL": "select wine.Name from appellations  where  appellations.County = \"宁夏\"  and  wine.Price < 50 "
  },
  {
    "NatSQL": "select wine.Name from appellations  where  appellations.County = \"宁夏\"  and  wine.Price < 50 "
  },
  {
    "NatSQL": "select count ( wine.* )  , wine.Grape from wine  group by wine.Grape "
  },
  {
    "NatSQL": "select count ( wine.* )  , wine.Grape from wine  group by wine.Grape "
  },
  {
    "NatSQL": "select avg ( wine.Price )  , wine.Year from wine  group by wine.Year "
  },
  {
    "NatSQL": "select avg ( wine.Price )  , wine.Year from wine  group by wine.Year "
  },
  {
    "NatSQL": "select  distinct wine.Name from wine  where  @.@ > min ( wine.Price )   and  wine.Winery = \"长城葡萄酒厂\" "
  },
  {
    "NatSQL": "select  distinct wine.Name from wine  where  @.@ > min ( wine.Price )   and  wine.Winery = \"长城葡萄酒厂\" "
  },
  {
    "NatSQL": "select  distinct wine.Name from wine  order by wine.Name asc"
  },
  {
    "NatSQL": "select  distinct wine.Name from wine  order by wine.Name asc"
  },
  {
    "NatSQL": "select  distinct wine.Name from wine  order by wine.Price asc"
  },
  {
    "NatSQL": "select  distinct wine.Name from wine  order by wine.Price asc"
  },
  {
    "NatSQL": "select appellations.Area from appellations  where  wine.Year < 2010  group by wine.Appelation  order by count ( appellations.* )  desc limit 1"
  },
  {
    "NatSQL": "select appellations.Area from appellations  where  wine.Year < 2010  group by wine.Appelation  order by count ( appellations.* )  desc limit 1"
  },
  {
    "NatSQL": "select grapes.Color from grapes  group by wine.Grape  order by avg ( wine.Price )  desc limit 1"
  },
  {
    "NatSQL": "select grapes.Color from grapes  group by wine.Grape  order by avg ( wine.Price )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct wine.Name from wine  where  wine.Year < 2000  or  wine.Year > 2010 "
  },
  {
    "NatSQL": "select  distinct wine.Name from wine  where  wine.Year < 2000  or  wine.Year > 2010 "
  },
  {
    "NatSQL": "select  distinct wine.Winery from wine  where  wine.Price between 50 and 100 "
  },
  {
    "NatSQL": "select  distinct wine.Winery from wine  where  wine.Price between 50 and 100 "
  },
  {
    "NatSQL": "select avg ( wine.Price )  , avg ( wine.Cases )  from wine  where  wine.Year = 2009  and  wine.Grape = \"仙粉黛\" "
  },
  {
    "NatSQL": "select avg ( wine.Price )  , avg ( wine.Cases )  from wine  where  wine.Year = 2009  and  wine.Grape = \"仙粉黛\" "
  },
  {
    "NatSQL": "select max ( wine.Price )  , max ( wine.Score )  from wine  where  wine.Appelation = \"张家口\" "
  },
  {
    "NatSQL": "select max ( wine.Price )  , max ( wine.Score )  from wine  where  wine.Appelation = \"张家口\" "
  },
  {
    "NatSQL": "select max ( wine.Price )  , max ( wine.Score )  , wine.Year from wine  group by wine.Year "
  },
  {
    "NatSQL": "select max ( wine.Price )  , max ( wine.Score )  , wine.Year from wine  group by wine.Year "
  },
  {
    "NatSQL": "select avg ( wine.Price )  , avg ( wine.Score )  , wine.Appelation from wine  group by wine.Appelation "
  },
  {
    "NatSQL": "select avg ( wine.Price )  , avg ( wine.Score )  , wine.Appelation from wine  group by wine.Appelation "
  },
  {
    "NatSQL": "select wine.Winery from wine  where  count ( wine.* )  >= 4  group by wine.Winery "
  },
  {
    "NatSQL": "select wine.Winery from wine  where  count ( wine.* )  >= 4  group by wine.Winery "
  },
  {
    "NatSQL": "select appellations.County from appellations  where  count ( wine.* )  <= 3  group by wine.Appelation "
  },
  {
    "NatSQL": "select appellations.County from appellations  where  count ( wine.* )  <= 3  group by wine.Appelation "
  },
  {
    "NatSQL": "select wine.Name from wine  where  @.@ < min ( wine.Year )   and  wine.Winery = \"张裕葡萄酒厂\" "
  },
  {
    "NatSQL": "select wine.Name from wine  where  @.@ < min ( wine.Year )   and  wine.Winery = \"张裕葡萄酒厂\" "
  },
  {
    "NatSQL": "select wine.Name from wine  where  @.@ > max ( wine.Price )   and  wine.Year = 2006 "
  },
  {
    "NatSQL": "select wine.Name from wine  where  @.@ > max ( wine.Price )   and  wine.Year = 2006 "
  },
  {
    "NatSQL": "select wine.Winery from grapes  where  grapes.Color = \"白\"  group by wine.Winery  order by count ( grapes.* )  desc limit 3"
  },
  {
    "NatSQL": "select wine.Winery from grapes  where  grapes.Color = \"白\"  group by wine.Winery  order by count ( grapes.* )  desc limit 3"
  },
  {
    "NatSQL": "select wine.Grape , wine.Winery , wine.Year from wine  where  wine.Price > 100  order by wine.Year asc"
  },
  {
    "NatSQL": "select wine.Grape , wine.Winery , wine.Year from wine  where  wine.Price > 100  order by wine.Year asc"
  },
  {
    "NatSQL": "select wine.Grape , wine.Appelation , wine.Name from wine  where  wine.Score > 93  order by wine.Name asc"
  },
  {
    "NatSQL": "select wine.Grape , wine.Appelation , wine.Name from wine  where  wine.Score > 93  order by wine.Name asc"
  },
  {
    "NatSQL": "select wine.Appelation from wine  where  wine.Year > 2008  except_  appellations.Area = \"西北部\" "
  },
  {
    "NatSQL": "select wine.Appelation from wine  where  wine.Year > 2008  except_  appellations.Area = \"西北部\" "
  },
  {
    "NatSQL": "select avg ( wine.Price )  from wine  where  @.@ not in appellations.Appelation  and  @.@ join wine.*  and  appellations.County = \"烟台\" "
  },
  {
    "NatSQL": "select avg ( wine.Price )  from wine  where  @.@ not in appellations.Appelation  and  @.@ join wine.*  and  appellations.County = \"烟台\" "
  },
  {
    "NatSQL": "select appellations.County from appellations  where  wine.Score > 90  group by appellations.County  order by count ( appellations.* )  desc limit 1"
  },
  {
    "NatSQL": "select appellations.County from appellations  where  wine.Score > 90  group by appellations.County  order by count ( appellations.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( station.* )  from station "
  },
  {
    "NatSQL": "select station.Name , station.Location , station.Number_of_Platforms from station "
  },
  {
    "NatSQL": "select  distinct station.Location from station "
  },
  {
    "NatSQL": "select station.Name , station.Total_Passengers from station  where  station.Location != \"广州\" "
  },
  {
    "NatSQL": "select station.Name , station.Main_Services from station  order by station.Total_Passengers desc limit 3"
  },
  {
    "NatSQL": "select avg ( station.Total_Passengers )  , max ( station.Total_Passengers )  from station  where  station.Location = \"广州\"  or  station.Location = \"深圳\" "
  },
  {
    "NatSQL": "select station.Location , sum ( station.Number_of_Platforms )  , sum ( station.Total_Passengers )  from station  group by station.Location "
  },
  {
    "NatSQL": "select  distinct station.Location from station  where  station.Number_of_Platforms >= 15  and  station.Total_Passengers > 25 "
  },
  {
    "NatSQL": "select station.Location from station  where  except_  @.@ is station.*  and  station.Number_of_Platforms >= 15 "
  },
  {
    "NatSQL": "select station.Location from station  group by station.Location  order by count ( station.* )  desc limit 1"
  },
  {
    "NatSQL": "select train.Name , train.Time , train.Service from train "
  },
  {
    "NatSQL": "select count ( train.* )  from train "
  },
  {
    "NatSQL": "select train.Name , train.Service from train  order by train.Time asc"
  },
  {
    "NatSQL": "select station.Name , count ( train_station.* )  from train_station  group by train_station.Station_ID "
  },
  {
    "NatSQL": "select station.Name , train.Name from train_station "
  },
  {
    "NatSQL": "select train.Name , train.Time from train_station  where  station.Location = \"广州\"  order by train.Time desc"
  },
  {
    "NatSQL": "select station.Name from train_station  group by train_station.Station_ID  order by count ( train_station.* )  desc limit 1"
  },
  {
    "NatSQL": "select station.Name from train_station  where  count ( train_station.* )  >= 2  group by train_station.Station_ID "
  },
  {
    "NatSQL": "select station.Location from station  where  count ( station.* )  = 1  group by station.Location "
  },
  {
    "NatSQL": "select station.Name from station  where  @.@ not in train_station.* "
  },
  {
    "NatSQL": "select station.Name from train_station  where  train.Name = \"和谐号\"  and  train.Name = \"复兴号\" "
  },
  {
    "NatSQL": "select train.Name from train_station  where  @.@ not in station.Station_ID  and  station.Location = \"广州\" "
  },
  {
    "NatSQL": "select station.Name , station.Location from station  order by station.Annual_entry_exit , station.Annual_interchanges asc"
  },
  {
    "NatSQL": "select vehicles.vehicle_id from vehicles "
  },
  {
    "NatSQL": "select vehicles.vehicle_id from vehicles "
  },
  {
    "NatSQL": "select count ( vehicles.* )  from vehicles "
  },
  {
    "NatSQL": "select count ( vehicles.* )  from vehicles "
  },
  {
    "NatSQL": "select vehicles.vehicle_details from vehicles  where  vehicles.vehicle_id = 1 "
  },
  {
    "NatSQL": "select vehicles.vehicle_details from vehicles  where  vehicles.vehicle_id = 1 "
  },
  {
    "NatSQL": "select staff.first_name , staff.middle_name , staff.last_name from staff "
  },
  {
    "NatSQL": "select staff.first_name , staff.middle_name , staff.last_name from staff "
  },
  {
    "NatSQL": "select staff.date_of_birth from staff  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select staff.date_of_birth from staff  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select staff.date_joined_staff from staff  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select staff.date_joined_staff from staff  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select staff.date_left_staff from staff  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select staff.date_left_staff from staff  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select count ( staff.* )  from staff  where  staff.first_name = \"Ludie\" "
  },
  {
    "NatSQL": "select count ( staff.* )  from staff  where  staff.first_name = \"Ludie\" "
  },
  {
    "NatSQL": "select staff.nickname from staff  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select staff.nickname from staff  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select count ( staff.* )  from staff "
  },
  {
    "NatSQL": "select count ( staff.* )  from staff "
  },
  {
    "NatSQL": "select addresses.city from addresses  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select addresses.city from addresses  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select addresses.country , addresses.state_province_county from addresses  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select addresses.country , addresses.state_province_county from addresses  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select sum ( lessons.lesson_time )  from lessons  where  customers.first_name = \"文祥\"  and  customers.last_name = \"赵\" "
  },
  {
    "NatSQL": "select sum ( lessons.lesson_time )  from lessons  where  customers.first_name = \"文祥\"  and  customers.last_name = \"赵\" "
  },
  {
    "NatSQL": "select addresses.zip_postcode from addresses  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select addresses.zip_postcode from addresses  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select count ( addresses.* )  from addresses  where  addresses.state_province_county = \"海南\" "
  },
  {
    "NatSQL": "select count ( addresses.* )  from addresses  where  addresses.state_province_county = \"海南\" "
  },
  {
    "NatSQL": "select staff.first_name , staff.last_name from addresses  where  addresses.city = \"青岛\" "
  },
  {
    "NatSQL": "select staff.first_name , staff.last_name from addresses  where  addresses.city = \"青岛\" "
  },
  {
    "NatSQL": "select addresses.city , count ( staff.* )  from addresses  group by addresses.city  order by count ( staff.* )  desc limit 1"
  },
  {
    "NatSQL": "select addresses.city , count ( staff.* )  from addresses  group by addresses.city  order by count ( staff.* )  desc limit 1"
  },
  {
    "NatSQL": "select addresses.state_province_county from addresses  where  count ( staff.* )  between 2 and 4  group by addresses.state_province_county "
  },
  {
    "NatSQL": "select addresses.state_province_county from addresses  where  count ( staff.* )  between 2 and 4  group by addresses.state_province_county "
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customers "
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customers "
  },
  {
    "NatSQL": "select customers.email_address , customers.date_of_birth from customers  where  customers.first_name = \"诚\" "
  },
  {
    "NatSQL": "select customers.email_address , customers.date_of_birth from customers  where  customers.first_name = \"诚\" "
  },
  {
    "NatSQL": "select customers.phone_number , customers.email_address from customers  where  customers.amount_outstanding > 2000 "
  },
  {
    "NatSQL": "select customers.phone_number , customers.email_address from customers  where  customers.amount_outstanding > 2000 "
  },
  {
    "NatSQL": "select customers.customer_status_code , customers.cell_mobile_phone_number , customers.email_address from customers  where  customers.first_name = \"彬斌\"  or  customers.last_name = \"齐\" "
  },
  {
    "NatSQL": "select customers.customer_status_code , customers.cell_mobile_phone_number , customers.email_address from customers  where  customers.first_name = \"彬斌\"  or  customers.last_name = \"齐\" "
  },
  {
    "NatSQL": "select customers.date_of_birth from customers  where  customers.customer_status_code = \"优秀顾客\" "
  },
  {
    "NatSQL": "select customers.date_of_birth from customers  where  customers.customer_status_code = \"优秀顾客\" "
  },
  {
    "NatSQL": "select customers.date_became_customer from customers  where  customers.first_name = \"诚\"  and  customers.last_name = \"钟\" "
  },
  {
    "NatSQL": "select customers.date_became_customer from customers  where  customers.first_name = \"诚\"  and  customers.last_name = \"钟\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers "
  },
  {
    "NatSQL": "select customers.customer_status_code , count ( customers.* )  from customers  group by customers.customer_status_code "
  },
  {
    "NatSQL": "select customers.customer_status_code , count ( customers.* )  from customers  group by customers.customer_status_code "
  },
  {
    "NatSQL": "select customers.customer_status_code from customers  group by customers.customer_status_code  order by count ( customers.* )  asc limit 1"
  },
  {
    "NatSQL": "select customers.customer_status_code from customers  group by customers.customer_status_code  order by count ( customers.* )  asc limit 1"
  },
  {
    "NatSQL": "select count ( lessons.* )  from lessons  where  customers.first_name = \"文祥\"  and  customers.last_name = \"赵\"  and  lessons.lesson_status_code = \"完成\" "
  },
  {
    "NatSQL": "select count ( lessons.* )  from lessons  where  customers.first_name = \"文祥\"  and  customers.last_name = \"赵\"  and  lessons.lesson_status_code = \"完成\" "
  },
  {
    "NatSQL": "select max ( customers.amount_outstanding )  , min ( customers.amount_outstanding )  , avg ( customers.amount_outstanding )  from customers "
  },
  {
    "NatSQL": "select max ( customers.amount_outstanding )  , min ( customers.amount_outstanding )  , avg ( customers.amount_outstanding )  from customers "
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customers  where  customers.amount_outstanding between 1000 and 3000 "
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customers  where  customers.amount_outstanding between 1000 and 3000 "
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customers  where  addresses.city = \"福州\" "
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customers  where  addresses.city = \"福州\" "
  },
  {
    "NatSQL": "select addresses.country from customers  where  customers.first_name = \"诚\"  and  customers.last_name = \"钟\" "
  },
  {
    "NatSQL": "select addresses.country from customers  where  customers.first_name = \"诚\"  and  customers.last_name = \"钟\" "
  },
  {
    "NatSQL": "select addresses.zip_postcode from customers  where  customers.first_name = \"诚\"  and  customers.last_name = \"钟\" "
  },
  {
    "NatSQL": "select addresses.zip_postcode from customers  where  customers.first_name = \"诚\"  and  customers.last_name = \"钟\" "
  },
  {
    "NatSQL": "select addresses.city from customers  group by addresses.city  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select addresses.city from customers  group by addresses.city  order by count ( customers.* )  desc limit 1"
  },
  {
    "NatSQL": "select sum ( customer_payments.amount_payment )  from customer_payments  where  customers.first_name = \"诚\"  and  customers.last_name = \"钟\" "
  },
  {
    "NatSQL": "select sum ( customer_payments.amount_payment )  from customer_payments  where  customers.first_name = \"诚\"  and  customers.last_name = \"钟\" "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  @.@ not in customer_payments.* "
  },
  {
    "NatSQL": "select count ( customers.* )  from customers  where  @.@ not in customer_payments.* "
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customer_payments  where  count ( customer_payments.* )  > 2  group by customer_payments.customer_id "
  },
  {
    "NatSQL": "select customers.first_name , customers.last_name from customer_payments  where  count ( customer_payments.* )  > 2  group by customer_payments.customer_id "
  },
  {
    "NatSQL": "select customer_payments.payment_method_code , count ( customer_payments.* )  from customer_payments  group by customer_payments.payment_method_code "
  },
  {
    "NatSQL": "select customer_payments.payment_method_code , count ( customer_payments.* )  from customer_payments  group by customer_payments.payment_method_code "
  },
  {
    "NatSQL": "select count ( lessons.* )  from lessons  where  lessons.lesson_status_code = \"取消\" "
  },
  {
    "NatSQL": "select count ( lessons.* )  from lessons  where  lessons.lesson_status_code = \"取消\" "
  },
  {
    "NatSQL": "select lessons.lesson_id from lessons  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\"  and  staff.nickname like \"%子%\" "
  },
  {
    "NatSQL": "select lessons.lesson_id from lessons  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\"  and  staff.nickname like \"%子%\" "
  },
  {
    "NatSQL": "select count ( lessons.* )  from lessons  where  staff.first_name like \"%安%\" "
  },
  {
    "NatSQL": "select count ( lessons.* )  from lessons  where  staff.first_name like \"%安%\" "
  },
  {
    "NatSQL": "select sum ( lessons.lesson_time )  from lessons  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select sum ( lessons.lesson_time )  from lessons  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select avg ( lessons.price )  from lessons  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select avg ( lessons.price )  from lessons  where  staff.first_name = \"子君\"  and  staff.last_name = \"温\" "
  },
  {
    "NatSQL": "select count ( lessons.* )  from lessons  where  customers.first_name = \"瑞\" "
  },
  {
    "NatSQL": "select count ( lessons.* )  from lessons  where  customers.first_name = \"瑞\" "
  },
  {
    "NatSQL": "select customers.last_name from customers  where  intersect_  @.@ is staff.* "
  },
  {
    "NatSQL": "select customers.last_name from customers  where  intersect_  @.@ is staff.* "
  },
  {
    "NatSQL": "select staff.first_name from staff  where  except_  @.@ is lessons.* "
  },
  {
    "NatSQL": "select staff.first_name from staff  where  except_  @.@ is lessons.* "
  },
  {
    "NatSQL": "select vehicles.vehicle_id , vehicles.vehicle_details from vehicles  group by vehicles.vehicle_id  order by count ( lessons.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( faculty.* )  from faculty "
  },
  {
    "NatSQL": "select count ( faculty.* )  from faculty "
  },
  {
    "NatSQL": "select  distinct faculty.Rank from faculty "
  },
  {
    "NatSQL": "select  distinct faculty.Rank from faculty "
  },
  {
    "NatSQL": "select  distinct faculty.Building from faculty "
  },
  {
    "NatSQL": "select  distinct faculty.Building from faculty "
  },
  {
    "NatSQL": "select faculty.Rank , faculty.Fname , faculty.Lname from faculty "
  },
  {
    "NatSQL": "select faculty.Rank , faculty.Fname , faculty.Lname from faculty "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname , faculty.Phone from faculty  where  faculty.Sex = \"女\" "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname , faculty.Phone from faculty  where  faculty.Sex = \"女\" "
  },
  {
    "NatSQL": "select faculty.FacID from faculty  where  faculty.Sex = \"男\" "
  },
  {
    "NatSQL": "select faculty.FacID from faculty  where  faculty.Sex = \"男\" "
  },
  {
    "NatSQL": "select count ( faculty.* )  from faculty  where  faculty.Sex = \"女\"  and  faculty.Rank = \"教授\" "
  },
  {
    "NatSQL": "select count ( faculty.* )  from faculty  where  faculty.Sex = \"女\"  and  faculty.Rank = \"教授\" "
  },
  {
    "NatSQL": "select faculty.Phone , faculty.Room , faculty.Building from faculty  where  faculty.Fname = \"睿\"  and  faculty.Lname = \"王\" "
  },
  {
    "NatSQL": "select faculty.Phone , faculty.Room , faculty.Building from faculty  where  faculty.Fname = \"睿\"  and  faculty.Lname = \"王\" "
  },
  {
    "NatSQL": "select count ( faculty.* )  from faculty  where  faculty.Rank = \"教授\"  and  faculty.Building = \"逸夫\" "
  },
  {
    "NatSQL": "select count ( faculty.* )  from faculty  where  faculty.Rank = \"教授\"  and  faculty.Building = \"逸夫\" "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  where  faculty.Rank = \"教员\" "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  where  faculty.Rank = \"教员\" "
  },
  {
    "NatSQL": "select faculty.Building , count ( faculty.* )  from faculty  group by faculty.Building "
  },
  {
    "NatSQL": "select faculty.Building , count ( faculty.* )  from faculty  group by faculty.Building "
  },
  {
    "NatSQL": "select faculty.Building from faculty  group by faculty.Building  order by count ( faculty.* )  desc limit 1"
  },
  {
    "NatSQL": "select faculty.Building from faculty  group by faculty.Building  order by count ( faculty.* )  desc limit 1"
  },
  {
    "NatSQL": "select faculty.Building from faculty  where  faculty.Rank = \"教授\"  and  count ( faculty.* )  >= 10  group by faculty.Building "
  },
  {
    "NatSQL": "select faculty.Building from faculty  where  faculty.Rank = \"教授\"  and  count ( faculty.* )  >= 10  group by faculty.Building "
  },
  {
    "NatSQL": "select faculty.Rank , count ( faculty.* )  from faculty  group by faculty.Rank "
  },
  {
    "NatSQL": "select faculty.Rank , count ( faculty.* )  from faculty  group by faculty.Rank "
  },
  {
    "NatSQL": "select faculty.Rank , faculty.Sex , count ( faculty.* )  from faculty  group by faculty.Rank , faculty.Sex "
  },
  {
    "NatSQL": "select faculty.Rank , faculty.Sex , count ( faculty.* )  from faculty  group by faculty.Rank , faculty.Sex "
  },
  {
    "NatSQL": "select faculty.Rank from faculty  group by faculty.Rank  order by count ( faculty.* )  asc limit 1"
  },
  {
    "NatSQL": "select faculty.Rank from faculty  group by faculty.Rank  order by count ( faculty.* )  asc limit 1"
  },
  {
    "NatSQL": "select faculty.Sex , count ( faculty.* )  from faculty  where  faculty.Rank = \"助理教授\"  group by faculty.Sex "
  },
  {
    "NatSQL": "select faculty.Sex , count ( faculty.* )  from faculty  where  faculty.Rank = \"助理教授\"  group by faculty.Sex "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  where  student.Fname = \"晴\"  and  student.LName = \"张\" "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  where  student.Fname = \"晴\"  and  student.LName = \"张\" "
  },
  {
    "NatSQL": "select student.StuID from faculty  where  faculty.Rank = \"Professor\" "
  },
  {
    "NatSQL": "select student.StuID from faculty  where  faculty.Rank = \"Professor\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from faculty  where  faculty.Fname = \"斌\"  and  faculty.Lname = \"李\" "
  },
  {
    "NatSQL": "select student.Fname , student.LName from faculty  where  faculty.Fname = \"斌\"  and  faculty.Lname = \"李\" "
  },
  {
    "NatSQL": "select faculty.FacID , count ( student.* )  from faculty  group by faculty.FacID "
  },
  {
    "NatSQL": "select faculty.FacID , count ( student.* )  from faculty  group by faculty.FacID "
  },
  {
    "NatSQL": "select faculty.Rank , count ( student.* )  from faculty  group by faculty.Rank "
  },
  {
    "NatSQL": "select faculty.Rank , count ( student.* )  from faculty  group by faculty.Rank "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  group by faculty.FacID  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  group by faculty.FacID  order by count ( student.* )  desc limit 1"
  },
  {
    "NatSQL": "select faculty.FacID from faculty  where  count ( student.* )  >= 2  group by faculty.FacID "
  },
  {
    "NatSQL": "select faculty.FacID from faculty  where  count ( student.* )  >= 2  group by faculty.FacID "
  },
  {
    "NatSQL": "select faculty.FacID from faculty  where  except_  @.@ is student.* "
  },
  {
    "NatSQL": "select faculty.FacID from faculty  where  except_  @.@ is student.* "
  },
  {
    "NatSQL": "select activity.activity_name from activity "
  },
  {
    "NatSQL": "select activity.activity_name from activity "
  },
  {
    "NatSQL": "select count ( activity.* )  from activity "
  },
  {
    "NatSQL": "select count ( activity.* )  from activity "
  },
  {
    "NatSQL": "select count (  distinct faculty_participates_in.FacID )  from faculty_participates_in "
  },
  {
    "NatSQL": "select count (  distinct faculty_participates_in.FacID )  from faculty_participates_in "
  },
  {
    "NatSQL": "select faculty.FacID from faculty  where  except_  @.@ is faculty_participates_in.* "
  },
  {
    "NatSQL": "select faculty.FacID from faculty  where  except_  @.@ is faculty_participates_in.* "
  },
  {
    "NatSQL": "select faculty_participates_in.FacID from faculty_participates_in  where  intersect_  @.@ is student.* "
  },
  {
    "NatSQL": "select faculty_participates_in.FacID from faculty_participates_in  where  intersect_  @.@ is student.* "
  },
  {
    "NatSQL": "select count ( faculty_participates_in.* )  from faculty  where  faculty.Fname = \"文杰\"  and  faculty.Lname = \"马\" "
  },
  {
    "NatSQL": "select count ( faculty_participates_in.* )  from faculty  where  faculty.Fname = \"文杰\"  and  faculty.Lname = \"马\" "
  },
  {
    "NatSQL": "select activity.activity_name from faculty  where  faculty.Fname = \"文杰\"  and  faculty.Lname = \"马\" "
  },
  {
    "NatSQL": "select activity.activity_name from faculty  where  faculty.Fname = \"文杰\"  and  faculty.Lname = \"马\" "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname , count ( faculty_participates_in.* )  , faculty.FacID from faculty  group by faculty.FacID "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname , count ( faculty_participates_in.* )  , faculty.FacID from faculty  group by faculty.FacID "
  },
  {
    "NatSQL": "select activity.activity_name , count ( faculty_participates_in.* )  from activity  group by activity.actid "
  },
  {
    "NatSQL": "select activity.activity_name , count ( faculty_participates_in.* )  from activity  group by activity.actid "
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  group by faculty.FacID  order by count ( faculty_participates_in.* )  desc limit 1"
  },
  {
    "NatSQL": "select faculty.Fname , faculty.Lname from faculty  group by faculty.FacID  order by count ( faculty_participates_in.* )  desc limit 1"
  },
  {
    "NatSQL": "select activity.activity_name from activity  group by activity.actid  order by count ( faculty_participates_in.* )  desc limit 1"
  },
  {
    "NatSQL": "select activity.activity_name from activity  group by activity.actid  order by count ( faculty_participates_in.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.StuID from student  where  except_  @.@ is participates_in.* "
  },
  {
    "NatSQL": "select student.StuID from student  where  except_  @.@ is participates_in.* "
  },
  {
    "NatSQL": "select participates_in.stuid from participates_in  where  intersect_  @.@ is student.*  and  student.Age < 20 "
  },
  {
    "NatSQL": "select participates_in.stuid from participates_in  where  intersect_  @.@ is student.*  and  student.Age < 20 "
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  group by student.StuID  order by count ( participates_in.* )  desc limit 1"
  },
  {
    "NatSQL": "select student.Fname , student.LName from student  group by student.StuID  order by count ( participates_in.* )  desc limit 1"
  },
  {
    "NatSQL": "select activity.activity_name from activity  group by activity.actid  order by count ( participates_in.* )  desc limit 1"
  },
  {
    "NatSQL": "select activity.activity_name from activity  group by activity.actid  order by count ( participates_in.* )  desc limit 1"
  },
  {
    "NatSQL": "select  distinct faculty.Lname from faculty  where  activity.activity_name = \"独木舟\"  or  activity.activity_name = \"皮划艇\" "
  },
  {
    "NatSQL": "select  distinct faculty.Lname from faculty  where  activity.activity_name = \"独木舟\"  or  activity.activity_name = \"皮划艇\" "
  },
  {
    "NatSQL": "select faculty.Lname from faculty  where  faculty.Rank = \"Professor\"  and  activity.activity_name != \"独木舟\"  or  activity.activity_name = \"皮划艇\" "
  },
  {
    "NatSQL": "select faculty.Lname from faculty  where  faculty.Rank = \"Professor\"  and  activity.activity_name != \"独木舟\"  or  activity.activity_name = \"皮划艇\" "
  },
  {
    "NatSQL": "select faculty.Lname from faculty  where  activity.activity_name = \"独木舟\"  and  activity.activity_name = \"皮划艇\" "
  },
  {
    "NatSQL": "select faculty.Lname from faculty  where  activity.activity_name = \"独木舟\"  and  activity.activity_name = \"皮划艇\" "
  },
  {
    "NatSQL": "select participates_in.stuid from participates_in  where  activity.activity_name = \"独木舟\"  and  activity.activity_name = \"皮划艇\" "
  },
  {
    "NatSQL": "select participates_in.stuid from participates_in  where  activity.activity_name = \"独木舟\"  and  activity.activity_name = \"皮划艇\" "
  },
  {
    "NatSQL": "select airports.name from airports  where  airports.city = \"沈阳\" "
  },
  {
    "NatSQL": "select airports.name from airports  where  airports.city = \"沈阳\" "
  },
  {
    "NatSQL": "select airports.name , airports.city , airports.country , airports.elevation from airports  where  airports.city = \"广州\" "
  },
  {
    "NatSQL": "select airports.name , airports.city , airports.country , airports.elevation from airports  where  airports.city = \"广州\" "
  },
  {
    "NatSQL": "select count ( airlines.* )  from airlines "
  },
  {
    "NatSQL": "select count ( airlines.* )  from airlines "
  },
  {
    "NatSQL": "select count ( airlines.* )  from airlines  where  airlines.country = \"俄罗斯\" "
  },
  {
    "NatSQL": "select count ( airlines.* )  from airlines  where  airlines.country = \"俄罗斯\" "
  },
  {
    "NatSQL": "select max ( airports.elevation )  from airports  where  airports.country = \"冰岛\" "
  },
  {
    "NatSQL": "select max ( airports.elevation )  from airports  where  airports.country = \"冰岛\" "
  },
  {
    "NatSQL": "select airports.name from airports  where  airports.country = \"古巴\"  or  airports.country = \"阿根廷\" "
  },
  {
    "NatSQL": "select airports.name from airports  where  airports.country = \"古巴\"  or  airports.country = \"阿根廷\" "
  },
  {
    "NatSQL": "select airlines.country from airlines  where  airlines.name like \"%东方%\" "
  },
  {
    "NatSQL": "select airlines.country from airlines  where  airlines.name like \"%东方%\" "
  },
  {
    "NatSQL": "select airports.name from airports  where  airports.elevation between -50 and 50 "
  },
  {
    "NatSQL": "select airports.name from airports  where  airports.elevation between -50 and 50 "
  },
  {
    "NatSQL": "select airports.country from airports  order by airports.elevation desc limit 1"
  },
  {
    "NatSQL": "select airports.country from airports  order by airports.elevation desc limit 1"
  },
  {
    "NatSQL": "select count ( airports.* )  from airports  where  airports.name like \"%国际%\" "
  },
  {
    "NatSQL": "select count ( airports.* )  from airports  where  airports.name like \"%国际%\" "
  },
  {
    "NatSQL": "select count (  distinct airports.city )  from airports  where  airports.country = \"格陵兰岛\" "
  },
  {
    "NatSQL": "select count (  distinct airports.city )  from airports  where  airports.country = \"格陵兰岛\" "
  },
  {
    "NatSQL": "select count ( routes.* )  from airlines  where  airlines.name = \"山东航空公司\" "
  },
  {
    "NatSQL": "select count ( routes.* )  from airlines  where  airlines.name = \"山东航空公司\" "
  },
  {
    "NatSQL": "select count ( routes.* )  from airports  where  airports.country = \"加拿大\" "
  },
  {
    "NatSQL": "select count ( routes.* )  from airports  where  airports.country = \"加拿大\" "
  },
  {
    "NatSQL": "select airports.name , airports.city , airports.country from airports  order by airports.elevation asc limit 1"
  },
  {
    "NatSQL": "select airports.name , airports.city , airports.country from airports  order by airports.elevation asc limit 1"
  },
  {
    "NatSQL": "select airports.name , airports.city , airports.country from airports  order by airports.elevation desc limit 1"
  },
  {
    "NatSQL": "select airports.name , airports.city , airports.country from airports  order by airports.elevation desc limit 1"
  },
  {
    "NatSQL": "select airports.name , airports.city , routes.dst_apid from airports  group by routes.dst_apid  order by count ( routes.* )  desc limit 1"
  },
  {
    "NatSQL": "select airports.name , airports.city , routes.dst_apid from airports  group by routes.dst_apid  order by count ( routes.* )  desc limit 1"
  },
  {
    "NatSQL": "select airlines.name , airlines.alid from airlines  group by routes.alid  order by count ( routes.* )  desc limit 10"
  },
  {
    "NatSQL": "select airlines.name , airlines.alid from airlines  group by routes.alid  order by count ( routes.* )  desc limit 10"
  },
  {
    "NatSQL": "select airports.name , airports.city , routes.src_apid from airports  group by routes.src_apid  order by count ( airports.* )  desc limit 1"
  },
  {
    "NatSQL": "select airports.name , airports.city , routes.src_apid from airports  group by routes.src_apid  order by count ( airports.* )  desc limit 1"
  },
  {
    "NatSQL": "select count (  distinct routes.dst_apid )  from airlines  where  airlines.name = \"山东航空公司\" "
  },
  {
    "NatSQL": "select count (  distinct routes.dst_apid )  from airlines  where  airlines.name = \"山东航空公司\" "
  },
  {
    "NatSQL": "select airlines.country from airlines  group by airlines.country  order by count ( airlines.* )  desc limit 1"
  },
  {
    "NatSQL": "select airlines.country from airlines  group by airlines.country  order by count ( airlines.* )  desc limit 1"
  },
  {
    "NatSQL": "select airlines.country from airlines  where  airlines.active = \"Y\"  group by airlines.country  order by count ( airlines.* )  desc limit 1"
  },
  {
    "NatSQL": "select airlines.country from airlines  where  airlines.active = \"Y\"  group by airlines.country  order by count ( airlines.* )  desc limit 1"
  },
  {
    "NatSQL": "select airlines.country , count ( airlines.* )  from airlines  group by airlines.country  order by count ( airlines.* )  desc"
  },
  {
    "NatSQL": "select airlines.country , count ( airlines.* )  from airlines  group by airlines.country  order by count ( airlines.* )  desc"
  },
  {
    "NatSQL": "select count ( airports.* )  , airports.country from airports  group by airports.country  order by count ( airports.* )  desc"
  },
  {
    "NatSQL": "select count ( airports.* )  , airports.country from airports  group by airports.country  order by count ( airports.* )  desc"
  },
  {
    "NatSQL": "select count ( airports.* )  , airports.city from airports  where  airports.country = \"中国\"  group by airports.city  order by count ( airports.* )  desc"
  },
  {
    "NatSQL": "select count ( airports.* )  , airports.city from airports  where  airports.country = \"中国\"  group by airports.city  order by count ( airports.* )  desc"
  },
  {
    "NatSQL": "select airports.city from airports  where  airports.country = \"中国\"  and  count ( airports.* )  > 3  group by airports.city "
  },
  {
    "NatSQL": "select airports.city from airports  where  airports.country = \"中国\"  and  count ( airports.* )  > 3  group by airports.city "
  },
  {
    "NatSQL": "select count ( airports.* )  from airports  where  count ( airports.* )  > 3 "
  },
  {
    "NatSQL": "select count ( airports.* )  from airports  where  count ( airports.* )  > 3 "
  },
  {
    "NatSQL": "select airports.city , count ( airports.* )  from airports  where  count ( airports.* )  > 1  group by airports.city "
  },
  {
    "NatSQL": "select airports.city , count ( airports.* )  from airports  where  count ( airports.* )  > 1  group by airports.city "
  },
  {
    "NatSQL": "select airports.city from airports  where  count ( airports.* )  > 2  group by airports.city  order by count ( airports.* )  asc"
  },
  {
    "NatSQL": "select airports.city from airports  where  count ( airports.* )  > 2  group by airports.city  order by count ( airports.* )  asc"
  },
  {
    "NatSQL": "select count ( routes.* )  , airports.name from airports  group by airports.name "
  },
  {
    "NatSQL": "select count ( routes.* )  , airports.name from airports  group by airports.name "
  },
  {
    "NatSQL": "select count ( routes.* )  , airports.name from airports  group by airports.name  order by count ( routes.* )  desc"
  },
  {
    "NatSQL": "select count ( routes.* )  , airports.name from airports  group by airports.name  order by count ( routes.* )  desc"
  },
  {
    "NatSQL": "select avg ( airports.elevation )  , airports.country from airports  group by airports.country "
  },
  {
    "NatSQL": "select avg ( airports.elevation )  , airports.country from airports  group by airports.country "
  },
  {
    "NatSQL": "select airports.city from airports  where  count ( airports.* )  = 2  group by airports.city "
  },
  {
    "NatSQL": "select airports.city from airports  where  count ( airports.* )  = 2  group by airports.city "
  },
  {
    "NatSQL": "select airlines.country , airlines.name , count ( routes.* )  from airlines  group by airlines.country , airlines.name "
  },
  {
    "NatSQL": "select airlines.country , airlines.name , count ( routes.* )  from airlines  group by airlines.country , airlines.name "
  },
  {
    "NatSQL": "select count ( routes.* )  from routes  where  airports.country = \"意大利\" "
  },
  {
    "NatSQL": "select count ( routes.* )  from routes  where  airports.country = \"意大利\" "
  },
  {
    "NatSQL": "select count ( routes.* )  from routes  where  airports.country = \"Italy\"  and  airlines.name = \"American Airlines\" "
  },
  {
    "NatSQL": "select count ( routes.* )  from routes  where  airports.country = \"Italy\"  and  airlines.name = \"American Airlines\" "
  },
  {
    "NatSQL": "select count ( routes.* )  from airports  where  airports.name = \"首都国际机场\" "
  },
  {
    "NatSQL": "select count ( routes.* )  from airports  where  airports.name = \"首都国际机场\" "
  },
  {
    "NatSQL": "select count ( routes.* )  from routes  where  routes.dst_apid in airports.*  and  airports.country = \"加拿大\"  and  @.@ in airports.*  and  airports.country = \"中国\" "
  },
  {
    "NatSQL": "select count ( routes.* )  from routes  where  routes.dst_apid in airports.*  and  airports.country = \"加拿大\"  and  @.@ in airports.*  and  airports.country = \"中国\" "
  },
  {
    "NatSQL": "select routes.rid from routes  where  routes.dst_apid in airports.*  and  airports.country = \"中国\"  and  @.@ in airports.*  and  airports.country = \"中国\" "
  },
  {
    "NatSQL": "select routes.rid from routes  where  routes.dst_apid in airports.*  and  airports.country = \"中国\"  and  @.@ in airports.*  and  airports.country = \"中国\" "
  },
  {
    "NatSQL": "select airlines.name from airlines  group by airlines.name  order by count ( routes.* )  desc limit 1"
  },
  {
    "NatSQL": "select airlines.name from airlines  group by airlines.name  order by count ( routes.* )  desc limit 1"
  },
  {
    "NatSQL": "select airports.name from airports  where  airports.country = \"中国\"  group by airports.name  order by count ( routes.* )  desc limit 1"
  },
  {
    "NatSQL": "select airports.name from airports  where  airports.country = \"中国\"  group by airports.name  order by count ( routes.* )  desc limit 1"
  },
  {
    "NatSQL": "select airports.name from airports  where  airports.country = \"中国\"  group by airports.name  order by count ( routes.* )  desc limit 1"
  },
  {
    "NatSQL": "select airports.name from airports  where  airports.country = \"中国\"  group by airports.name  order by count ( routes.* )  desc limit 1"
  },
  {
    "NatSQL": "select orders.order_id from orders  order by orders.date_order_placed desc limit 1"
  },
  {
    "NatSQL": "select orders.order_id from orders  order by orders.date_order_placed desc limit 1"
  },
  {
    "NatSQL": "select orders.order_id , orders.customer_id from orders  order by orders.date_order_placed asc limit 1"
  },
  {
    "NatSQL": "select orders.order_id , orders.customer_id from orders  order by orders.date_order_placed asc limit 1"
  },
  {
    "NatSQL": "select shipments.order_id from shipments  where  shipments.shipment_tracking_number = \"3452\" "
  },
  {
    "NatSQL": "select shipments.order_id from shipments  where  shipments.shipment_tracking_number = \"3452\" "
  },
  {
    "NatSQL": "select order_items.order_item_id from order_items  where  order_items.product_id = 11 "
  },
  {
    "NatSQL": "select order_items.order_item_id from order_items  where  order_items.product_id = 11 "
  },
  {
    "NatSQL": "select  distinct customers.customer_name from customers  where  orders.order_status = \"打包\" "
  },
  {
    "NatSQL": "select  distinct customers.customer_name from customers  where  orders.order_status = \"包装\" "
  },
  {
    "NatSQL": "select  distinct customers.customer_details from customers  where  orders.order_status = \"在路上\" "
  },
  {
    "NatSQL": "select  distinct customers.customer_details from customers  where  orders.order_status = \"在路上\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  group by customers.customer_id  order by count ( orders.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name from customers  group by customers.customer_id  order by count ( orders.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_id from customers  group by customers.customer_id  order by count ( orders.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_id from customers  group by customers.customer_id  order by count ( orders.* )  desc limit 1"
  },
  {
    "NatSQL": "select orders.order_id , orders.order_status from customers  where  customers.customer_name = \"兰兰\" "
  },
  {
    "NatSQL": "select orders.order_id , orders.order_status from customers  where  customers.customer_name = \"兰兰\" "
  },
  {
    "NatSQL": "select orders.date_order_placed from customers  where  customers.customer_name = \"兰兰\" "
  },
  {
    "NatSQL": "select orders.date_order_placed from customers  where  customers.customer_name = \"兰兰\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  orders.date_order_placed >= \"2009-01-01\"  and  orders.date_order_placed <= \"2010-01-01\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  orders.date_order_placed >= \"2009-01-01\"  and  orders.date_order_placed <= \"2010-01-01\" "
  },
  {
    "NatSQL": "select  distinct order_items.product_id from orders  where  orders.date_order_placed >= \"1975-01-01\"  and  orders.date_order_placed <= \"1976-01-01\" "
  },
  {
    "NatSQL": "select  distinct order_items.product_id from orders  where  orders.date_order_placed >= \"1975-01-01\"  and  orders.date_order_placed <= \"1976-01-01\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  orders.order_status = \"在路上\"  and  orders.order_status = \"装运\" "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  orders.order_status = \"在路上\"  and  orders.order_status = \"装运\" "
  },
  {
    "NatSQL": "select customers.customer_id from customers  where  orders.order_status = \"在路上\"  and  orders.order_status = \"装运\" "
  },
  {
    "NatSQL": "select customers.customer_id from customers  where  orders.order_status = \"在路上\"  and  orders.order_status = \"装运\" "
  },
  {
    "NatSQL": "select orders.date_order_placed from orders  where  shipments.shipment_tracking_number = 3452 "
  },
  {
    "NatSQL": "select orders.date_order_placed from orders  where  shipments.shipment_tracking_number = 3452 "
  },
  {
    "NatSQL": "select orders.date_order_placed from orders  where  shipments.invoice_number = 10 "
  },
  {
    "NatSQL": "select orders.date_order_placed from orders  where  shipments.invoice_number = 10 "
  },
  {
    "NatSQL": "select count ( orders.* )  , products.product_id from orders  group by products.product_id "
  },
  {
    "NatSQL": "select count ( orders.* )  , products.product_id from orders  group by products.product_id "
  },
  {
    "NatSQL": "select products.product_name , count ( orders.* )  from orders  group by products.product_id "
  },
  {
    "NatSQL": "select products.product_name , count ( orders.* )  from orders  group by products.product_id "
  },
  {
    "NatSQL": "select shipments.order_id from shipments  where  shipments.shipment_date > \"2000-01-01\" "
  },
  {
    "NatSQL": "select shipments.order_id from shipments  where  shipments.shipment_date > \"2000-01-01\" "
  },
  {
    "NatSQL": "select shipments.order_id from shipments  where  @.@ = max ( shipments.shipment_date )  "
  },
  {
    "NatSQL": "select shipments.order_id from shipments  where  @.@ = max ( shipments.shipment_date )  "
  },
  {
    "NatSQL": "select  distinct products.product_name from products  order by products.product_name asc"
  },
  {
    "NatSQL": "select  distinct products.product_name from products  order by products.product_name asc"
  },
  {
    "NatSQL": "select  distinct orders.order_id from orders  order by orders.date_order_placed asc"
  },
  {
    "NatSQL": "select  distinct orders.order_id from orders  order by orders.date_order_placed asc"
  },
  {
    "NatSQL": "select orders.order_id from orders  group by orders.order_id  order by count ( order_items.* )  desc limit 1"
  },
  {
    "NatSQL": "select orders.order_id from orders  group by orders.order_id  order by count ( order_items.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name from customers  group by customers.customer_id  order by count ( orders.* )  desc limit 1"
  },
  {
    "NatSQL": "select customers.customer_name from customers  group by customers.customer_id  order by count ( orders.* )  desc limit 1"
  },
  {
    "NatSQL": "select invoices.invoice_number from invoices  where  invoices.invoice_date < \"1989-09-03\"  or  invoices.invoice_date > \"2007-12-25\" "
  },
  {
    "NatSQL": "select invoices.invoice_number from invoices  where  invoices.invoice_date < \"1989-09-03\"  or  invoices.invoice_date > \"2007-12-25\" "
  },
  {
    "NatSQL": "select  distinct invoices.invoice_details from invoices  where  invoices.invoice_date < \"1989-09-03\"  or  invoices.invoice_date > \"2007-12-25\" "
  },
  {
    "NatSQL": "select  distinct invoices.invoice_details from invoices  where  invoices.invoice_date < \"1989-09-03\"  or  invoices.invoice_date > \"2007-12-25\" "
  },
  {
    "NatSQL": "select customers.customer_name , count ( orders.* )  from orders  where  count ( orders.* )  >= 2  group by customers.customer_id "
  },
  {
    "NatSQL": "select customers.customer_name , count ( orders.* )  from orders  where  count ( orders.* )  >= 2  group by customers.customer_id "
  },
  {
    "NatSQL": "select customers.customer_name from orders  where  count ( orders.* )  <= 2  group by customers.customer_id "
  },
  {
    "NatSQL": "select customers.customer_name from orders  where  count ( orders.* )  <= 2  group by customers.customer_id "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  products.product_name = \"食物\"  and  count ( customers.* )  >= 1  group by customers.customer_id "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  products.product_name = \"食品\"  and  count ( customers.* )  >= 1  group by customers.customer_id "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  order_items.order_item_status = \"取消\"  and  products.product_name = \"食品\"  and  count ( customers.* )  >= 1  group by customers.customer_id "
  },
  {
    "NatSQL": "select customers.customer_name from customers  where  order_items.order_item_status = \"取消\"  and  products.product_name = \"食品\"  and  count ( customers.* )  >= 1  group by customers.customer_id "
  },
  {
    "NatSQL": "select count ( architect.* )  from architect  where  architect.gender = \"女\" "
  },
  {
    "NatSQL": "select architect.name , architect.nationality , architect.id from architect  where  architect.gender = \"男\"  order by architect.name asc"
  },
  {
    "NatSQL": "select max ( bridge.length_meters )  , architect.name from bridge "
  },
  {
    "NatSQL": "select avg ( bridge.length_feet )  from bridge "
  },
  {
    "NatSQL": "select mill.name , mill.built_year from mill  where  mill.type = \"风车\" "
  },
  {
    "NatSQL": "select  distinct architect.name , architect.nationality from architect  where  @.@ join mill.* "
  },
  {
    "NatSQL": "select mill.name from mill  where  mill.location != \"长沙\" "
  },
  {
    "NatSQL": "select  distinct mill.type from mill  where  architect.nationality = \"美国\"  or  architect.nationality = \"加拿大\" "
  },
  {
    "NatSQL": "select architect.id , architect.name from architect  where  count ( bridge.* )  >= 3  group by architect.id "
  },
  {
    "NatSQL": "select architect.id , architect.name , architect.nationality from architect  group by architect.id  order by count ( mill.* )  desc limit 1"
  },
  {
    "NatSQL": "select architect.id , architect.name , architect.gender from architect  where  count ( bridge.* )  = 2  or  count ( mill.* )  = 1  group by architect.id "
  },
  {
    "NatSQL": "select bridge.location from bridge  where  bridge.name = \"长江大桥\"  or  bridge.name = \"赵州桥\" "
  },
  {
    "NatSQL": "select mill.name from mill  where  mill.name like \"%江%\" "
  },
  {
    "NatSQL": "select  distinct mill.name from mill  where  bridge.length_meters > 80 "
  },
  {
    "NatSQL": "select mill.type , count ( mill.* )  from mill  group by mill.type  order by count ( mill.* )  desc limit 1"
  },
  {
    "NatSQL": "select count ( architect.* )  from architect  where  @.@ not in mill.*  and  mill.built_year < 1850 "
  },
  {
    "NatSQL": "select bridge.name from bridge  where  architect.nationality = \"美国\"  order by bridge.length_feet asc"
  },
  {
    "NatSQL": "select count ( book_club.* )  from book_club "
  },
  {
    "NatSQL": "select count ( book_club.* )  from book_club "
  },
  {
    "NatSQL": "select book_club.Book_Title , book_club.Author_or_Editor from book_club  where  book_club.Year > 1989 "
  },
  {
    "NatSQL": "select book_club.Book_Title , book_club.Author_or_Editor from book_club  where  book_club.Year > 1989 "
  },
  {
    "NatSQL": "select  distinct book_club.Publisher from book_club "
  },
  {
    "NatSQL": "select  distinct book_club.Publisher from book_club "
  },
  {
    "NatSQL": "select book_club.Year , book_club.Book_Title , book_club.Publisher from book_club  order by book_club.Year desc"
  },
  {
    "NatSQL": "select book_club.Year , book_club.Book_Title , book_club.Publisher from book_club  order by book_club.Year desc"
  },
  {
    "NatSQL": "select book_club.Publisher , count ( book_club.* )  from book_club  group by book_club.Publisher "
  },
  {
    "NatSQL": "select book_club.Publisher , count ( book_club.* )  from book_club  group by book_club.Publisher "
  },
  {
    "NatSQL": "select book_club.Publisher from book_club  group by book_club.Publisher  order by count ( book_club.* )  desc limit 1"
  },
  {
    "NatSQL": "select book_club.Publisher from book_club  group by book_club.Publisher  order by count ( book_club.* )  desc limit 1"
  },
  {
    "NatSQL": "select book_club.Category , count ( book_club.* )  from book_club  group by book_club.Category "
  },
  {
    "NatSQL": "select book_club.Category , count ( book_club.* )  from book_club  group by book_club.Category "
  },
  {
    "NatSQL": "select book_club.Category from book_club  where  book_club.Year > 1989  and  count ( book_club.* )  >= 2  group by book_club.Category "
  },
  {
    "NatSQL": "select book_club.Category from book_club  where  book_club.Year > 1989  and  count ( book_club.* )  >= 2  group by book_club.Category "
  },
  {
    "NatSQL": "select book_club.Publisher from book_club  where  book_club.Year = 1989  and  book_club.Year = 1990 "
  },
  {
    "NatSQL": "select book_club.Publisher from book_club  where  book_club.Year = 1989  and  book_club.Year = 1990 "
  },
  {
    "NatSQL": "select book_club.Publisher from book_club  where  except_  @.@ is book_club.*  and  book_club.Year = 1989 "
  },
  {
    "NatSQL": "select book_club.Publisher from book_club  where  except_  @.@ is book_club.*  and  book_club.Year = 1989 "
  },
  {
    "NatSQL": "select movie.Title , movie.Year , movie.Director from movie  order by movie.Budget_million asc"
  },
  {
    "NatSQL": "select movie.Title , movie.Year , movie.Director from movie  order by movie.Budget_million asc"
  },
  {
    "NatSQL": "select count (  distinct movie.Director )  from movie "
  },
  {
    "NatSQL": "select count (  distinct movie.Director )  from movie "
  },
  {
    "NatSQL": "select movie.Title , movie.Director from movie  where  movie.Year <= 2000  order by movie.Gross_worldwide desc limit 1"
  },
  {
    "NatSQL": "select movie.Title , movie.Director from movie  where  movie.Year <= 2000  order by movie.Gross_worldwide desc limit 1"
  },
  {
    "NatSQL": "select movie.Director from movie  where  movie.Year = 2000  and  movie.Year = 1999 "
  },
  {
    "NatSQL": "select movie.Director from movie  where  movie.Year = 2000  and  movie.Year = 1999 "
  },
  {
    "NatSQL": "select movie.Director from movie  where  movie.Year = 1999  or  movie.Year = 2000 "
  },
  {
    "NatSQL": "select movie.Director from movie  where  movie.Year = 1999  or  movie.Year = 2000 "
  },
  {
    "NatSQL": "select avg ( movie.Budget_million )  , max ( movie.Budget_million )  , min ( movie.Budget_million )  from movie  where  movie.Year < 2000 "
  },
  {
    "NatSQL": "select avg ( movie.Budget_million )  , max ( movie.Budget_million )  , min ( movie.Budget_million )  from movie  where  movie.Year < 2000 "
  },
  {
    "NatSQL": "select culture_company.Company_name from culture_company  where  book_club.Publisher = \"中国社会科学出版社\" "
  },
  {
    "NatSQL": "select culture_company.Company_name from culture_company  where  book_club.Publisher = \"中国社会科学出版社\" "
  },
  {
    "NatSQL": "select movie.Title , book_club.Book_Title from movie  where  culture_company.Incorporated_in = \"中国\" "
  },
  {
    "NatSQL": "select movie.Title , book_club.Book_Title from movie  where  culture_company.Incorporated_in = \"中国\" "
  },
  {
    "NatSQL": "select culture_company.Company_name from movie  where  movie.Year = 1999 "
  },
  {
    "NatSQL": "select culture_company.Company_name from movie  where  movie.Year = 1999 "
  }
]